Option Explicit
'=======================================================================================
'Unifloc 7.51  2025.03                                    khabibullinra@gmail.com
'Petroleum engineering calculations modules (macroses)
'2000 - 2025
'
'=======================================================================================
' функции для расчета параметров технологического режима добывающих скважин
' унаследованные функции из тех режима для обеспечения совместимости и совместных расчетов
' названия изменены (префикс) для обеспечения совместимости надстройки со старыми файлами
'
' для расчетов лучше использовать функции новые (без префикса old_)!!!
'
'
'версия для Унифлок 7.1 26/01/2018
'       Все модули тех режима объединены в один и изменены названия функций (префикс tr_) для исключения
'       конфликтов со старыми версия файлоы, где код вне надстройки
'версия 0.9.14   15 Января 2007 г.
'       Изменена функция расчета потенциального забойного давления Potencial_p_wf с учетом глубины спуска
'версия 0.9.13   13 Сентября 2006 г.
'       Добавлена функция расчета потенциального забойного давления Potencial_p_wf
'версия 0.9.12   2 Июня 2006 г.
'       Изменен расчет забойного давления для нерентабельных фонтанов, добавлен учет струйных насосов
'       (в кач-ве текущего берется потенциальное забойное давление)
'       На листе анализ решена проблема с переносом графиков
'версия 0.9.11   20 Июля 2005 г.
'       Исправлена функция BB_p_wf,раньше выводилось значение 0
'версия 0.9.10   19 Июля 2005 г.
'       Исправлен расчет дебита в функции Qvogel_fw_perc для нулевой обводненности
'версия 0.9.9   13 Мая 2005 г.
'       Вместо функций CheckErrors_p_wf и CheckErrors_BegsBrill сделана одна функция CheckErrors
'       Для фонтанных скважин забойное давление вычисляется по внутреннему диаметру НКТ = Dnkt-11
'       В функцию CheckErrors добавлена проверка на "число ли параметр"
'версия 0.9.8   29 Апреля 2005 г.
'       В функциях pwf_calc, BB_p_wf, PPump_calc и N_calc введена корреляция на ГФ>200 производится расчет pb_atma и bo_m3m3
'версия 0.9.7   28 Апреля 2005 г.
'       В функциях CheckErrors_p_wf и CheckErrors_BegsBrill Разрешен ГФ = 0, 0 <= Рнас <= 500
'версия 0.9.6   6 Апреля 2005 г.
'       В N_calc добавлена функция проверки на ошибочные данные(Соколов Сергей)
'       Расчет забойного давления через динамический уровень
'версия 0.9.5   28 марта 2005 г.
'       расчет N_calc модернизирован. При попадании в область неоднозначно N= N+10000
'       Обработка ошибок в фиункциях pwf_cacl  Ppump_calc при неправиьлных входных значениях - возвращсет строку ошибки
'версия 0.9.4   28 марта 2005 г.  (Соколов Сергей)
'       в функциях  pwf_calc, N_calc введена пластовая температура вместо температуры в затрубе
'версия 0.9.3   24 марта 2005 г.
'       добавлена корреляция Хасанова для расчета выше насоса tr_HydCor = 3
'       добавлена модификация Хасана Кабира выше насоса c0=2 для tr_HydCor = 4
'       добавлена функция  N_calc - характеристика наличия неоднозначности в определении заб дав
'версия 0.9.2   24 марта 2005 г.
'       добавлена функция Ppump_calc для расчета давления на приеме по данным ТNH
'       добавлены функции pi_from_rate, Qvogel в модуль Module_utils
'       добавлена функция L_Pin
'версия 0.9.2   23 марта 2005 г.
'       исправлена обработка нулевого дебита жидкости
'версия 0.9.1   23 марта 2005 г.
'       исправлен расчет давления на приеме насоса при нулевой высоте подвеса и нулевом дин. уровне
'       исправлен расчет давления на забое при давлении на приеме большем дав. нас. ф-ия Lwd_p_wfd_ro, Lwd_p_wfd_pshl
'версия 0.9.8  01 Апреля
'       Модуль Utils_module переименован в mdlTecRegimes
'версия 0.9.7   31 марта 2005 г.
'       Исправлены ошибки в проверке исходных данных
'версия 0.9.6   29 марта 2005 г.
'       Добавлена функция CheckErrors
'       Обработка ошибок в функции BB_p_wf - при неправиьлных входных значениях
'       возвращает ошибку в ячейку Рзаб
'версия 0.8   23 мартв 2005 г.
'       исправлен расчет при bo_m3m3 = 1
'       исправлена ошибка при расчете режимов потока ниже насоса
'       при расчете давления выше насоса выдается максимальное решение в случае наличия неоднозначности
'       pwf_calc выдаеет значение в атм. все остальные в барах
'версия 0.7.1   22 мартв 2005 г.
'       добавлена функция pwf_calc для расчета по измеренным величинам глубин (по удлинению)
'       ввод дебитов как в тех режиме (жидкость обводненность и ГФ) в pwf_calc
'       исправлен расчет при давлении на приеме насоса равном давлению насыщения
'версия 0.6   19 марта 2005г.
'       Реализован расчет с учетом изменения плотности при изменении давления
'версия 0.5    16 марта 2005 гu/
'       добавлены функции расчета забойного давления и давления на приеме насоса
'       pwf_rs_m3m3,pwf_Qgmes,Pin_rs_m3m3,Pin_Qgmes
'       удалены отладочные версии функций
'версия 0.4    15 марта 2005 г.
'       Перписан подсчет высоты столба жидкости под насосом (функция Lwd_p_wfd_pshl)
'       Перписано определение забойного давления по высоте столба под насосом,
'       применен метод деления отрезка пополам (функция p_wfd_Pind_pshl)
'версия 0.3    14 марта 2005 г.
'       Отлажена предварительная версия расчета ниже приема насоса
'версия 0.2     10 марта 2005 г.
'       исправлен расчет давления на приеме насоса для давлений на приеме выше давления насыщения
'       в случае наличия неоднозначности при расчете давления на приеме ищется минимальное возможное давление
'
'
'*******************************************************************************************************
'
'
'*******************************************************************************************************
' функция расчета забойного давления с учетом удлинения, atma
' входные параметры адаптированы для данных тех режима скважин
' возвращает абсолютное значение давления!
Public Function old_pwf_calc_atma(ksep_fr, Hvd_m, Udl_Hvd_m, _
        h_pump_m, d_cas_mm, _
        h_dyn_m, Pcas_atmg, pb_atma, rp_m3t, q_liq_sm3day, _
        Optional bo_m3m3 = 1.2, Optional gamma_oil = 860, _
        Optional fw_perc = 0, Optional gamma_wat = 1000, _
        Optional Qg_mes_sm3day = -1, Optional tr_HydCor = 2, _
        Optional dtub_mm = 60, Optional bw_m3m3 = 1, _
        Optional t_res_C = 60, _
        Optional Zav = 0.9, Optional gamma_gas = 0.8, _
        Optional Udl_h_pump_m As Double = -1, _
        Optional Udl_h_dyn_m As Double = -1)
' ksep_fr       - коэффициент сепарации насоса, доли
' Hvd_m         - глубина верхних дыр перфорации, измеренная, м
' Udl_Hvd_m     - удлинение на глубину верхних дыр перфорации, м
' h_pump_m       - глубина спуска насоса, измеренная, м
' d_cas_mm       - внутренний диаметр эксплуатационной коллоны, мм
' h_dyn_m        - динамический уровень измеренный, м
' Pcas_atmg     - затрубное давление, атм избыточное
' pb_atma       - давление насыщения, атм абсолютное
' rp_m3t        - газовый фактор, м3/т
' q_liq_sm3day   - дебит жидкости в стандартных условиях, м3/сут
'                   опциональные параметры
' bo_m3m3       - объемный коэффициент нефти, м3/м3
' gamma_oil     - плотность нефти в стандартных условиях, г/см3
' fw_perc       - обводненность в стандартных условиях, %
' gamma_wat     - плотность воды, кг/м3
' Qg_mes_sm3day - замер расхода газа в затрубе,
'                например по отжиму. если < 0 игнорируется
' tr_HydCor   -  корреляция для расчета градиента давления
' Dtub_mm = 60  - внешний диаметр НКТ, мм
' Bw_m3m3 = 1   - объемный коэффициент для воды
' t_res_C = 60   - температура пластовая, C
' Zav = 0.9     - сверхсжимаемость газа в затрубе
' GammaGas=0.8  - плотность газа
' Udl_h_pump_m   - удлинение на глубину спуска насоса
' Udl_h_dyn_m    - удлинение на глубину динамического уровня
Dim PinD As Double ' безразмерное давление на приеме насоса
Dim HPerfAbs As Double ' абсолютное значение глубины верхних дыр перфорации
Dim HpumpAbs As Double ' абсолютное значение глубины подвеса насоса
Dim HdinAbs As Double ' абсолютное значение глубины динамического уровня
Dim q_oil_m3day As Double   ' объемный расход нефти
Dim rs_m3m3 As Double   ' объемный газовый фактор
Dim qw_m3day As Double   ' объемный расход воды
Dim wc_d As Double     ' обводненность  в долях
Dim Tav As Double      ' температура в затрубе средняя, C
Dim pb_atma_calc As Double
Dim bo_m3m3_calc As Double
Dim err_msg As String
Dim Qgsc As Double  ' дебит газа в затрубе в стандартных условиях
    If t_res_C = 0 Then t_res_C = 60
    If dtub_mm = 0 Then dtub_mm = 60
    Call corelations_for_high_GOR(rp_m3t * gamma_oil, t_res_C, gamma_oil, _
                                  gamma_gas, pb_atma, bo_m3m3, pb_atma_calc, bo_m3m3_calc)
    Tav = 0.8 * t_res_C + 0.2 * const_tsc_C ' расчет средней температуры в затрубе
    If CheckErrors(err_msg, Hvd_m, Udl_Hvd_m, h_pump_m, d_cas_mm, pb_atma, rp_m3t, _
                    bo_m3m3, gamma_oil, fw_perc, _
                    dtub_mm, t_res_C, , , Pcas_atmg, ksep_fr, h_dyn_m, q_liq_sm3day, _
                    gamma_wat, Qg_mes_sm3day, bw_m3m3, Zav, 1, Udl_h_pump_m) Then
        old_pwf_calc_atma = err_msg
        Exit Function
    End If
    If pb_atma_calc < Pcas_atmg Then
        pb_atma_calc = Pcas_atmg
    End If
    wc_d = fw_perc / 100
    qw_m3day = q_liq_sm3day * wc_d
    q_oil_m3day = q_liq_sm3day * (1 - wc_d)
    rs_m3m3 = rp_m3t * gamma_oil
    ' пересчитаем абсолютные значения из измеренных
    HPerfAbs = Hvd_m - Udl_Hvd_m
    HpumpAbs = h_pump_m * (1 - Udl_Hvd_m / Hvd_m) ' предполагаем, что удлинение на насос не задано
    HdinAbs = h_dyn_m * (1 - Udl_Hvd_m / Hvd_m)
    If Not IsEmpty(Udl_h_pump_m) And Udl_h_pump_m > 0 Then HpumpAbs = h_pump_m - Udl_h_pump_m
    If Not IsEmpty(Udl_h_dyn_m) And Udl_h_dyn_m > 0 Then HdinAbs = h_pump_m - Udl_h_dyn_m
    ' вычислим дебит газа для расчета выше насоса
    If Qg_mes_sm3day <= 0 Then
        Qgsc = q_oil_m3day * rs_m3m3 * ksep_fr
        old_pwf_calc_atma = pwf_Qgmes_atma(Qgsc, HPerfAbs, HpumpAbs, HdinAbs, rs_m3m3, pb_atma_calc, Pcas_atmg, _
                                q_oil_m3day, bo_m3m3_calc, gamma_oil, qw_m3day, gamma_wat, d_cas_mm, _
                                tr_HydCor, dtub_mm, bw_m3m3, Tav + 273, Zav, False)
    Else
        old_pwf_calc_atma = pwf_Qgmes_atma(Qg_mes_sm3day, HPerfAbs, HpumpAbs, HdinAbs, rs_m3m3, pb_atma_calc, Pcas_atmg, _
                                q_oil_m3day, bo_m3m3_calc, gamma_oil, qw_m3day, gamma_wat, d_cas_mm, _
                                tr_HydCor, dtub_mm, bw_m3m3, Tav + 273, Zav, True)
    End If
End Function
' функция расчета забойного давления по давлению на приеме, atma
' входные параметры адаптированы для данных тех режима скважин
' возвращает абсолютное значение давления!
Public Function old_pwf_calc_p_intake_atma(Pin_atmg As Double, _
        Hvd_m As Double, Udl_Hvd_m As Double, h_pump_m As Double, _
        d_cas_mm As Double, pb_atma As Double, rp_m3t As Double, _
        q_liq_sm3day As Double, _
        Optional bo_m3m3 = 1.2, Optional gamma_oil = 860, _
        Optional fw_perc = 0, Optional gamma_wat = 1000, _
        Optional Qg_mes_sm3day As Double = -1, _
        Optional tr_HydCor As Integer = 2, _
        Optional bw_m3m3 As Double = 1, _
        Optional t_res_C As Double = 60, _
        Optional Zav As Double = 0.9, _
        Optional gamma_gas As Double = 0.8, _
        Optional Udl_h_pump_m As Double = -1)
' Входные параметры
' Pin_atmg      - давление на приеме насоса, измеренное, атм
' Hvd_m         - глубина верхних дыр перфорации, измеренная, м
' Udl_Hvd_m     - удлинение на глубину верхних дыр перфорации, м
' h_pump_m       - глубина спуска насоса, измеренная, м
' d_cas_mm       - внутренний диаметр эксплуатационной коллоны, мм
' pb_atma       - давление насыщения, атм абсолютное
' rp_m3t        - газовый фактор, м3/т
' q_liq_sm3day   - дебит жидкости в стандартных условиях, м3/сут
'               опциональные параметры
' bo_m3m3       - объемный коэффициент нефти, м3/м3
' gamma_oil     - плотность нефти в стандартных условиях, г/см3
' fw_perc       - обводненность в стандартных условиях, %
' gamma_wat     - плотность воды, кг/м3
' Qg_mes_sm3day - замер расхода газа в затрубе,
'               например по отжиму. если < 0 игнорируется
' tr_HydCor   - корреляция для расчета градиента давления
' Dtub_mm = 60  - внешний диаметр НКТ, мм
' Bw_m3m3 = 1   - объемный коэффициент для воды
' t_res_C = 60   - температура пластовая, C
' Zav = 0.9     - сверхсжимаемость газа в затрубе
' GammaGas=0.8  - плотность газа
' Udl_h_pump_m   - удлинение на глубину спуска насоса,м
Dim PinD As Double ' безразмерное давление на приеме насоса
Dim HPerfAbs As Double ' абсолютное значение глубины верхних дыр перфорации
Dim HpumpAbs As Double ' абсолютное значение глубины подвеса насоса
Dim Qo_vol As Double   ' объемный расход нефти
Dim rs_m3m3 As Double   ' объемный газовый фактор
Dim Qw_vol As Double   ' объемный расход воды
Dim fw_perc_d As Double     ' обводненность  в долях
Dim Tav As Double      ' температура в затрубе средняя, C
Dim pb_atma_calc As Double
Dim bo_m3m3_calc As Double
Dim err_msg As String
   
    If t_res_C = 0 Then t_res_C = 60
    Call corelations_for_high_GOR(rp_m3t * gamma_oil, t_res_C, _
            gamma_oil, gamma_gas, pb_atma, bo_m3m3, pb_atma_calc, bo_m3m3_calc)
    ' расчет средней температуры в затрубе
    Tav = 0.8 * t_res_C + 0.2 * const_tsc_C
    If CheckErrors(err_msg, Hvd_m, Udl_Hvd_m, h_pump_m, d_cas_mm, _
                    pb_atma, rp_m3t, bo_m3m3, gamma_oil, fw_perc, _
                    60, t_res_C, , , , , , q_liq_sm3day, gamma_wat, _
                    Qg_mes_sm3day, bw_m3m3, Zav, 1) Then
        old_pwf_calc_p_intake_atma = err_msg
        Exit Function
    End If
    If pb_atma_calc < 1 Then pb_atma_calc = 1
    fw_perc_d = fw_perc / 100
    Qw_vol = q_liq_sm3day * fw_perc_d
    Qo_vol = q_liq_sm3day * (1 - fw_perc_d)
    rs_m3m3 = rp_m3t * gamma_oil
    ' пересчитаем абсолютные значения из измеренных
    HPerfAbs = Hvd_m - Udl_Hvd_m
    HpumpAbs = h_pump_m * (1 - Udl_Hvd_m / Hvd_m) ' предполагаем, что удлинение на насос не задано
    If Not IsEmpty(Udl_h_pump_m) And Udl_h_pump_m > 0 Then HpumpAbs = h_pump_m - Udl_h_pump_m
    ' вычислим дебит газа для расчета выше насоса
    old_pwf_calc_p_intake_atma = pwf_p_intake_atma(Pin_atmg, HPerfAbs, HpumpAbs, rs_m3m3, pb_atma_calc, _
                                Qo_vol, bo_m3m3_calc, gamma_oil, Qw_vol, gamma_wat, d_cas_mm, _
                                tr_HydCor, bw_m3m3, Tav + 273, Zav)
End Function
' функция расчета  давления давления на приеме по дин уровню
' входные параметры адаптированы для данных тех режима скважин
' возвращает абсолютное значение давления!
Public Function old_Ppump_calc_atma(ByVal ksep_fr As Double, _
        ByVal Hvd_m As Double, ByVal Udl_Hvd_m As Double, _
        ByVal h_pump_m As Double, ByVal d_cas_mm As Double, _
        ByVal h_dyn_m As Double, ByVal Pcas_atmg As Double, _
        ByVal pb_atma As Double, ByVal rs_m3t As Double, _
        ByVal q_liq_sm3day As Double, _
        Optional ByVal bo_m3m3 As Double = 1.2, _
        Optional ByVal gamma_oil As Double = 860, _
        Optional ByVal fw_perc As Double = 0, _
        Optional ByVal gamma_wat As Double = 1000, _
        Optional ByVal Qg_mes_sm3day As Double = -1, _
        Optional ByVal tr_HydCor As Integer = 2, _
        Optional ByVal dtub_mm As Double = 60, _
        Optional ByVal bw_m3m3 As Double = 1, _
        Optional ByVal t_res_C As Double = 60, _
        Optional ByVal Zav As Double = 0.9, _
        Optional ByVal gamma_gas As Double = 0.8, _
        Optional ByVal Udl_h_pump_m As Double = -1, _
        Optional ByVal Udl_h_dyn_m As Double = -1)
' ksep_fr       - коэффициент сепарации насоса, доли
' Hvd_m         - глубина верхних дыр перфорации, измеренная, м
' Udl_Hvd_m     - удлинение на глубину верхних дыр перфорации, м
' h_pump_m       - глубина спуска насоса, измеренная, м
' d_cas_mm       - внутренний диаметр эксплуатационной коллоны, мм
' h_dyn_m        - динамический уровень измеренный, м
' Pcas_atmg     - затрубное давление, атм избыточное
' pb_atma       - давление насыщения, атм абсолютное
' rp_m3t        - газовый фактор, м3/т
' q_liq_sm3day   - дебит жидкости в стандартных условиях, м3/сут
'                   опциональные параметры
' bo_m3m3       - объемный коэффициент нефти, м3/м3
' gamma_oil     - плотность нефти в стандартных условиях, г/см3
' fw_perc       - обводненность в стандартных условиях, %
' gamma_wat     - плотность воды, кг/м3
' Qg_mes_sm3day - замер расхода газа в затрубе,
'                например по отжиму. если < 0 игнорируется
' tr_HydCor   -  корреляция для расчета градиента давления
' Dtub_mm = 60  - внешний диаметр НКТ, мм
' Bw_m3m3 = 1   - объемный коэффициент для воды
' t_res_C = 60   - температура пластовая, C
' Zav = 0.9     - сверхсжимаемость газа в затрубе
' GammaGas=0.8  - плотность газа
' Udl_h_pump_m   - удлинение на глубину спуска насоса
' Udl_h_dyn_m    - удлинение на глубину динамического уровня
Dim PinD As Double ' безразмерное давление на приеме насоса
Dim HPerfAbs As Double ' абсолютное значение глубины верхних дыр перфорации
Dim HpumpAbs As Double ' абсолютное значение глубины подвеса насоса
Dim HdinAbs As Double ' абсолютное значение глубины динамического уровня
Dim q_oil_m3day As Double   ' объемный расход нефти
Dim rs_m3m3 As Double   ' объемный газовый фактор
Dim qw_m3day As Double   ' объемный расход воды
Dim fw_perc_d As Double     ' обводненность  в долях
Dim Tav As Double      ' температура в затрубе средняя, К
Dim pb_atma_calc As Double
Dim bo_m3m3_calc As Double
Dim err_msg As String
Dim Qgsc As Double  ' дебит газа в затрубе в стандартных условиях
    If t_res_C = 0 Then t_res_C = 60
        Call corelations_for_high_GOR(rs_m3t * gamma_oil, t_res_C, _
                gamma_oil, gamma_gas, pb_atma, bo_m3m3, pb_atma_calc, bo_m3m3_calc)
    If CheckErrors(err_msg, Hvd_m, Udl_Hvd_m, h_pump_m, d_cas_mm, pb_atma, _
                    rs_m3t, bo_m3m3, gamma_oil, fw_perc, _
                    dtub_mm, t_res_C, , , Pcas_atmg, ksep_fr, _
                    h_dyn_m, q_liq_sm3day, gamma_wat, Qg_mes_sm3day, bw_m3m3, Zav, 1) Then
     old_Ppump_calc_atma = err_msg
     Exit Function
    End If
    ' расчет средней температуры в затрубе
    Tav = 0.8 * t_res_C + 0.2 * const_tsc_C
    fw_perc_d = fw_perc / 100
    qw_m3day = q_liq_sm3day * fw_perc_d
    q_oil_m3day = q_liq_sm3day * (1 - fw_perc_d)
    rs_m3m3 = rs_m3t * gamma_oil
    ' пересчитаем абсолютные значения из измеренных
    HPerfAbs = Hvd_m - Udl_Hvd_m
    HpumpAbs = h_pump_m * (1 - Udl_Hvd_m / Hvd_m) ' предполагаем, что удлинение на насос не задано
    HdinAbs = h_dyn_m * (1 - Udl_Hvd_m / Hvd_m)
    If Not IsEmpty(Udl_h_pump_m) And Udl_h_pump_m > 0 Then HpumpAbs = h_pump_m - Udl_h_pump_m
    If Not IsEmpty(Udl_h_dyn_m) And Udl_h_dyn_m > 0 Then HdinAbs = h_pump_m - Udl_h_dyn_m
    ' вычислим дебит газа для расчета выше насоса
    If Qg_mes_sm3day <= 0 Then
        Qgsc = q_oil_m3day * rs_m3m3 * ksep_fr
        old_Ppump_calc_atma = Pin_Qgmes_atma(Qgsc, HpumpAbs, HdinAbs, pb_atma_calc, Pcas_atmg, _
                           bo_m3m3_calc, gamma_oil, d_cas_mm, _
                           tr_HydCor, dtub_mm, Tav + 273, Zav, False)
    Else
        old_Ppump_calc_atma = Pin_Qgmes_atma(Qg_mes_sm3day, HpumpAbs, HdinAbs, pb_atma_calc, Pcas_atmg, _
                           bo_m3m3_calc, gamma_oil, d_cas_mm, _
                           tr_HydCor, dtub_mm, Tav + 273, Zav, True)
    End If
End Function
' Расчет забойного давления фонтанирующей скважины
' расчет проводится по методике Беггса Брилла
' расчет зависит от известного значения буферного давления
Public Function old_BB_p_wf_atma(dcas_in_mm, Hvd_m, h_pump_m, _
        Udl_Hvd_m, pbuf_atmg, q_liq_sm3day, fw_perc, rp_m3t, _
        gamma_oil, pb_atma, bo_m3m3, _
        Optional t_res_C = 60, _
        Optional dtub_out_mm = 72, _
        Optional gamma_gas = 0.8, _
        Optional Udl_h_pump_m As Double = -1)
' d_cas_mm       - внутренний диаметр эксплуатационной коллоны, мм
' Hvd_m         - глубина верхних дыр перфорации, измеренная, м
' h_pump_m       - глубина спуска насоса, измеренная, м
' Udl_Hvd_m     - удлинение на глубину верхних дыр перфорации, м
' pbuf_atmg     - буферное давление, атм избыточное
' q_liq_sm3day   - дебит жидкости в стандартных условиях, м3/сут
' fw_perc       - обводненность в стандартных условиях, %
' rp_m3t        - газовый фактор, м3/т
' gamma_oil     - плотность нефти в стандартных условиях, г/см3
' pb_atma       - давление насыщения, атм абсолютное
' bo_m3m3       - объемный коэффициент нефти, м3/м3
' t_res_C = 60   - температура пластовая, C
' Dtub_mm = 72  - внешний диаметр НКТ, мм
' GammaGas=0.8  - плотность газа
' Udl_h_pump_m   - удлинение на глубину спуска насоса
Dim angle, Angle1 As Double
Dim p_atma As Double
Dim pbuf_atma As Double
Dim L1 As Double, L2 As Double
Dim pb_atma_calc As Double
Dim bo_m3m3_calc As Double
Dim err_msg As String
'Dim Qo_sm3day As Double
On Error GoTo Er
   pb_atma_calc = pb_atma
   bo_m3m3_calc = bo_m3m3
   If t_res_C = 0 Then t_res_C = 60
   If dtub_out_mm < 20 Then dtub_out_mm = 71
   dtub_out_mm = dtub_out_mm - 11 ' Переводим внешний диаметр НКТ во внутренний
 '  Qo_sm3day = q_liq_sm3day * (1 - fw_perc / 100)
  ' Call corelations_for_high_GOR(rp_m3t * gamma_oil, t_res_C, gamma_oil, gamma_gas, pb_atma, bo_m3m3, pb_atma_calc, bo_m3m3_calc)
   
   If Udl_h_pump_m = -1 Then Udl_h_pump_m = h_pump_m * (Udl_Hvd_m / Hvd_m)
   If h_pump_m > Hvd_m Then
        h_pump_m = Hvd_m
        Udl_h_pump_m = Udl_Hvd_m
   End If
      
   If CheckErrors(err_msg, Hvd_m, Udl_Hvd_m, h_pump_m, dcas_in_mm, _
                pb_atma_calc, rp_m3t, bo_m3m3_calc, gamma_oil, _
                fw_perc, dtub_out_mm, t_res_C, pbuf_atmg, q_liq_sm3day) Then
        old_BB_p_wf_atma = err_msg
        Exit Function
   End If
   
   ' расчет для фонтанирующих скважин только с учетом газового фактора (дав нас и об коэф вычисляются внутри)
   'pb_atma_calc = -1
   'bo_m3m3_calc = -1
   pbuf_atma = pbuf_atmg + const_psc_atma
   angle = ArcSin(1 - Udl_h_pump_m / h_pump_m) * 180 / const_Pi ' calculate well inclination angle
   ' calculate pressure in NKT
   L1 = h_pump_m
   p_atma = BB_P_In(dtub_out_mm / 1000, L1, angle, pbuf_atma, t_res_C, _
                    q_liq_sm3day, fw_perc / 100, gamma_oil, gamma_gas, _
                    rp_m3t * gamma_oil, , , 40, , pb_atma_calc, bo_m3m3_calc)
   ' calculate pressure below NKT
   L2 = Hvd_m - h_pump_m
   If L2 > 0 Then
        Angle1 = ArcSin(1 - (Udl_Hvd_m - Udl_h_pump_m) / (Hvd_m - h_pump_m)) * 180 / const_Pi
        p_atma = BB_P_In(dcas_in_mm / 1000, L2, Angle1, p_atma, t_res_C, _
                    q_liq_sm3day, fw_perc / 100, gamma_oil, _
                    gamma_gas, rp_m3t * gamma_oil, , , 40, , _
                    pb_atma_calc, bo_m3m3_calc)
   End If
   old_BB_p_wf_atma = p_atma ' return sum of pressures
   Exit Function
Er:
   old_BB_p_wf_atma = 0
End Function
'расчет забойного давления через давление на приеме насоса
'выполняется по корреляции Беггса Брилла
Public Function old_BB_pwf_p_intake_atma(d_cas_mm, Hvd_m, h_pump_m, _
        Udl_Hvd_m, Pin_atmg, q_liq_sm3day, fw_perc, rp_m3t, _
        gamma_oil, pb_atma, bo_m3m3, Optional t_res_C = 60, _
        Optional dtub_mm = 72, Optional gamma_gas = 0.8, _
        Optional Udl_h_pump_m = 0)
' d_cas_mm       - внутренний диаметр эксплуатационной коллоны, мм
' Hvd_m         - глубина верхних дыр перфорации, измеренная, м
' h_pump_m       - глубина спуска насоса, измеренная, м
' Udl_Hvd_m     - удлинение на глубину верхних дыр перфорации, м
' Pin_atmg      - давление на приеме, атм избыточное
' q_liq_sm3day   - дебит жидкости в стандартных условиях, м3/сут
' fw_perc       - обводненность в стандартных условиях, %
' rp_m3t        - газовый фактор, м3/т
' gamma_oil     - плотность нефти в стандартных условиях, г/см3
' pb_atma       - давление насыщения, атм абсолютное
' bo_m3m3       - объемный коэффициент нефти, м3/м3
' t_res_C = 60   - температура пластовая, C
' Dtub_mm = 72  - внешний диаметр НКТ, мм
' GammaGas=0.8  - плотность газа
' Udl_h_pump_m   - удлинение на глубину спуска насоса
   
Dim angle As Double
Dim p_atma As Double
Dim p_intake_atma As Double
Dim L1 As Double, L2 As Double
Dim Qo_sm3day As Double
Dim pb_atma_calc As Double
Dim bo_m3m3_calc As Double
Dim Dan As Double
Dim err_msg As String
Dim p2 As Double
On Error GoTo Er
     pb_atma_calc = pb_atma
     bo_m3m3_calc = bo_m3m3
     
     If t_res_C = 0 Then t_res_C = 60
     If dtub_mm < 20 Then dtub_mm = 71
     'Переводим внешний диаметр НКТ во внутренний
     dtub_mm = dtub_mm - 11
     Qo_sm3day = q_liq_sm3day * (1 - fw_perc / 100)
    ' Call corelations_for_high_GOR(rp_m3t * gamma_oil, t_res_C, gamma_oil, gamma_gas, pb_atma, bo_m3m3, pb_atma_calc, bo_m3m3_calc)
   
    If Udl_Hvd_m < Udl_h_pump_m Then Udl_Hvd_m = Udl_h_pump_m '???
    If CheckErrors(err_msg, Hvd_m, Udl_Hvd_m, h_pump_m, d_cas_mm, _
                  pb_atma_calc, rp_m3t, bo_m3m3_calc, gamma_oil, _
                  fw_perc, dtub_mm, t_res_C, Pin_atmg, q_liq_sm3day) Then
        old_BB_pwf_p_intake_atma = err_msg
        Exit Function
    End If
    ' расчет для фонтанирующих скважин только с учетом газового фактора (дав нас и об коэф вычисляются внутри)
    pb_atma_calc = -1
    bo_m3m3_calc = -1
    p_intake_atma = Pin_atmg + const_psc_atma
    If h_pump_m <= Hvd_m Then
        ' расчет угла наклона ствола (от вертикали) на участке от Hсп до Hвд
        angle = ArcSin(1 - (Udl_Hvd_m - Udl_h_pump_m) / (Hvd_m - h_pump_m)) * 180 / const_Pi
        ' расчет давления на глубине Hвд через давление на приеме насоса (расчет "вниз" по Dэ/к)
        L1 = Hvd_m - h_pump_m
        p_atma = BB_P_In(d_cas_mm / 1000, L1, angle, p_intake_atma, t_res_C, _
                        Qo_sm3day, fw_perc / 100, gamma_oil, gamma_gas, _
                        rp_m3t * gamma_oil, , , , , pb_atma_calc, bo_m3m3_calc)
        old_BB_pwf_p_intake_atma = p_atma
        Exit Function
     Else
        ' расчет угла наклона ствола (от вертикали) на участке от Hвд до Hсп
        angle = ArcSin(1 - (Udl_h_pump_m - Udl_Hvd_m) / (h_pump_m - Hvd_m)) * 180 / const_Pi
        ' расчет давления на глубине Hвд через давление на приеме насоса (расчет "вверх" по затрубу)
        L1 = h_pump_m - Hvd_m
        Dan = (d_cas_mm ^ 2 - dtub_mm ^ 2) ^ 0.5
        p_atma = BB_P_In(Dan / 1000, L1, angle, p_intake_atma, t_res_C, _
                    Qo_sm3day, fw_perc / 100, gamma_oil, gamma_gas, _
                    rp_m3t * gamma_oil, , , , , pb_atma_calc, bo_m3m3_calc)
        old_BB_pwf_p_intake_atma = p_atma
        Exit Function
        
     End If
    
Er:
        old_BB_pwf_p_intake_atma = 0
End Function
' функция расчета целевого забойного давления по доле газа
Public Function old_Potential_p_wf_atma(ByVal P_cur_atma As Double, _
            plin_atmg As Double, ByVal FreeGas As Double, _
            ByVal fw_perc As Double, _
            ByVal rp_m3t As Double, ByVal t_res_C As Double, _
            ByVal ksep_fr As Double, _
            ByVal gamma_oil As Double, _
            Optional pvt_cor As Integer = 0, _
            Optional h_pump_m As Double = 0, _
            Optional Hvd_m As Double = 0, _
            Optional Udl_Hvd_m As Double = 0, _
            Optional pb_atma As Double = 150, _
            Optional q_liq_sm3day As Double = 100, _
            Optional d_cas_mm As Double = 132, _
            Optional bo_m3m3 As Double = 1.2, _
            Optional gamma_wat As Double = 1, _
            Optional Udl_h_pump_m_max As Double = -1, _
            Optional Layer = "", _
            Optional comp = "", _
            Optional gamma_gas As Double = 0.8) As Double
' P_cur_atma    - текущее забойное давление. Целевое не больше
' plin_atmg     - линейное давление, измеренное, атм
' FreeGas       - допустимая предельная доля газа в потоке
' fw_perc       - обводненность в стандартных условиях, %
' rp_m3t        - газовый фактор, м3/т
' t_res_C = 60   - температура пластовая, C
' ksep_fr       - коэффициент сепарации насоса, доли
' gamma_oil     - плотность нефти в стандартных условиях, г/см3
' pvt_cor       - корреляция для PVT, номер набора
' h_pump_m       - глубина спуска насоса, измеренная, м
' Hvd_m         - глубина верхних дыр перфорации, измеренная, м
' Udl_Hvd_m     - удлинение на глубину верхних дыр перфорации, м
' pb_atma       - давление насыщения, атм абсолютное
' q_liq_sm3day   - дебит жидкости в стандартных условиях, м3/сут
' d_cas_mm       - внутренний диаметр эксплуатационной коллоны, мм
' bo_m3m3       - объемный коэффициент нефти, м3/м3
' gamma_oil     - плотность воды в стандартных условиях, г/см3
' Dtub_mm = 72  - внешний диаметр НКТ, мм
' Udl_h_pump_m   - удлинение на глубину спуска насоса
' gamma_gas =0.8  - плотность газа
' Layer         - название пласта   не используется
' comp          - тип скважины (ГОР или ВЕРТ) не используется
      
    Dim p_atma As Double
    Dim rp_m3m3, t_res_C_K, z, y, e, Pb1, GLR, add_k, k_approx As Double
    
    z = 0.9
    y = 0.0034722
    If fw_perc >= 100 Then fw_perc = 99.99
    e = (1 - fw_perc / 100) * (1 - ksep_fr)
    t_res_C_K = 273 + t_res_C
    rp_m3m3 = rp_m3t * gamma_oil
    k_approx = 1.1 * rp_m3m3 / PVT_pb_atma(t_res_C, encode_PVT(rsb_m3m3:=rp_m3m3, gamma_oil:=gamma_oil, gamma_gas:=gamma_gas))     ' исправлено на использование нового PVT движка
    p_atma = rp_m3m3 / (FreeGas / ((1 - FreeGas) * e * y * z * t_res_C_K) + k_approx)
    If p_atma < plin_atmg + 10 And Not IsNull(plin_atmg) And Not IsEmpty(plin_atmg) Then p_atma = plin_atmg + 10
    If p_atma > P_cur_atma And Not IsNull(P_cur_atma) And Not IsEmpty(P_cur_atma) Then p_atma = P_cur_atma
    old_Potential_p_wf_atma = p_atma   ' получили давление которое может выдержать насос
    
    If (h_pump_m > 0) And (Hvd_m > h_pump_m) Then
    
      old_Potential_p_wf_atma = old_pwf_calc_p_intake_atma(p_atma, Hvd_m, Udl_Hvd_m, h_pump_m, d_cas_mm, pb_atma, rp_m3t, q_liq_sm3day, bo_m3m3, gamma_oil, fw_perc, gamma_wat, , , , , , , Udl_h_pump_m_max)
    
    End If
    
End Function
'*******************************************************************************************************
'
'
'*******************************************************************************************************
Private Function IsNotNum(ByRef v_val)
On Error GoTo Err
    v_val = CDec(v_val)
    IsNotNum = False
    GoTo Finish
Err:
    IsNotNum = True
Finish:
End Function
Private Function CheckErrors(ByRef err_msg As String, Hvd_m, udl_m, _
                    h_pump_m, d_cas_mm, pb_atma, rp_m3t, _
                    bo_m3m3, gamma_oil, fw_perc, _
                    D_nkt, t_res_C, Optional p_buf = -9999, _
                    Optional Qo = -9999, Optional Pcas_atmg = -9999, _
                    Optional ksep_fr = -9999, Optional h_dyn_m = -9999, _
                    Optional q_liq_sm3day = -9999, Optional gamma_wat = -9999, _
                    Optional Qg_mes_sm3day = -1, Optional bw_m3m3 = 1, _
                    Optional Zav = 0.9, Optional se = 0, _
                    Optional Udl_h_pump_m = -9999) As Boolean
'SE=0 - способ эксплуатации ФОНТАН
Dim error As Boolean
error = False
err_msg = ""
'блок проверок
If IsNotNum(Hvd_m) Then
    err_msg = err_msg + " Нвд не число! ": error = True
End If
If IsNotNum(udl_m) Then
    err_msg = err_msg + " Удл Hvd не число! ": error = True
End If
If IsNotNum(Udl_h_pump_m) Then
    err_msg = err_msg + " Удл Hpump не число! ": error = True
End If
If IsNotNum(h_pump_m) Then
    err_msg = err_msg + " Нсп не число! ": error = True
End If
If IsNotNum(d_cas_mm) Then
    err_msg = err_msg + " Dэ/к не число! ": error = True
End If
If IsNotNum(pb_atma) Then
    err_msg = err_msg + " Pнас не число! ": error = True
End If
If IsNotNum(rp_m3t) Then
    err_msg = err_msg + " ГФ не число! ": error = True
End If
If IsNotNum(bo_m3m3) Then
    err_msg = err_msg + " об.к-т нефти не число! ": error = True
End If
If IsNotNum(gamma_oil) Then
    err_msg = err_msg + " плот-ть нефти не число! ": error = True
End If
If IsNotNum(fw_perc) Then
    err_msg = err_msg + " обвод-ть не число! ": error = True
End If
If IsNotNum(D_nkt) Then
    err_msg = err_msg + " Dнкт не число! ": error = True
End If
If IsNotNum(t_res_C) Then
    err_msg = err_msg + " Tпл не число! ": error = True
End If
If IsNotNum(p_buf) Then
    err_msg = err_msg + " Pбуф не число! ": error = True
End If
If IsNotNum(Qo) Then
    err_msg = err_msg + " Qнефти не число! ": error = True
End If
If IsNotNum(Pcas_atmg) Then
    err_msg = err_msg + " Pзатр не число! ": error = True
End If
If IsNotNum(ksep_fr) Then
    err_msg = err_msg + " К-т сепар. не число! ": error = True
End If
If IsNotNum(h_dyn_m) Then
    err_msg = err_msg + " Hд не число! ": error = True
End If
If IsNotNum(q_liq_sm3day) Then
    err_msg = err_msg + " Qжидк не число! ": error = True
End If
If IsNotNum(gamma_wat) Then
    err_msg = err_msg + " плот. воды не число! ": error = True
End If
If IsNotNum(Qg_mes_sm3day) Then
    err_msg = err_msg + " Qg_mes_sm3day не число! ": error = True
End If
If IsNotNum(bw_m3m3) Then
    err_msg = err_msg + " об. к-т воды не число! ": error = True
End If
If Hvd_m <= 0 Then
 err_msg = err_msg + " Hвд <= 0! ": error = True
End If
If udl_m < 0 Then
 err_msg = err_msg + " Удл < 0! ": error = True
End If
If h_pump_m <= 0 Then
 err_msg = err_msg + " Hсп <= 0! ": error = True
End If
If d_cas_mm <= D_nkt Then
 err_msg = err_msg + " Dэ/к <= Dнкт! ": error = True
End If
If (pb_atma < 0) And (pb_atma <> -1) Then
 err_msg = err_msg + " Pнас < 0! ": error = True
End If
If rp_m3t < 0 Then
 err_msg = err_msg + " ГФ < 0! ": error = True
End If
If (bo_m3m3 <= 0) And (bo_m3m3 <> -1) Then
 err_msg = err_msg + " Об. к-т нефти <= 0! ": error = True
End If
If gamma_oil <= 0 Then
 err_msg = err_msg + " плот-ть нефти <= 0! ": error = True
End If
If gamma_oil > 5 Then
 err_msg = err_msg + " плот-ть нефти-размерность! ": error = True
End If
If (fw_perc < 0) Or (fw_perc > 100) Then
 err_msg = err_msg + " обвод-ть! ": error = True
End If
If t_res_C > 200 Then
 err_msg = err_msg + "Высокая Тпл! ": error = True
End If
'--------------------------------------------------
If (p_buf <= 0) And (p_buf <> -9999) Then
 err_msg = err_msg + " Pбуф <= 0! ": error = True
End If
If Qo <= 0 And (Qo <> -9999) Then
 err_msg = err_msg + " Qнефти <= 0! ": error = True
End If
'--------------------------------------------------
If ((ksep_fr <= 0) Or (ksep_fr > 1)) And (ksep_fr <> -9999) Then
 err_msg = err_msg + " К-т сепар.! ": error = True
End If
If (q_liq_sm3day < 0) And (q_liq_sm3day <> -9999) Then
 err_msg = err_msg + " Qжидк <= 0! ": error = True
End If
If (gamma_wat <= 0) And (gamma_wat <> -9999) Then
 err_msg = err_msg + " плот-ть воды <= 0! ": error = True
End If
If (h_dyn_m < 0) And (h_dyn_m <> -9999) Then
 err_msg = err_msg + " Hд < 0! ": error = True
End If
If (Pcas_atmg < 0) And (Pcas_atmg <> -9999) Then
 err_msg = err_msg + " Pзатр < 0! ": error = True
End If
'--------------------------------------------------
'отличия для мехфонда
If se <> 0 Then
    If (h_pump_m < h_dyn_m) Then
        err_msg = err_msg + " Hсп < Hд! ": error = True
    End If
End If
                    
CheckErrors = error
End Function
Private Sub corelations_for_high_GOR(ByVal rs_m3m3 As Double, ByVal t_res_C As Double, _
ByVal DensityOil As Double, ByVal gamma_gas As Double, ByVal pb_atma As Double, ByVal bo_m3m3 As Double, _
ByRef pb_atma_calc As Double, ByRef bo_m3m3_calc As Double)
' Проверка, если газовый фактор большой, то больше доверяет газовому фактору
' допускаю 20% погрешность в оценке давления насыщения относительно корреляции
'
   Dim delta_pb_atma As Double
   Dim delta_bo_m3m3 As Double
   Dim pvt_str As String
   'определение давления насыщения и объемного коэффициента нефти по корреляциям для ГФ>200
    pb_atma_calc = pb_atma
    bo_m3m3_calc = bo_m3m3
    If rs_m3m3 > 200 Then
        pb_atma_calc = PVT_pb_atma(t_res_C, encode_PVT(rsb_m3m3:=rs_m3m3, gamma_oil:=DensityOil, gamma_gas:=gamma_gas))(0, 0)
        pvt_str = encode_PVT(rsb_m3m3:=rs_m3m3, gamma_oil:=DensityOil, gamma_gas:=gamma_gas)
        bo_m3m3_calc = PVT_bo_m3m3(pb_atma, t_res_C, pvt_str)   ' подключен новый блок PVT
        delta_pb_atma = Abs((pb_atma_calc - pb_atma) / pb_atma_calc)
        delta_bo_m3m3 = Abs((bo_m3m3_calc - bo_m3m3) / bo_m3m3_calc)
        If delta_pb_atma < 0.2 Then
            pb_atma_calc = pb_atma
        End If
        If delta_bo_m3m3 < 0.2 Then
            bo_m3m3_calc = bo_m3m3
        End If
    End If
End Sub
' Вычисление критерия наличия неоднозначности для скважины
' входные параметры адаптированы для данных тех режима скважин
Public Function old_N_calc(ksep_fr As Double, _
        d_cas_mm As Double, Pcas_atmg As Double, _
        pb_atma As Double, rs_m3m3 As Double, _
        q_liq_sm3day As Double, bo_m3m3 As Double, gamma_oil As Double, _
        fw_perc As Double, Optional Qg_mes_sm3day As Double = -1, _
        Optional tr_HydCor As Integer = 2, _
        Optional dtub_mm As Double = 60, _
        Optional t_res_C As Double = 60, Optional Zav As Double = 0.9, _
        Optional l As Double = -1, Optional gamma_gas As Double = 0.8) As Double
' Входные параметры
' Pin давление на приеме насоса, атм
' ksep_fr  коэффициент сепарации насоса, доли
' Hvd_m глубина верхних дыр перфорации, измеренная, м
' h_pump_m глубина спуска насоса, измеренная, м
' h_dyn_m  динамический уровень измеренный, м
' pb_atma    давлени насыщения, atma
' Pcas_atmg    затрубное давление, атм
' rs_m3m3    газовый фактор, м3/т
' q_liq_sm3day    дебит жидкости в стандартных условиях, м3/сут
' bo_m3m3   объемный коэффициент нефти, м3/м3 ?
' gamma_oil плонтность нефти в стандартных условиях, г/см3
' fw_perc    обводненность в стандартных условиях, %
' d_cas_mm внутренний диаметр эксплуатационной коллоны, мм
'
' опциональный параметры
' Qg_mes_sm3day  замер расхода газа в затрубе, например по отжиму. если < 0 игнорируется
' Dtub_mm = 60 внешний диаметр НКТ, мм
' t_res_C = 330 температура пластовая, К
' Zav = 0.9  сверхсжимаемость газа в затрубе
Dim Qo_vol As Double   ' объемный расход нефти
Dim rs_m3m3_vol As Double   ' объемный газовый фактор
Dim Qw_vol As Double   ' объемный расход воды
Dim fw_perc_d As Double     ' обводненность  в долях
Dim Ac_above_pump As Double ' площадь затрубного пространста
Dim al As Double ' размерный коэффициент площади
Dim vsgb As Double ' приведеная скорость газа в затрубе отнесенная к давлению насыщения
Dim L0 As Double ' обезразмеривающий коэффициент для расстояний. Длина столба негазированной жидкости обеспецивающей давлений насыщения
Dim Ld_above_pump As Double  ' безразмерная высота столба жидкости над насосом
Dim PfD As Double ' безразмерное затрубное давление
Dim PscD As Double ' безразмерное давление при стардартных условиях
Dim Qg_measured As Boolean
Dim Tav As Double 'средняя температура в затрубе, К
Dim pb_atma_calc As Double
Dim bo_m3m3_calc As Double
If (t_res_C = 0) Then t_res_C = 60
If dtub_mm = 0 Then dtub_mm = 60
Call corelations_for_high_GOR(rs_m3m3 * gamma_oil, t_res_C, gamma_oil, gamma_gas, pb_atma, bo_m3m3, pb_atma_calc, bo_m3m3_calc)
Tav = 0.8 * t_res_C + 0.2 * const_tsc_C
Dim err_msg As String
If CheckErrors(err_msg, 1, 1, 1, d_cas_mm, pb_atma, rs_m3m3, bo_m3m3, gamma_oil, fw_perc, _
                dtub_mm, t_res_C, , , Pcas_atmg, ksep_fr, 1, q_liq_sm3day, 1, Qg_mes_sm3day, 1, Zav, 1) Then
 old_N_calc = -1
 Exit Function
End If
Call var_calc_above_pump(Pcas_atmg, ksep_fr, d_cas_mm, dtub_mm, Pcas_atmg, pb_atma_calc, rs_m3m3, q_liq_sm3day, bo_m3m3_calc, gamma_oil, fw_perc, Qg_mes_sm3day, Tav + 273, Zav, _
    PfD, PfD, vsgb, PscD, fw_perc_d, Qw_vol, Qo_vol, rs_m3m3_vol, L0)
If Qg_mes_sm3day < 0 Then
  Qg_measured = False
Else
  Qg_measured = True
End If
old_N_calc = -(Lgd_Pind_Ro(1, PfD, vsgb, bo_m3m3_calc, PscD, tr_HydCor, Qg_measured) - _
           Lgd_Pind_Ro(0.95, PfD, vsgb, bo_m3m3_calc, PscD, tr_HydCor, Qg_measured)) / _
         (1 - 0.95)
If l > 0 Then
 
 Dim LD As Double
 Dim LD1 As Double
 Dim LD2 As Double
 
 LD = l / L0
 LD1 = Pd_Ld2(LD, PfD, vsgb, bo_m3m3_calc, PscD, tr_HydCor, Qg_measured, True)
 LD2 = Lgd_Pind_Ro(1, PfD, vsgb, bo_m3m3_calc, PscD, tr_HydCor, Qg_measured)
 If (LD <= LD1) And (LD > LD2) Then
   old_N_calc = old_N_calc + 10000
 End If
End If
End Function
Public Function old_viscosity_liq(fw_perc As Double, viscosity_oil As Double, viscosity_water As Double)
 Dim Kr_o As Double
 Dim Kr_w As Double
 
  Kr_o = 1 - fw_perc / 100
  Kr_w = 0.3 * fw_perc / 100
    
  old_viscosity_liq = (viscosity_water * viscosity_oil) / _
                (Kr_o * viscosity_water + Kr_w * viscosity_oil)
End Function
Public Function old_ShowMessages(well_type, _
                       Pr, p_wf, GOR, Gas_in_pump, pb_atma_calc, bo_m3m3_calc, pb_atma, bo_m3m3, pb_atma_use, bo_m3m3_use, Dnkt)
' функция анализа расчета потенциала скважины
' входные параметры - ключевые анализируемые значения
'
'
Const Count = 30   ' максимальное количество выводимых сообщений
Dim msg(Count)
Dim i As Integer
For i = 0 To Count
 msg(i) = ""
Next i
Dim ind As Integer
ind = 0
If (well_type <> "ФОН") And (well_type <> "Г/Л") Then
 msg(ind) = "Расчет механизированной скважины (" & well_type & ")"
 ElseIf (well_type = "Г/Л") Then
  msg(ind) = "Расчет скважины оборудованной газлифтом"
 
  ind = ind + 1
  msg(ind) = "Расчет зайбоного давления для газлифтных скважин"
  
  ind = ind + 1
  msg(ind) = "в текущей версии тех. режима не производится"
 Else
  msg(ind) = "Расчет фонтанирующей скважины"
  ind = ind + 1
  msg(ind) = "Текущее значение газового фактора " & Round(GOR) & " м3/т"
  ind = ind + 1
  msg(ind) = "Текущее пластовое давление = " & Round(Pr, 2) & " атм"
  ind = ind + 1
  'msg(ind) = "Расчитанное Рнас по газовому фактору = " & Round(pb_atma_calc) & " атм"
  'ind = ind + 1
  'msg(ind) = "Расчитанный по газовому фактору (при пластовом давлении) об. к-т нефти  = " & Round(bo_m3m3_calc, 2) & " м3/м3"
  'ind = ind + 1
  'msg(ind) = "При расчете используются расчитанные значения."
  'ind = ind + 1
  If val(Pr) < val(pb_atma_calc) Then
    ind = ind + 1
    msg(ind) = " "
    ind = ind + 1
    msg(ind) = "Пластовое давление меньше расчетного давления насыщения."
    ind = ind + 1
    msg(ind) = "Возможно наличие газовой шапки в пласте."
    
  End If
  ind = ind + 1
 
End If
 ind = ind + 1
If Pr < p_wf Then
 msg(ind) = "Пластовое давление " & Round(Pr) & " атм. меньше забойного давления " & Round(p_wf) & " атм."
 ind = ind + 1
End If
If (well_type <> "ФОН") And (well_type <> "Г/Л") And (Not IsError(bo_m3m3_calc)) Then
  If GOR <= 200 Then
    msg(ind) = "Текущее значение газового фактора " & Round(GOR) & " м3/т"
    ind = ind + 1
    'msg(ind) = "Текущее Рнас= " & Round(pb_atma) & " атм " & "по газовому фактору Рнас= " & Round(pb_atma_calc) & " атм"
    'ind = ind + 1
    'msg(ind) = "Текущий об. к-т нефти= " & Round(bo_m3m3, 2) & " м3/м3 " & "по газовому фактору об. к-т нефти= " & Round(bo_m3m3_calc, 2) & " м3/м3"
    'ind = ind + 1
    'msg(ind) = "При расчете используются текущии значения"
    ind = ind + 1
   End If
If GOR > 200 Then
 msg(ind) = "Высокий газовый фактор " & Round(GOR) & " м3/т"
 ind = ind + 1
 'msg(ind) = "Текущее Рнас= " & Round(pb_atma) & " атм " & "по газовому фактору Рнас= " & Round(pb_atma_calc) & " атм. Используется Рнас= " & Round(pb_atma_use) & " атм "
 'ind = ind + 1
 'msg(ind) = "Текущий об. к-т нефти= " & Round(bo_m3m3, 2) & " м3/м3 " & "по газовому фактору об. к-т нефти= " & Round(bo_m3m3_calc, 2) & " м3/м3. Используется об. к-т нефти= " & Round(bo_m3m3_use, 2) & " м3/м3 "
 'ind = ind + 1
End If
Else
 If (IsError(bo_m3m3_calc)) Then
     'msg(ind) = "Не корректное значение давления насыщения Pнас= " & Round(pb_atma) & " атм." & " Значение по корреляции Pнас=" & Round(pb_atma_calc) & " атм."
    'ind = ind + 1
  End If
End If
If Not IsError(Gas_in_pump) Then
If Gas_in_pump = "" Then
Gas_in_pump = 0
End If
If Gas_in_pump > 0.25 Then
 msg(ind) = "Высокий процент газа на приеме насоса " & Round(Gas_in_pump * 100) & " %"
 ind = ind + 1
End If
If (well_type = "ФОН") Then
  msg(ind) = "Для расчета забойного давления используется внутренний диаметр НКТ = " & Round(Dnkt - 11) & " мм"
  ind = ind + 1
End If
End If
'ShowMessages = Array(msg)
' Ст.М. - преобразование массива в текст, т.к. FlexCel не поддерживает массивы в ячейках
Dim Result As String
Result = ""
For i = 0 To Count
  Result = Result & msg(i) & Chr(10) ' & Chr(10)
Next i
old_ShowMessages = Result 'Array(msg)
End Function
''Расчет забойного давления по Вогелю с учетом поправки на обводненность
''
''
''
''
'Public Function tr_Qvogel_fw_perc(ByVal P_test As Double, ByVal Pr As Double, _
'                          ByVal pb_atma As Double, ByVal Pi As Double, ByVal fw_perc As Double)
' '
' ' Q_test    - дебит жидкости при котором надо определить заб. давл. м3/сут
' ' Pr        - пластовое давление, атм
' ' pb_atma        - давление насыщения, атм
' ' pi - коэффициент продуктивности, м3/сут/атм
' ' fw_perc        - обводненность, %
' tr_Qvogel_fw_perc = calc_QliqVogel_m3Day(P_test, Pr, pb_atma, Pi, fw_perc)
'
'
'End Function ' Расчет забойного давления по Вогелю с учетом поправки на обводненность
''
''
''
''
'Public Function tr_Pvogel_fw_perc(ByVal Q_test As Double, ByVal Pr As Double, _
'                          ByVal pb_atma As Double, ByVal Pi As Double, ByVal fw_perc As Double)
' '
' ' Q_test    - дебит жидкости при котором надо определить заб. давл. м3/сут
' ' Pr        - пластовое давление, атм
' ' pb_atma  - давление насыщения, атм
' ' pi - коэффициент продуктивности, м3/сут/атм
' ' fw_perc        - обводненность, %
'
' tr_Pvogel_fw_perc = calc_p_wfVogel_atma(Q_test, Pr, pb_atma, Pi, fw_perc)
'
'
'End Function
'
'' определение продуктивности по Вогелю с коррекцией на обводненность
'Public Function tr_pi_from_rate_fw_perc(ByVal Q_test As Double, ByVal P_test As Double, _
'                                ByVal Pres As Double, ByVal pb_atma As Double, ByVal fw_perc As Double)
'
' tr_pi_from_rate_fw_perc = calc_PIVogel_m3DayAtm(Q_test, P_test, Pres, pb_atma, fw_perc)
'
'End Function
'==========================================================
'======================== Multiphase_module =====================
'==========================================================
 
Private Sub calc_PVT_TR(ByVal p_atma As Double, ByVal t_K As Double, ByVal rsb_m3m3 As Double, ByVal gamma_o As Double, _
                          ByVal gamma_gas As Double, ByVal PVTcorr As Integer, ByRef p_b As Double, ByRef r_s As Double, _
                          ByRef b_o As Double, ByRef mu_o As Double, ByRef z As Double, _
                          ByRef b_g As Double, ByRef mu_g As Double, ByRef b_w As Double, ByRef mu_w As Double, _
                          Optional ByVal p_rb_atma As Double = -1, Optional ByVal b_ro_m3m3 As Double = -1, _
                          Optional ByVal s As Double = 50000, Optional ByVal gamma_w As Double = 1, _
                          Optional t_res_C As Double = 80)
'Function calculates PVT properties for oil, gas, water
'Arguments
'p_atma - pressure (atma)
'T_K - temperature (K)
'r_sb - reservoir solution gas-oil ratio
'gamma_o - oil specific gravity
'gamma_gas - gas specific gravity
'******************************
'Output
'p_b - bubblepoint pressre (atma)
'r_s - solution gas-oil ratio at given pressure (sm3/sm3)
'b_o - oil formation volume factor (fraction)
'mu_o - oil viscosity (cp)
'Z - gas Z factor
'b_g - gas formation volume factor
'mu_g - gas viscosity
'b_w - water formation volume factor (fraction)
'mu_w - water viscosity (cp)
'******************************
'Optional input
'p_rb - bubblepoint pressure (atma)
'b_ro - calibration oil formation volume factor at bubble point pressure
'mu_o_sat - saturate oil viscosity
'S - water salinity
'gamma_w - water specific gravity
    Dim pvt As New CPVT
    pvt.init gamma_gas, gamma_o, gamma_w, rsb_m3m3, p_rb_atma, b_ro_m3m3, PVTcorr, t_res_C
    p_b = p_rb_atma
    If p_rb_atma <= 0 Then ' давление насыщения не задано
        p_b = pvt.calc_pb_atma(rsb_m3m3, t_res_C)
    End If
          
'    If ksep_fr > 0 And ksep_fr < 1 And p_ksep_atma > 0 And t_ksep_C > 0 Then
''        Call PVT.calc_PVT(p_ksep_atma, t_ksep_C)
''        Qgfree = PVT.Qgas_cas_scm3day(ksep_fr)
'        Call PVT.ModifyfluidTubPVTafterSeparation(p_ksep_atma, t_ksep_C, ksep_fr, gas_goes_into_solution)
'    End If
    Dim t_C As Double
    t_C = t_K - 273
    pvt.t_res_C = t_C
     
          
    Call pvt.calc_PVT(p_atma, t_C)
    
    'bo_m3m3_m3m3 = PVT.bo_m3m3_m3m3
    
    'Assign output variables
    'p_b = PVT.calc_pb_atma(r_s, T_C)
    r_s = pvt.rs_m3m3
    b_o = pvt.bo_m3m3
    mu_o = pvt.mu_oil_cP
    z = pvt.z
    b_g = pvt.bg_m3m3
    mu_g = pvt.mu_gas_cP
    b_w = pvt.bw_m3m3
    mu_w = pvt.mu_wat_cP
    
    Set pvt = Nothing
End Sub
Private Function hasan_kabir_gradient_annuli_znlf(ByVal D_T As Double, ByVal D_C As Double, ByVal THETA As Double, _
                                  ByVal p As Double, ByVal q_gsc As Double, _
                                  ByVal b_o As Double, ByVal b_g As Double, ByVal r_s As Double, ByVal sigma_o As Double, _
                                  ByVal rho_osc As Double, ByVal rho_gsc As Double, Optional Units As Integer = 1) As Double
'function calculates pressure gradient for Zero Net Liquid flow in annulus
'Return (psi/ft (atma/m))
'Arguments
'd_t -  internal diameter theta(ft (m))
'd_c -  internal diameter theta(ft (m))
'theta - pipe inclination angel (degrees)
'p - reference pressure (psi (atma))
'q_gsc - gas rate at standard conditions (scf/day (m3/day))
'b_o - oil formation volume factor at reference pressure (bbl/stb (m3/sm3))
'b_g - gas formation volume factor at reference pressure (ft3/scf (m3/sm3))
'r_s - gas-oil solution ratio at reference pressure (Scf/stb (sm3/sm3))
'sigma_o - oil-gAs surface tension coefficient (dynes/sm (Newton/m))
'rho_osc - oil density at standard conditions (lbm/ft3 (kg/m3))
'rho_gsc - gas density at standard conditions(lbm/ft3 (kg/m3))
'units - input/output units (0-field, 1 - metric)
'Conversion factors and constants (field / metric)
'Gas rate conversion
Dim c_qg(2) As Double
c_qg(0) = 0.028319: c_qg(1) = 1
'Gas-oil solution ratio conversion factor
Dim c_rs_m3m3(2) As Double
c_rs_m3m3(0) = 0.17811: c_rs_m3m3(1) = 1
'Pressure conversion factor
Dim c_p(2) As Double
c_p(0) = 0.068: c_p(1) = 1
'Length conversion factor
Dim c_l(2) As Double
c_l(0) = 0.3048: c_l(1) = 1
'Surface tension conversion factor
Dim c_sigma(2) As Double
c_sigma(0) = 0.001: c_sigma(1) = 1
'Density conversion factor
Dim c_rho(2) As Double
c_rho(0) = 16.02: c_rho(1) = 1
'Convert all values to metric
D_C = c_l(Units) * D_C
D_T = c_l(Units) * D_T
p = c_p(Units) * p
r_s = c_rs_m3m3(Units) * r_s
sigma_o = c_sigma(Units) * sigma_o
rho_osc = c_rho(Units) * rho_osc
rho_gsc = c_rho(Units) * rho_gsc
q_gsc = c_qg(Units) * q_gsc
'convert inclination angle to radians
THETA = THETA / 180 * 3.141592
'Calculate pressure gradient
'Annulus cross-sectional area
Dim a_p As Double
a_p = 3.141592 * (D_C ^ 2 - D_T ^ 2) / 4
'Calculate gas flow rate at reference pressure
Dim q_g As Double
q_g = b_g * q_gsc
'calculate oil density
Dim rho_o, rho_w, rho_l, rho_g, rho_n As Double
rho_o = (rho_osc + r_s * rho_gsc) / b_o
rho_g = rho_gsc / b_g
'Gas sureficial velocity
Dim v_sg As Double
v_sg = 0.000011574 * q_g / a_p
'Calculate bubble rise velosity
Dim v_inf As Double
v_inf = 1.53 * (const_g * sigma_o * (rho_o - rho_g) / rho_o ^ 2) ^ 0.25
'Calculate Taylor bubble rise velosity
Dim v_inf_tb As Double
v_inf_tb = (0.345 + 0.1 * D_T / D_C) * (const_g * D_C * (rho_o - rho_g) / rho_o) ^ 0.5 * (Sin(THETA)) ^ 0.5 * (1 + Cos(THETA)) ^ 1.2
'velocity profile constant
Dim c_0 As Double
c_0 = 1.2
'If (d_c - d_t < 0.12) Then 'Small tube
'  c_0_b = 1.2
'Else ' large tube
'  c_0_b = 2#
'End If
'calculate tranzition zone
Dim v_sgbsl As Double
Dim v_sgbsh As Double
Dim v_delta As Double
v_sgbsl = 0.8 * Sin(THETA) / (4 - c_0) * v_inf
v_sgbsh = 1.2 * Sin(THETA) / (4 - c_0) * v_inf_tb
v_delta = v_sgbsh - v_sgbsl
'Calculate terminal rise velocity
Dim v_rise As Double
If (v_sg <= v_sgbsl) Then
  v_rise = v_inf
Else
  If (v_sg >= v_sgbsh) Then
    v_rise = v_inf_tb
  Else
    v_rise = (v_inf * (v_sgbsh - v_sg) + v_inf_tb * (v_sg - v_sgbsl)) / v_delta
  End If
End If
 
'-----------------------------------------------------------------------
'determine liquid holdup
Dim h_l As Double
h_l = 1 - v_sg / (c_0 * v_sg + v_rise)
'calculate mixture density
Dim rho_s As Double
rho_s = rho_o * h_l + rho_g * (1 - h_l)
'calculate pressure gradient
hasan_kabir_gradient_annuli_znlf = 0.000009871 * c_l(Units) / c_p(Units) * rho_s * const_g * Sin(THETA)
End Function
Private Function BB_Pressure_Drop(ByVal d As Double, ByVal length As Double, ByVal THETA As Double, ByVal eps As Double, _
                               ByVal p_sn As Double, ByVal T_sn As Double, ByVal T_en As Double, _
                               ByVal q_lsc As Double, ByVal WCT As Double, ByVal gamma_o As Double, ByVal gamma_gas As Double, _
                               ByVal r_sb As Double, Optional ByVal Salinity As Double = -1, Optional calc_p_out As Integer = 0, _
                               Optional yukos_standard As Integer = 0, Optional Units As Integer = 1, _
                               Optional p_rb As Double = -1, Optional b_ro As Double = -1) As Double
'function for calculation of pressure at end node of pipe given the start node pressure using Begs and Brill gradient prediction method
'return value (psi(atma))
'Arguments
'd - pipe internal diameter theta(ft(m))
'L - pipe length (ft(m))
'theta - pipe inclination angle (degrees).Positive value means that flow is uphill, negative - downhill
'eps - pipe wall roughness (ft(m))
'p_sn - start node pressure (psi(atma))
'T_sn - start node temperature (Farenheit(Celsius))
'q_lSC - liquid rate at standard conditions (stb/day (m3/day))
'WCT - watercut at standard conditions (stb/stb(sm3/sm3))
'gamma_o - oil specific gravity
'gamma_gas - gas specific gravity
'r_sb - reservoir gas-oil solution ratio (scf/stb(sm3/sm3))
'Salinity - water salinity
'Along_flow - flag indicating weather flow is from start node to end node (1) or from end node to start node (0)
'Yukos_standard - flag indicationg weather to apply PVT correlations which are standard for Yukos or the following set of correlations:
'Viscosity
  'Dead oil - Beggs & Robinson
  'Saturated - Beggs & Robinson
  'Undersaturated - Vazquez & Beggs
  'Gas - Lee
  'Water - McCain 1990
'Solution gas-oil ratio
  'Standing
'Oil FVF
  'Standing
'Oil compressibility
  'Vazquez & Beggs
'Gaz Z factor
  'Dranchuk & Abu-Kassem (Computer version of Standing & Katz )
'p_rb - calibration bubble point pressure (psi(atma))
'b_ro - calibration oil formation volume factor at bubble point pressure
Const n_nodes As Integer = 20 'number of nodes for calculation
Const MaxIter As Integer = 5
'constant to conver ft to m
Dim c_length(2) As Double
c_length(0) = 0.3048: c_length(1) = 1
'convert pipe length, diameter and roughness
length = c_length(Units) * length
d = c_length(Units) * d
eps = c_length(Units) * eps
'Pressure conversion factor
Dim c_pr(2)
c_pr(0) = 14.6959: c_pr(1) = 1
'Convert start node pressure
p_sn = p_sn / c_pr(Units)
'Convert calibration pressure
If (p_rb > 0) Then 'user specified
  p_rb = p_rb / c_pr(Units)
End If
'Air density at standart conditions
'Dim rho_air As Double
'rho_air = 1.2217:
'Water specific gravity (used in water correlations)
Dim gamma_w As Double
gamma_w = 1
'water-gas surface tension coefficient (Newton/m)
Dim sigma_w As Double
sigma_w = 0.01
'oil-gas surface tension coefficient (Newton/m)
Dim sigma_o As Double
'sigma_o = 0.00841
sigma_o = 0.025
'Water formation volume factor
Dim b_w As Double
'Water viscosity
Dim mu_w As Double
'liquid rate field to metric conversion factor (m3/bbl)
Dim c_q_liq_sm3day(2) As Double
c_q_liq_sm3day(0) = 0.159: c_q_liq_sm3day(1) = 1
'Convert rates to metric units
q_lsc = q_lsc * c_q_liq_sm3day(Units)
'Solution gas-oil ratio conversion factor (bbl/ft3)
Dim c_rs_m3m3(2) As Double
c_rs_m3m3(0) = 0.17811: c_rs_m3m3(1) = 1
'Convert gas-oil solution ratio to metric
r_sb = r_sb * c_rs_m3m3(Units)
'If not specified by the user, set water salinity to default value
If (Salinity < 0) Then
  Salinity = 50000
End If
If (q_lsc < 0.000001) Then ' As calculation would be impossible if Q_osc = 0,  it's rational to extent for Q_osc = 0 by assuming that it is the limit value when Q_o tends to 0
  q_lsc = 0.000001
End If
Dim q_osc_ As Double
q_osc_ = q_lsc * (1 - WCT)
'calculate gas rate at standart conditions
Dim q_gsc As Double
q_gsc = r_sb * q_osc_
'calculate water rate at standard conditions
Dim q_wsc As Double
q_wsc = q_lsc * WCT ' WCT * q_osc / (1 - WCT)
'Oil density at standard conditions
Dim rho_osc As Double
rho_osc = gamma_o * const_rho_ref
'Gas density at standard conditions
Dim rho_gsc As Double
rho_gsc = gamma_gas * const_rho_air
'water density at standard conditions
Dim rho_w_sc As Double
'rho_w_sc = WaterDensitySC(Salinity, gamma_w) * rho_ref
'rho_w_sc = WaterDensitySC(Salinity, gamma_w) * 1000
rho_w_sc = 1000
'temperature conversion factor
Dim t_F(2) As Double
t_F(0) = 0.557: t_F(1) = 1
'temperature offset
Dim t_offs(2) As Double
t_offs(0) = 255.22: t_offs(1) = 273
'convert temperatures to Deg K
T_sn = t_F(Units) * T_sn + t_offs(Units)
T_en = t_F(Units) * T_en + t_offs(Units)
'PVT properties
Dim r_s As Double
Dim b_o As Double
Dim mu_o As Double
Dim z As Double
Dim b_g As Double
Dim mu_g As Double
'Oil bubble point pressure in reservoir
Dim p_b As Double
Dim dp_dl As Double
Dim sign As Integer
Dim counter As Integer
Dim delta_p As Double
'workspace to store current pressure, temperature and length, increments for length and temperature
Dim p As Double
p = p_sn
Dim p_pvt As Double
p_pvt = p
Dim t As Double
t = T_sn
Dim t_pvt As Double
t_pvt = t
Dim l As Double
l = 0
Dim delta_l As Double
delta_l = length / (n_nodes - 1)
Dim delta_t As Double, q_lrc As Double, q_grc As Double
Dim mu_lrc As Double, mu_grc As Double
Dim rho_lrc As Double, rho_grc As Double
delta_t = (T_en - T_sn) / (n_nodes - 1)
Do
  'if calc_p_out flag is 0 (i.e. counter flow calculation) then gradient is taken with positive sign, else - with negative
  If (calc_p_out = 0) Then
    sign = 1
  Else
    sign = -1
  End If
  delta_p = 0
  counter = 0
  Do ' iterate calculating PVT at center of segment
    'calculate PVT properties
    p_pvt = p + 0.5 * delta_p
    t_pvt = t + 0.5 * delta_t
    Call calc_PVT_TR(p_pvt, t_pvt, r_sb, gamma_o, gamma_gas, yukos_standard, p_b, r_s, b_o, mu_o, z, _
                  b_g, mu_g, b_w, mu_w, p_rb, b_ro, Salinity, gamma_w)
'    dp_dl = tr_Multiphase_module.BegsBrillGradient_tr(D, theta, eps, p_pvt, q_osc, q_wsc, q_gsc, b_o, _
'                              b_w, b_g, r_s, mu_o, mu_w, mu_g, sigma_o, sigma_w, rho_osc, rho_w_sc, rho_gsc, 1, 0, 1)
    q_lrc = q_osc_ * b_o + q_wsc * b_w    ' надо проверить
    q_grc = (q_gsc - r_s * q_osc_) * b_g
    mu_lrc = mu_o * (1 - WCT) + mu_w * WCT
    mu_grc = mu_g
    'sigma_l = sigma_o '* (1 - WCT) + sigma_g * WCT
    rho_lrc = ((rho_osc + r_s * rho_gsc) / b_o) * (1 - WCT) + rho_w_sc / b_w * WCT
    rho_grc = rho_gsc / b_g
    dp_dl = unf_BegsBrillGradient(d, THETA, eps, q_lrc, q_grc, mu_lrc, mu_grc, sigma_o, rho_lrc, rho_grc, 0, 1)(0)
    
    delta_p = sign * dp_dl * delta_l
    counter = counter + 1
  Loop Until (Abs(p_pvt - (p + 0.5 * delta_p)) < 0.5 Or counter > MaxIter)
  p = p + delta_p
  t = t + delta_t
  l = l + delta_l
Loop Until (l >= length - 0.001)
BB_Pressure_Drop = c_pr(Units) * p
End Function
Private Function Hasan_Kabir_liquid_column(ByVal D_T As Double, ByVal D_C As Double, ByVal THETA As Double, _
                                  ByVal p_p As Double, ByVal p_c As Double, ByVal q_osc As Double, ByVal e_s As Double, _
                                  ByVal t As Double, ByVal r_sb As Double, ByVal sigma_o As Double, _
                                  ByVal gamma_o As Double, ByVal gamma_gas As Double, _
                                  Optional Units As Integer = 1, Optional yukos_standard As Integer = 0, _
                                  Optional ByVal p_rb As Double = -1, Optional ByVal b_ro As Double = -1) As Double
'Calculate liquid column height using Hasan-Kabir znlf tr_HydCor
'Arguments
'd_t -  internal diameter theta(ft (m))
'd_c -  internal diameter theta(ft (m))
'theta - pipe inclination angel (degrees)
'p_p - pump intake pressure (psi (atma))
'p_c - annulus pressure (psi (atma))
'q_osc - oil rate at standard conditions (scf/day (m3/day))
'e_s - separation coefficient (fraction)
'T - average liquid column temperature (Farenheit(Celsius))
'r_sb - gas-oil solution ratio at reservoir conditions (Scf/stb (sm3/sm3))
'sigma_o - oil-gas surface tension coefficient (dynes/sm (Newton/m))
'gamma_o - oil specific gravity
'gamma_gas - gas specific gravity
'units - input/output units (0-field, 1 - metric)
'Yukos_standard - flag indicationg weather to apply PVT correlations which are standard for Yukos or the following set of correlations:
'Solution gas-oil ratio
  'Standing
'Oil FVF
  'Standing
'Oil compressibility
  'Vazquez & Beggs
'Gaz Z factor
  'Dranchuk & Abu-Kassem (Computer version of Standing & Katz )
Const max_steps As Integer = 500 'Maximum number of steps
Const delta_l As Double = 100 'length increment
'Conversion factors and constants (field / metric)
'Gas-oil solution ratio conversion factor
Dim c_rs_m3m3(2) As Double
c_rs_m3m3(0) = 0.17811: c_rs_m3m3(1) = 1
'Pressure conversion factor
Dim c_p(2) As Double
c_p(0) = 0.068: c_p(1) = 1
'Length conversion factor
Dim c_l(2) As Double
c_l(0) = 0.3048: c_l(1) = 1
'liquid rate field to metric conversion factor (m3/bbl)
Dim c_q_liq_sm3day(2) As Double
c_q_liq_sm3day(0) = 0.159: c_q_liq_sm3day(1) = 1
'Surface tension conversion factor
Dim c_sigma(2) As Double
c_sigma(0) = 0.001: c_sigma(1) = 1
'Density conversion factor
Dim c_rho(2) As Double
c_rho(0) = 16.02: c_rho(1) = 1
'temperature conversion factor
Dim t_F(2) As Double
t_F(0) = 0.557: t_F(1) = 1
'temperature offset
Dim t_offs(2) As Double
t_offs(0) = 255.22: t_offs(1) = 273
'Convert all values to metric
D_C = c_l(Units) * D_C
D_T = c_l(Units) * D_T
p_p = c_p(Units) * p_p
p_c = c_p(Units) * p_c
r_sb = c_rs_m3m3(Units) * r_sb
sigma_o = c_sigma(Units) * sigma_o
q_osc = c_q_liq_sm3day(Units) * q_osc
'convert temperatures to Kelvins
t = t_F(Units) * t + t_offs(Units)
  
'Oil density at standard conditions
Dim rho_osc As Double
rho_osc = gamma_o * const_rho_ref
'Gas density at standard conditions
Dim rho_gsc As Double
rho_gsc = gamma_gas * const_rho_air
'workspace to store current pressure and length, increments for length and temperature
Dim p As Double
p = p_p
Dim l As Double
l = 0
'PVT properties
Dim r_s As Double
Dim b_o As Double
Dim b_g As Double
'All unused properties
Dim void As Double
'Oil bubble point pressure in reservoir
Dim dp_dl As Double
'calculate gas rate at standart conditions
'calculate solution GOR at pump intake
Call calc_PVT_TR(p, t, r_sb, gamma_o, gamma_gas, yukos_standard, void, r_s, b_o, void, _
              void, b_g, void, void, void, p_rb, b_ro, 50000, 1)
'Calculate gas rate
Dim q_gsc As Double
q_gsc = e_s * (r_sb - r_s) * q_osc
Dim counter As Integer
counter = 0
'loop to calculate liquid column height
If (p_c < p_p) Then
    Do
        
      'calculate PVT properties
      '----------------------------------------------------------------
      Call calc_PVT_TR(p, t, r_sb, gamma_o, gamma_gas, yukos_standard, void, r_s, b_o, void, _
                    void, b_g, void, void, void, p_rb, b_ro, 50000, 1)
      'PVT calculations end --------------------------------------------
      dp_dl = hasan_kabir_gradient_annuli_znlf(D_T, D_C, THETA, p, q_gsc, b_o, b_g, r_s, sigma_o, rho_osc, rho_gsc, 1)
      p = p - dp_dl * delta_l
      l = l + delta_l
      counter = counter + 1
    Loop Until ((p <= p_c) Or (counter > max_steps))
    'correct for exceeding p (p < p_c)
    l = l - (p_c - p) / dp_dl
Else
  l = 0
End If
If (counter > max_steps) Then 'error
  Hasan_Kabir_liquid_column = -1
Else 'normal output
  Hasan_Kabir_liquid_column = l / c_l(Units)
End If
End Function
Private Function BB_P_Out(ByVal d As Double, ByVal length As Double, ByVal THETA As Double, _
                               ByVal p_sn As Double, ByVal T_en As Double, _
                               ByVal q_osc As Double, ByVal WCT As Double, ByVal gamma_o As Double, ByVal gamma_gas As Double, _
                               ByVal r_sb As Double, Optional ByVal Salinity As Double = -1, _
                               Optional yukos_standard As Integer = 0, Optional ByVal T_sn As Double = 15.55, Optional eps As Double = 0.00004572, _
                               Optional p_rb As Double = -1, Optional b_ro As Double = -1) As Double
'function for calculation of pressure at output node of pipe given the pressure at input node using Begs and Brill gradient prediction method
    
    BB_P_Out = BB_Pressure_Drop(d, length, THETA, eps, p_sn, T_sn, T_en, q_osc, WCT, gamma_o, gamma_gas, r_sb, Salinity, 1, yukos_standard, 1, p_rb, b_ro)
End Function
Private Function BB_P_In(ByVal d As Double, ByVal length As Double, ByVal THETA As Double, _
                               ByVal p_sn As Double, ByVal T_en As Double, _
                               ByVal q_lsc As Double, ByVal WCT As Double, ByVal gamma_o As Double, ByVal gamma_gas As Double, _
                               ByVal r_sb As Double, Optional ByVal Salinity As Double = -1, _
                               Optional yukos_standard As Integer = 0, Optional ByVal T_sn As Double = 15.55, Optional eps As Double = 0.00004572, _
                               Optional p_rb As Double = -1, Optional b_ro As Double = -1) As Double
'function for calculation of pressure at output node of pipe given the pressure at input node using Begs and Brill gradient prediction method
    
    BB_P_In = BB_Pressure_Drop(d, length, THETA, eps, p_sn, T_sn, T_en, q_lsc, WCT, gamma_o, gamma_gas, r_sb, Salinity, 0, yukos_standard, 1, p_rb, b_ro)
End Function
Private Function GVisc(t As Double, p As Double, z As Double, gamma_gas As Double)
    Dim R As Double, mwg As Double, gd As Double
    Dim a As Double, B As Double, c As Double
    R = 1.8 * t
    mwg = 28.966 * gamma_gas
    gd = p * mwg / (z * t * 8.31)
    a = (9.379 + 0.01607 * mwg) * R ^ 1.5 / (209.2 + 19.26 * mwg + R)
    B = 3.448 + 986.4 / R + 0.01009 * mwg
    c = 2.447 - 0.2224 * B
    GVisc = 0.0001 * a * Exp(B * gd ^ c)
End Function
'=======================================================================
'====================  pwf_HD_calc_core  ===============================
'=======================================================================
'версия 0.1.1   29 Апреля 2005 г.
'В функциях Pin_p_wf и Hd_p_wf введена корреляция на ГФ>200 производится расчет pb_atma и bo_m3m3
'******************************************************************************
' Макрос
' Расчет забойного давления через динамический уровень для механизированных скважин
'
'
' Интерфейсный модуль для расчета тех. режимов
' для работы необходим модуль pwf_HD_calc_core
'
'
' Размерности величин совпадают с размерностями тех. режима скважин
'******************************************************************************
' Вычисление давления в стволе скважины в зависимости от глубины от устья
' выше насоса вычисляется давление в затрубном пространстве
Private Function P_L(ByVal p_wf As Double, ByVal L_wh As Double, _
       ByVal Hvd_m As Double, ByVal h_pump_m As Double, ByVal udl_m As Double, _
       ByVal d_cas_mm As Double, ByVal q_liq_sm3day As Double, ByVal fw_perc As Double, _
       ByVal pb_atma As Double, ByVal rs_m3m3 As Double, ByVal bo_m3m3 As Double, _
       ByVal gamma_oil As Double, ByVal gamma_wat As Double, _
 _
   Optional ByVal tr_HydCor As Integer = 2, Optional ByVal ksep_fr As Double = 0.7, _
   Optional ByVal Qg_mes_sm3day As Double = -1, _
   Optional ByVal dtub_mm As Double = 60, Optional ByVal bw_m3m3 As Double = 1, _
   Optional ByVal t_res_C_С As Double = 80, Optional ByVal Zav As Double = 0.9)
    
    
' p_wf     - забойное давление, атм.
' L_wh    - глубина скважины от устья, м
' Hvd_m   - измеренная глубина перфорации, м
' h_pump_m   - измеренная глубина спуска насоса, м
' udl_m     - Удлинение на глубину перфорации, м
' d_cas_mm   - Диаметр эксп коллоны внутр, мм
' q_liq_sm3day      - Дебит жидкости, м3/сут
' fw_perc      - обводненность, проценты
' pb_atma      - давление насыщения, атм
' rs_m3m3      - Газовый фактор по ТР , м3/т
' bo_m3m3      - объемный коэф. нефти , м3/м3
' gamma_oil  - плотность нефти в стандартных условиях, г/см3
' gamma_wat    - плотность воды в стандартных условиях, г/см3
'  tr_HydCor  - тип корреляции для учета газа
'  ksep_fr As          - коэф. сепарации насоса, доли
'  Qg_mes_sm3day       - расход газ в затрубе, замер, м3/сут (если <0 не учитывается)
'  Dtub_mm        - диам НКТ внешн, мм
'  Bw_m3m3           - объемный коэф. воды, м3/м3
'  t_res_C_С       - пластовая температура, C
'  Zav          - сверхсжтимаемость газа в затрубе средн
Dim l As Double
Dim Pin As Double
Dim HpumpAbs As Double
Dim HPerfAbs As Double
Dim L_whAbs As Double
Dim t_res_C As Double
t_res_C = t_res_C_С + 273
Call Habs_Hmes(udl_m, Hvd_m, h_pump_m, L_wh, HPerfAbs, HpumpAbs, L_whAbs)
P_L = 0
If (L_whAbs <= HPerfAbs) And (L_whAbs >= HpumpAbs) Then
  ' если уровень ниже насоса  - используем вычисление давление на насосе
  P_L = Pin_p_wf(p_wf, HPerfAbs - L_whAbs, d_cas_mm, q_liq_sm3day, fw_perc, pb_atma, rs_m3m3, bo_m3m3, gamma_oil, gamma_wat, _
                 tr_HydCor, dtub_mm, bw_m3m3, t_res_C, Zav)
End If
If (L_whAbs < HpumpAbs) And (L_whAbs > 0) Then
  ' если уровень выше насоса
  Pin = Pin_p_wf(p_wf, HPerfAbs - HpumpAbs, d_cas_mm, q_liq_sm3day, fw_perc, pb_atma, rs_m3m3, bo_m3m3, gamma_oil, gamma_wat, _
                tr_HydCor, dtub_mm, bw_m3m3, t_res_C, Zav)
  P_L = Pcas_atmg_L(Pin, HpumpAbs - L_whAbs, d_cas_mm, q_liq_sm3day, fw_perc, pb_atma, rs_m3m3, bo_m3m3, gamma_oil, _
     Qg_mes_sm3day, tr_HydCor, ksep_fr, dtub_mm, bw_m3m3, t_res_C, Zav)
End If
End Function
' расчет веса столба жидкости заданной высоты  ниже насоса
Private Static Function Pin_p_wf(ByVal p_wf As Double, ByVal Lbh As Double, _
       ByVal d_cas_mm As Double, ByVal q_liq_sm3day As Double, ByVal fw_perc As Double, _
       ByVal pb_atma As Double, ByVal rs_m3m3 As Double, ByVal bo_m3m3 As Double, _
       ByVal gamma_oil As Double, ByVal gamma_wat As Double, _
 _
   Optional ByVal tr_HydCor As Integer = 2, _
   Optional ByVal dtub_mm As Double = 60, Optional ByVal bw_m3m3 As Double = 1, _
   Optional ByVal t_res_C As Double = 330, Optional ByVal Zav As Double = 0.9, _
   Optional ByVal gamma_gas As Double = 0.8, Optional ByVal correct_high_GOR As Double = True)
    
    
'  p_wf          Забойное давление, атм
'  Lbh          Абсолютная высота над забоем скважины, м
'  d_cas_mm        Диаметр эксплуатационной коллоны, мм
'  q_liq_sm3day           дебит жидкости, м3/сут
'  fw_perc           обводненность,  %
'  pb_atma           давление насыщения, атм.
'  rs_m3m3           газовый фактор, м3/т
'  bo_m3m3           объемный коэффициент нефти, м3/м3
'  gamma_oil       плотность нефти в поверхностных условиях, г/см3
'  gamma_wat         плотность воды, г/см3
 
'  tr_HydCor  тип корреляции
'  Dtub_mm        диаметр НКТ
'  Bw_m3m3           объемный коэффициент воды
'  t_res_C         температура пласта
'  Zav          сжимаемость газа
'  gamma_gas     удельная плотность газа
'  correct_high_GOR  флаг исползования коррекции для высокго газового фактора
           
  Dim void As Double
  Dim p_wfD As Double
  Dim L0_w As Double
  Dim vsgw As Double
  Dim vsl As Double
  Dim PscD As Double
  'Dim gamma_gas As Double
  Dim fw_perc_out As Double
  
  
  Dim pb_atma_calc As Double
  Dim bo_m3m3_calc As Double
    
  If correct_high_GOR Then
    Call corelations_for_high_GOR(rs_m3m3 * gamma_oil, t_res_C - 273, gamma_oil, gamma_gas, pb_atma, bo_m3m3, pb_atma_calc, bo_m3m3_calc)
  Else
    pb_atma_calc = pb_atma
    bo_m3m3_calc = bo_m3m3
  End If
 
 void = -1
 Dim Pin_void As Double: Dim Qw_void As Double:
 Dim Qo_void As Double: Dim rs_m3m3_void As Double:
 Call var_calc_below_pump(p_wf, d_cas_mm, dtub_mm, pb_atma_calc, rs_m3m3, q_liq_sm3day, bo_m3m3_calc, bw_m3m3, gamma_oil, gamma_wat, fw_perc, void, void, t_res_C, Zav, _
           p_wfD, vsgw, vsl, PscD, fw_perc_out, Qw_void, Qo_void, rs_m3m3_void, L0_w)
 
 Dim Lbhd As Double
 Lbhd = Lbh / L0_w
  
 Pin_p_wf = PinD_p_wfD(p_wfD, Lbhd, vsgw, vsl, bo_m3m3_calc, PscD, fw_perc_out, gamma_gas, tr_HydCor) _
           * pb_atma_calc
 End Function
 
' расчет веса столба жидкости заданной высоты  выше насоса
Private Function Pcas_atmg_L(ByVal Pin As Double, ByVal Lpump As Double, _
        ByVal d_cas_mm As Double, ByVal q_liq_sm3day As Double, ByVal fw_perc As Double, _
        ByVal pb_atma As Double, ByVal rs_m3m3 As Double, ByVal bo_m3m3 As Double, _
        ByVal gamma_oil As Double, _
         Optional ByVal Qg_mes_sm3day As Double = -1, _
         Optional ByVal tr_HydCor As Integer = 2, Optional ByVal ksep_fr As Double = 0.7, _
         Optional ByVal dtub_mm As Double = 60, Optional ByVal bw_m3m3 As Double = 1, _
         Optional ByVal t_res_C As Double = 330, Optional ByVal Zav As Double = 0.9)
' Входные параметры
' Pin давление на приеме насоса, атм
' Lpump   абсолютная глубина подвеса насоса, м
'  d_cas_mm        Диаметр эксплуатационной коллоны, мм
'  q_liq_sm3day           дебит жидкости, м3/сут
'  fw_perc           обводненность,  %
'  pb_atma           давление насыщения, атм.
'  rs_m3m3           газовый фактор, м3/т
'  bo_m3m3           объемный коэффициент нефти, м3/м3
'  gamma_oil       плотность нефти в поверхностных условиях, г/см3
 
'  tr_HydCor  тип корреляции
'  ksep_fr  коэффициент сепарации насоса, доли
'  Dtub_mm        диаметр НКТ
'  Bw_m3m3           объемный коэффициент воды
'  t_res_C         температура пласта
'  Zav          сжимаемость газа
'  gamma_gas     удельная плотность газа
'  correct_high_GOR  флаг исползования коррекции для высокго газового фактора
           
Dim PinD As Double ' безразмерное давление на приеме насоса
Dim Qo_vol As Double   ' объемный расход нефти
Dim rs_m3m3_vol As Double   ' объемный газовый фактор
Dim Qw_vol As Double   ' объемный расход воды
Dim fw_perc_d As Double     ' обводненность  в долях
Dim vsgb As Double ' приведеная скорость газа в затрубе отнесенная к давлению насыщения
Dim L0 As Double ' обезразмеривающий коэффициент для расстояний. Длина столба негазированной жидкости обеспецивающей давлений насыщения
Dim Lind As Double
Dim PfD As Double ' безразмерное затрубное давление
Dim PscD As Double ' безразмерное давление при стардартных условиях
Dim Qg_measured As Boolean
Dim void As Double
Call var_calc_above_pump(Pin, ksep_fr, d_cas_mm, dtub_mm, void, pb_atma, rs_m3m3, q_liq_sm3day, bo_m3m3, gamma_oil, fw_perc, Qg_mes_sm3day, t_res_C, Zav, _
    PinD, PfD, vsgb, PscD, fw_perc_d, Qw_vol, Qo_vol, rs_m3m3_vol, L0)
If Qg_mes_sm3day < 0 Then
  Qg_measured = False
Else
  Qg_measured = True
End If
Lind = Lpump / L0
Pcas_atmg_L = pb_atma * Pfd_Ld(PinD, Lind, vsgb, bo_m3m3, PscD, tr_HydCor, Qg_measured)
End Function
' вычисление динамического уровня по давлению на забое и затрубному давлению
Private Function Hd_p_wf(ByVal p_wf As Double, ByVal Pcas_atmg As Double, _
        ByVal Hvd_m As Double, ByVal h_pump_m As Double, ByVal udl_m As Double, _
        ByVal d_cas_mm As Double, ByVal q_liq_sm3day As Double, ByVal fw_perc As Double, _
        ByVal pb_atma As Double, ByVal rs_m3m3 As Double, ByVal bo_m3m3 As Double, _
        ByVal gamma_oil As Double, ByVal gamma_wat As Double, _
 _
    Optional ByVal tr_HydCor As Integer = 2, Optional ByVal ksep_fr As Double = 0.7, _
    Optional ByVal Qg_mes_sm3day As Double = -1, _
    Optional ByVal dtub_mm As Double = 60, Optional ByVal bw_m3m3 As Double = 1, _
    Optional ByVal t_res_C As Double = 330, Optional ByVal Zav As Double = 0.9, Optional ByVal gamma_gas As Double = 0.8, _
    Optional ByVal Udl_h_pump_m As Double = -1)
 Dim Pin As Double
 Dim correction As Double
 Dim Tav As Double
 
 
 Dim pb_atma_calc As Double
 Dim bo_m3m3_calc As Double
   
 Call corelations_for_high_GOR(rs_m3m3 * gamma_oil, t_res_C - 273, gamma_oil, gamma_gas, pb_atma, bo_m3m3, pb_atma_calc, bo_m3m3_calc)
 
' расчет средней температуры в затрубе
If (t_res_C = 0) Then
  t_res_C = 337
End If
If dtub_mm = 0 Then
    dtub_mm = 60
End If
Tav = 0.8 * t_res_C + 0.2 * const_tsc_K
If Udl_h_pump_m = -1 Then Udl_h_pump_m = h_pump_m * udl_m / Hvd_m
 correction = (1 - Udl_h_pump_m / h_pump_m)
 
' Pin = Pin_p_wf(p_wf, correction * (Hvd_m - h_pump_m), d_cas_mm, q_liq_sm3day, fw_perc, pb_atma_calc, rs_m3m3, bo_m3m3_calc, gamma_oil, gamma_wat, _
 '       tr_HydCor, Dtub_mm, Bw_m3m3, Tav, Zav, gamma_gas)
 Pin = Pin_p_wf(p_wf, ((Hvd_m - udl_m) - (h_pump_m - Udl_h_pump_m)), d_cas_mm, q_liq_sm3day, fw_perc, pb_atma_calc, rs_m3m3, bo_m3m3_calc, gamma_oil, gamma_wat, _
        tr_HydCor, dtub_mm, bw_m3m3, Tav, Zav, gamma_gas)
 'Hd_p_wf = 1 / correction * _
 '  (h_pump_m * correction - L_Pin(Pin, Pcas_atmg, d_cas_mm, q_liq_sm3day, fw_perc, pb_atma_calc, rs_m3m3, bo_m3m3_calc, gamma_oil, Qg_mes_sm3day, _
 '   tr_HydCor, ksep_fr, Dtub_mm, Bw_m3m3, Tav, Zav))
 Hd_p_wf = 1 / correction * (h_pump_m * correction - L_Pin(Pin, Pcas_atmg, d_cas_mm, q_liq_sm3day, fw_perc, pb_atma_calc, rs_m3m3, bo_m3m3_calc, gamma_oil, Qg_mes_sm3day, _
    tr_HydCor, ksep_fr, dtub_mm, bw_m3m3, Tav, Zav))
    
End Function
' вычисление высоты столба жидкости над насосом обеспечивающей заданное давление
' входные параметры адаптированы для данных тех режима скважин
Private Function L_Pin(ByVal Pin As Double, ByVal Pcas_atmg As Double, _
        ByVal d_cas_mm As Double, ByVal q_liq_sm3day As Double, ByVal fw_perc As Double, _
        ByVal pb_atma As Double, ByVal rs_m3m3 As Double, ByVal bo_m3m3 As Double, _
        ByVal gamma_oil As Double, _
        Optional ByVal Qg_mes_sm3day As Double = -1, _
    Optional ByVal tr_HydCor As Integer = 2, Optional ByVal ksep_fr As Double = 0.7, _
    Optional ByVal dtub_mm As Double = 60, Optional ByVal bw_m3m3 As Double = 1, _
    Optional ByVal Tav As Double = 330, Optional ByVal Zav As Double = 0.9) As Double
' Входные параметры
' Pin давление на приеме насоса, атм
' Pcas_atmg    затрубное давление, атм
' d_cas_mm внутренний диаметр эксплуатационной коллоны, мм
' q_liq_sm3day    дебит жидкости в стандартных условиях, м3/сут
' fw_perc    обводненность в стандартных условиях, %
' pb_atma    давлени насыщения, atma
' rs_m3m3    газовый фактор, м3/т
' bo_m3m3   объемный коэффициент нефти, м3/м3 ?
' gamma_oil плонтность нефти в стандартных условиях, г/см3
'
' опциональный параметры
' ksep_fr  коэффициент сепарации насоса, доли
' Dtub_mm = 60 внешний диаметр НКТ, мм
' Tav = 330 температура в затрубе средняя, К
' Zav = 0.9  сверхсжимаемость газа в затрубе
Dim PinD As Double ' безразмерное давление на приеме насоса
Dim HPerfAbs As Double ' абсолютное значение глубины верхних дыр перфорации
Dim HpumpAbs As Double ' абсолютное значение глубины подвеса насоса
Dim HdinAbs As Double ' абсолютное значение глубины динамического уровня
Dim Qo_vol As Double   ' объемный расход нефти
Dim rs_m3m3_vol As Double   ' объемный газовый фактор
Dim Qw_vol As Double   ' объемный расход воды
Dim fw_perc_d As Double     ' обводненность  в долях
Dim vsgb As Double ' приведеная скорость газа в затрубе отнесенная к давлению насыщения
Dim L0 As Double ' обезразмеривающий коэффициент для расстояний. Длина столба негазированной жидкости обеспецивающей давлений насыщения
Dim Ld_above_pump As Double  ' безразмерная высота столба жидкости над насосом
Dim PfD As Double ' безразмерное затрубное давление
Dim PscD As Double ' безразмерное давление при стардартных условиях
Dim Qg_measured As Boolean
Call var_calc_above_pump(Pin, ksep_fr, d_cas_mm, dtub_mm, Pcas_atmg, pb_atma, rs_m3m3, q_liq_sm3day, bo_m3m3, gamma_oil, fw_perc, Qg_mes_sm3day, Tav, Zav, _
    PinD, PfD, vsgb, PscD, fw_perc_d, Qw_vol, Qo_vol, rs_m3m3_vol, L0)
If Qg_mes_sm3day < 0 Then
  Qg_measured = False
Else
  Qg_measured = True
End If
L_Pin = L0 * Lgd_Pind_Ro(PinD, PfD, vsgb, bo_m3m3, PscD, tr_HydCor, Qg_measured)
End Function
' ----------------------------------------------------------------------------------
' перевод измеренных глубин в абсолютные
Private Sub Habs_Hmes(ByVal udl_m As Double, ByVal Hvd_m As Double, ByVal h_pump_m As Double, ByVal Lmes As Double, _
                      ByRef HPerfAbs As Double, ByRef HpumpAbs As Double, ByRef LAbs As Double)
                      
 HPerfAbs = Hvd_m * (1 - udl_m / Hvd_m)
 HpumpAbs = h_pump_m * (1 - udl_m / Hvd_m)
 LAbs = Lmes * (1 - udl_m / Hvd_m)
End Sub
' расчет вспомогательных переменных ниже насоса
Private Sub var_calc_below_pump(ByVal Pin_atmg As Double, _
        ByVal d_cas_mm As Double, ByVal dtub_mm As Double, _
        ByVal pb_atma As Double, ByVal rs_m3m3 As Double, _
        ByVal q_liq_sm3day As Double, ByVal bo_m3m3 As Double, ByVal bw_m3m3 As Double, _
        ByVal gamma_oil As Double, ByVal gamma_wat As Double, _
        ByVal fw_perc As Double, ByVal Qo As Double, ByVal Qw As Double, _
        ByVal Tav As Double, ByVal Zav As Double, _
 _
      ByRef PinD As Double, _
      ByRef vsgw As Double, _
      ByRef vsl As Double, _
      ByRef PscD As Double, _
      ByRef fw_perc_d As Double, _
      ByRef Qw_vol As Double, _
      ByRef Qo_vol As Double, _
      ByRef rs_m3m3_vol As Double, _
      ByRef L0_w As Double)
Dim p_intake_atma As Double
Dim Ac_below_pump As Double ' площадь сечения колонны ниже насоса
Dim Alw As Double ' размерный коэффициент площади ниже насоса
Dim Qgsc As Double  ' дебит газа в затрубе в стандартных условиях
 
    If Qo < 0 Then
        fw_perc_d = fw_perc / 100
        Qw_vol = q_liq_sm3day * fw_perc_d
        Qo_vol = q_liq_sm3day * (1 - fw_perc_d)
        rs_m3m3_vol = rs_m3m3 * gamma_oil
    Else
        fw_perc_d = Qw / (Qo + Qw)
        Qw_vol = Qw
        Qo_vol = Qo
        rs_m3m3_vol = rs_m3m3
    End If
    p_intake_atma = Pin_atmg + const_psc_atma
    PinD = p_intake_atma / pb_atma
    PscD = const_psc_atma / pb_atma
   ' gamma_gas = gamma_oil / gamma_wat
   'PscD = const_Psc_atma / pb_atma
    Qgsc = Qo_vol * rs_m3m3_vol
    Ac_below_pump = 3.1415 * (((d_cas_mm / 1000) ^ 2) / 4)
    Alw = Ac_below_pump * const_tsc_K / Tav / Zav * 86400
    vsl = 1 / 86400 * (Qo_vol * bo_m3m3 + Qw_vol * bw_m3m3) / Ac_below_pump
    vsgw = Qgsc / Alw / pb_atma * const_psc_atma
    L0_w = pb_atma / gamma_oil / const_g * 100
End Sub
' расчет вспомогательных переменных ниже насоса
Private Sub var_calc_above_pump(ByVal Pin_atmg As Double, ByVal ksep_fr As Double, _
        ByVal d_cas_mm As Double, ByVal dtub_mm As Double, ByVal Pcas_atmg As Double, _
        ByVal pb_atma As Double, ByVal rs_m3m3 As Double, _
        ByVal q_liq_sm3day As Double, ByVal bo_m3m3 As Double, ByVal gamma_oil As Double, _
        ByVal fw_perc As Double, ByVal Qg_mes_sm3day As Double, ByVal Tav As Double, ByVal Zav As Double, _
 _
      ByRef PinD As Double, _
      ByRef PfD As Double, _
      ByRef vsgb As Double, _
      ByRef PscD As Double, _
      ByRef fw_perc_d As Double, _
      ByRef Qw_vol As Double, _
      ByRef Qo_vol As Double, _
      ByRef rs_m3m3_vol As Double, _
      ByRef L0 As Double)
Dim p_cas_atma As Double
Dim p_intake_atma As Double
Dim Ac_above_pump As Double ' площадь затрубного пространста
Dim al As Double ' размерный коэффициент площади
    fw_perc_d = fw_perc / 100
    Qw_vol = q_liq_sm3day * fw_perc_d
    Qo_vol = q_liq_sm3day * (1 - fw_perc_d)
    rs_m3m3_vol = rs_m3m3 * gamma_oil
    p_cas_atma = Pcas_atmg + const_psc_atma
    p_intake_atma = Pin_atmg + const_psc_atma
    PinD = p_intake_atma / pb_atma
    PfD = p_cas_atma / pb_atma
    PscD = const_psc_atma / pb_atma
    Ac_above_pump = 3.1415 * ((d_cas_mm / 2000) ^ 2 - (dtub_mm / 2000) ^ 2)
    al = Ac_above_pump * const_tsc_K / Tav / Zav * 86400
    If Qg_mes_sm3day < 0 Then
        vsgb = Qo_vol * rs_m3m3_vol * ksep_fr / al / pb_atma * const_psc_atma
    Else
        vsgb = Qg_mes_sm3day / al / pb_atma * const_psc_atma
    End If
    L0 = pb_atma / gamma_oil / const_g * 100
End Sub
 
 
' расчет безразмерного давления на приеме насоса по забойному давлению
Private Function PinD_p_wfD(ByVal p_wfD As Double, ByVal Lind As Double, _
           ByVal vsgw As Double, ByVal vsl As Double, ByVal bo_m3m3 As Double, _
           ByVal PscD As Double, ByVal fw_perc As Double, ByVal gamma_gas As Double, _
          Optional ByVal tr_HydCor As Integer = 2)
' LinD расстояние от насоса до забоя скважины
' p_wfD - безразмерное забойное давление
' vsgw - приведеная скорость газа для всего газа, отнесенная к давлению насыщения
' vsl  - приведенная скорость жидкости
' bo_m3m3   - объемный коэффициент нефти
' PscD - безразмерное давление в нормальных условиях
' fw_perc   - обводненность  с стандартных условиях
' gamma_gas - удельная плотность газа
' tr_HydCor - корреляция для расчета 1. Хасан Кабир Хасанов
                             
 Dim PinD As Double
 Dim p As Double, l As Double
 
 Dim p1 As Double:
 Dim p2 As Double:
 p2 = 0
 p1 = p_wfD
 
 ' search sollution
 Do
  p = (p2 + p1) / 2
  
  Select Case tr_HydCor
   Case 2, 3, 4
    l = Lwd_p_wfd_ro(p_wfD, p, vsgw, vsl, bo_m3m3, PscD, fw_perc, gamma_gas, tr_HydCor)
    
  End Select
  If (Abs(l - Lind) < 0.0001) Or Abs(p1 - p2) < 0.0000001 Then Exit Do ' определиться с точностью !!!
  If l < Lind Then p1 = p Else p2 = p      ' можно в итоге применить и линейную интерполяцию !!!
 Loop
 
 PinD_p_wfD = p
 
 If Abs(p1 - p2) < 0.0000001 Then
 
 PinD_p_wfD = p
 End If
End Function
' Вычисление давления на приеме насоса по газовому фактору
Private Function pwf_rs_m3m3(ksep_fr As Double, Hvd_m As Double, h_pump_m As Double, _
    h_dyn_m As Double, pb_atma As Double, Pcas_atmg As Double, _
    rs_m3m3 As Double, Qo As Double, bo_m3m3 As Double, gamma_oil As Double, _
    Qw As Double, gamma_wat As Double, d_cas_mm As Double, _
    Optional tr_HydCor As Integer = 2, _
    Optional dtub_mm As Double = 60, Optional bw_m3m3 As Double = 1, _
    Optional Tav As Double = 330, Optional Zav As Double = 0.9)
' Входные параметры
' ksep_fr  коэффициент сепарации насоса, доли
' Hvd_m глубина верхних дыр перфорации, абсолютная, м
' h_pump_m глубина спуска насоса, абсолютная,  м
' h_dyn_m  динамический уровень, абсолютный, м
' pb_atma    давлени насыщения, atma
' Pcas_atmg    затрубное давление, атм
' rs_m3m3    газовый фактор, м3/м3
' Qo    дебит нефти в стандартных условиях, м3/сут
' bo_m3m3   объемный коэффициент нефти, м3/м3 ?
' gamma_oil плонтность нефти в стандартных условиях, г/см3
' Qw    дебит воды в стандартных условиях, м3/сут
' d_cas_mm внутренний диаметр эксплуатационной коллоны, мм
'
' опциональный параметры
' Dtub_mm = 60 внешний диаметр НКТ, мм
' Tav = 330 температура в затрубе средняя, К
' Zav = 0.9  сверхсжимаемость газа в затрубе
Dim PinD As Double ' безразмерное давление на приеме насоса
Dim Qgsc As Double  ' дебит газа в затрубе в стандартных условиях
Const QGasMeasured = False
' вычислим дебит газа для расчета выше насоса
'
Qgsc = Qo * rs_m3m3 * ksep_fr
pwf_rs_m3m3 = pwf_Qgmes_atma(Qgsc, Hvd_m, h_pump_m, h_dyn_m, rs_m3m3, pb_atma, Pcas_atmg, Qo, bo_m3m3, gamma_oil, Qw, gamma_wat, d_cas_mm, _
                     tr_HydCor, dtub_mm, bw_m3m3, Tav, Zav, QGasMeasured)
End Function
' Вычисление давления на забое по давлению на приеме насоса
Private Function pwf_p_intake_atma(ByVal Pin_atmg As Double, ByVal Hvd_m As Double, ByVal h_pump_m As Double, _
    ByVal rs_m3m3 As Double, ByVal pb_atma As Double, _
    ByVal Qo As Double, ByVal bo_m3m3 As Double, ByVal gamma_oil As Double, _
    ByVal Qw As Double, ByVal gamma_wat As Double, ByVal d_cas_mm As Double, _
    Optional ByVal tr_HydCor As Integer = 2, _
    Optional ByVal bw_m3m3 As Double = 1, _
    Optional ByVal Tav As Double = 330, Optional ByVal Zav As Double = 0.9, _
    Optional gamma_gas As Double = 0.8)
    
' Входные параметры
' Pin  давление на приеме насоса
' h_pump_m глубина спуска насоса, м
' h_dyn_m  динамический уровень измеренный, м
' rs_m3m3    газовый фактор  м3/м3
' pb_atma    давлени насыщения, atma
' Pcas_atmg    затрубное давление, атм
' Qo    дебит нефти в стандартных условиях, м3/сут
' bo_m3m3   объемный коэффициент нефти, м3/м3 ?
' gamma_oil плонтность нефти в стандартных условиях, г/см3
' Qw    дебит воды в стандартных условиях, м3/сут
' d_cas_mm внутренний диаметр эксплуатационной коллоны, мм
'
' опциональный параметры
' Dtub_mm = 60 внешний диаметр НКТ, мм
' Tav = 330 температура в затрубе средняя, К
' Zav = 0.9  сверхсжимаемость газа в затрубе
Dim PinD As Double ' безразмерное давление на приеме насоса
Dim p_intake_atma As Double
' расчет забойного давления
Dim p_wfD As Double ' безразмерное пластовое давление
Dim L0_w As Double ' обезразмеривающий коэффициент для расстояний ниже насоса.
Dim Lin_wfD As Double ' безразмерное расстояние от насоса до забоя
Dim vsgw As Double ' приведенная скорость газа ниже насоса
Dim vsl As Double  ' приведенная скорость жидкости ниже насоса
Dim Ac_below_pump As Double ' площадь сечения колонны ниже насоса
Dim Alw As Double ' размерный коэффициент площади ниже насоса
Dim p_wfDMax As Double ' максимально возможное забойное давление безразмерное
Dim Qgsc As Double  ' дебит газа в затрубе в стандартных условиях
Dim PscD As Double   ' безразмерное давление при стандартных условиях
Dim fw_perc As Double     ' обводненность в стандартных условиях
Dim void As Double
Dim Pin_void As Double: Dim Qw_void As Double: Dim Qo_void As Double: Dim rs_m3m3_void As Double
    void = -1
    
    Call var_calc_below_pump(void, d_cas_mm, 60, pb_atma, rs_m3m3, void, bo_m3m3, bw_m3m3, gamma_oil, gamma_wat, void, Qo, Qw, Tav, Zav, _
               Pin_void, vsgw, vsl, PscD, fw_perc, Qw_void, Qo_void, rs_m3m3_void, L0_w)
    fw_perc = Qw / (Qw + Qo)
    p_intake_atma = Pin_atmg + const_psc_atma
    PinD = p_intake_atma / pb_atma
    p_wfDMax = 3
    Lin_wfD = (Hvd_m - h_pump_m) / L0_w
    p_wfD = p_wfd_Pind_pshl(Lin_wfD, PinD, vsgw, vsl, bo_m3m3, PscD, fw_perc, gamma_gas, tr_HydCor)
    ' вычисляем размерное значение давления на приеме насоса
    pwf_p_intake_atma = p_wfD * pb_atma
End Function
' Вычисление давления на приеме насоса по замеру расхода газа в затрубе
Private Function pwf_Qgmes_atma(ByVal Qgmes As Double, ByVal Hvd_m As Double, ByVal h_pump_m As Double, _
    ByVal h_dyn_m As Double, ByVal rs_m3m3 As Double, ByVal pb_atma As Double, ByVal Pcas_atmg As Double, _
    ByVal Qo As Double, ByVal bo_m3m3 As Double, ByVal gamma_oil As Double, _
    ByVal Qw As Double, ByVal gamma_wat As Double, ByVal d_cas_mm As Double, _
    Optional ByVal tr_HydCor As Integer = 2, _
    Optional ByVal dtub_mm As Double = 60, Optional ByVal bw_m3m3 As Double = 1, _
    Optional ByVal Tav As Double = 330, Optional ByVal Zav As Double = 0.9, _
    Optional ByVal QgMeasured As Boolean = True, Optional gamma_gas As Double = 0.8)
    
' Входные параметры
' Qgmes  дебит газа в затрубе в стандартных условиях, м3/сут
' h_pump_m глубина спуска насоса, м
' h_dyn_m  динамический уровень измеренный, м
' rs_m3m3    газовый фактор  м3/м3
' pb_atma    давлени насыщения, atma
' Pcas_atmg    затрубное давление, атм
' Qo    дебит нефти в стандартных условиях, м3/сут
' bo_m3m3   объемный коэффициент нефти, м3/м3 ?
' gamma_oil плонтность нефти в стандартных условиях, г/см3
' Qw    дебит воды в стандартных условиях, м3/сут
' d_cas_mm внутренний диаметр эксплуатационной коллоны, мм
'
' опциональный параметры
' Dtub_mm = 60 внешний диаметр НКТ, мм
' Tav = 330 температура в затрубе средняя, К
' Zav = 0.9  сверхсжимаемость газа в затрубе
Dim PinD As Double ' безразмерное давление на приеме насоса
Dim p_intake_atma As Double
Dim qg As Double
'Вычисляем давление на приеме насоса
p_intake_atma = Pin_Qgmes_atma(Qgmes, h_pump_m, h_dyn_m, pb_atma, Pcas_atmg, bo_m3m3, gamma_oil, d_cas_mm, tr_HydCor, dtub_mm, Tav, Zav, QgMeasured)
PinD = p_intake_atma / pb_atma
' расчет забойного давления
Dim p_wfD As Double ' безразмерное пластовое давление
Dim L0_w As Double ' обезразмеривающий коэффициент для расстояний ниже насоса.
Dim Lin_wfD As Double ' безразмерное расстояние от насоса до забоя
Dim vsgw As Double ' приведенная скорость газа ниже насоса
Dim vsl As Double  ' приведенная скорость жидкости ниже насоса
Dim Ac_below_pump As Double ' площадь сечения колонны ниже насоса
Dim Alw As Double ' размерный коэффициент площади ниже насоса
Dim p_wfDMax As Double ' максимально возможное забойное давление безразмерное
Dim Qgsc As Double  ' дебит газа в затрубе в стандартных условиях
Dim PscD As Double   ' безразмерное давление при стандартных условиях
Dim fw_perc As Double     ' обводненность в стандартных условиях
'Dim gamma_gas As Double  ' удельная плотность газа в стандартных условиях
Dim void As Double
void = -1
Dim Pin_void As Double: Dim Qw_void As Double: Dim Qo_void As Double: Dim rs_m3m3_void As Double
Call var_calc_below_pump(void, d_cas_mm, dtub_mm, pb_atma, rs_m3m3, void, bo_m3m3, bw_m3m3, gamma_oil, gamma_wat, void, Qo, Qw, Tav, Zav, _
           Pin_void, vsgw, vsl, PscD, fw_perc, Qw_void, Qo_void, rs_m3m3_void, L0_w)
           
fw_perc = Qw / (Qw + Qo)
p_wfDMax = 3
Lin_wfD = (Hvd_m - h_pump_m) / L0_w
p_wfD = p_wfd_Pind_pshl(Lin_wfD, PinD, vsgw, vsl, bo_m3m3, PscD, fw_perc, gamma_gas, tr_HydCor)
' вычисляем размерное значение давления на приеме насоса
pwf_Qgmes_atma = p_wfD * pb_atma
End Function
' вычисление забойного давления по давлению на приеме
Private Function p_wfd_Pind_pshl(Lind As Double, PinD As Double, _
                     vsgw As Double, vsl As Double, bo_m3m3 As Double, _
                PscD As Double, fw_perc As Double, gamma_gas As Double, Optional tr_HydCor As Integer = 2)
' LinD расстояние от насоса до забоя скважины
' PinD - безразмерное давление на приеме
' vsgw -  приведеная скорость газа для всего газа, отнесенная к давлению насыщения
' vsl  - приведенная скорость жидкости
' bo_m3m3   - объемный коэффициент нефти
' PscD - безразмерное давление в нормальных условиях
' fw_perc   - обводненность  с стандартных условиях
' gamma_gas - удельная плотность газа
' tr_HydCor - корреляция для расчета 1. Хасан Кабир Хасанов
                             
 Dim p1 As Double:
 Dim p2 As Double:
 Dim s As Integer: s = 1   ' константа уточнение решений для случаев низких давлений насыщания
 Dim l As Double
 Dim p As Double
 Const Max_p_wfD = 10
 
 p = Max_p_wfD / 2 ' правильная инициализация переменной для выполнения\ условия цикла
 
 Do Until (Abs(p - (Max_p_wfD * s / 2)) > 0.0000001) ' выполнять до тех пор, пока решение не будет отличаться от оценки правой границы допустимого диапазона
 
  p1 = PinD
  p2 = Max_p_wfD * s
 
   ' счетчик операций
  'Dim i As Integer
  'i = 1
  ' search sollution
  Do
   'i = i + 1
   p = (p2 + p1) / 2
  
   Select Case tr_HydCor
    Case 2, 3, 4
     l = Lwd_p_wfd_ro(p, PinD, vsgw, vsl, bo_m3m3, PscD, fw_perc, gamma_gas, tr_HydCor)
    
   End Select
   If (Abs(l - Lind) < 0.0001) Or Abs(p1 - p2) < 0.0000001 Then Exit Do ' определиться с точностью !!!
   If l < Lind Then p1 = p Else p2 = p      ' можно в итоге применить и линейную интерполяцию !!!
  Loop
  
  s = s * 2
 Loop
 p_wfd_Pind_pshl = p
End Function
'***************************************************************************************************************'
'
' Вычисление давления на приеме насоса по газовому фактору
Private Function Pin_rs_m3m3(ksep_fr As Double, h_pump_m As Double, h_dyn_m As Double, pb_atma As Double, Pcas_atmg As Double, _
    rs_m3m3 As Double, Qo As Double, bo_m3m3 As Double, gamma_oil As Double, d_cas_mm As Double, _
    Optional tr_HydCor As Integer = 2, _
    Optional dtub_mm As Double = 60, Optional Tav As Double = 330, Optional Zav As Double = 0.9)
' Входные параметры
' ksep_fr  коэффициент сепарации насоса, доли
' h_pump_m глубина спуска насоса, м
' h_dyn_m  динамический уровень измеренный, м
' pb_atma    давлени насыщения, atma
' Pcas_atmg    затрубное давление, атм
' rs_m3m3    газовый фактор, м3/м3
' Qo    дебит нефти в стандартных условиях, м3/сут
' bo_m3m3   объемный коэффициент нефти, м3/м3 ?
' gamma_oil плонтность нефти в стандартных условиях, г/см3
' d_cas_mm внутренний диаметр эксплуатационной коллоны, мм
'
' опциональный параметры
' Dtub_mm = 60 внешний диаметр НКТ, мм
' Tav = 330 температура в затрубе средняя, К
' Zav = 0.9  сверхсжимаемость газа в затрубе
Dim Qgsc As Double  ' дебит газа в затрубе в стандартных условиях
Qgsc = Qo * rs_m3m3 * ksep_fr
' вызываем расчет для замера газа и передаем ему флаг что у нас идет расчет
Pin_rs_m3m3 = Pin_Qgmes_atma(Qgsc, h_pump_m, h_dyn_m, pb_atma, Pcas_atmg, bo_m3m3, gamma_oil, d_cas_mm, tr_HydCor, dtub_mm, Tav, Zav, False)
End Function
'Вычисление давления на приеме насоса по замеру дебита в затрубе
Private Function Pin_Qgmes_atma(Qgmes As Double, h_pump_m As Double, h_dyn_m As Double, _
        pb_atma As Double, Pcas_atmg As Double, _
    bo_m3m3 As Double, gamma_oil As Double, d_cas_mm As Double, _
    Optional tr_HydCor As Integer = 2, _
    Optional dtub_mm As Double = 60, Optional Tav As Double = 330, Optional Zav As Double = 0.9, _
    Optional QgMeasured As Boolean = True)
'
' Входные параметры
' Qgmes - замер дебита газа в затрубе в стардартных условиях, м3/сут
' h_pump_m глубина спуска насоса, м
' h_dyn_m  динамический уровень измеренный, м
' pb_atma    давлени насыщения, atma
' Pcas_atmg    затрубное давление, атм
' bo_m3m3     объемный коэффициент нефти, м3/м3 ?
' gamma_oil плонтность нефти в стандартных условиях, г/см3
' d_cas_mm  внутренний диаметр эксплуатационной коллоны, мм
' correlation=2 tr_HydCor type
'
' опциональные параметры
' Dtub_mm = 60   внешний диаметр НКТ, мм
' Tav = 330    температура в затрубе средняя, К
' Zav = 0.9    сверхсжимаемость газа в затрубе
' QgMeasured
Dim Ac_above_pump As Double ' площадь затрубного пространста
Dim al As Double ' размерный коэффициент площади
Dim vsgb As Double ' приведеная скорость газа в затрубе отнесенная к давлению насыщения
Dim ro_cas As Double ' плотность жидкости в затрубе над насосом
Dim L0 As Double ' обезразмеривающий коэффициент для расстояний. Длина столба негазированной жидкости обеспецивающей давлений насыщения
Dim PinD As Double ' безразмерное давление на приеме насоса
Dim Ld_above_pump As Double  ' безразмерная высота столба жидкости над насосом
Dim PfD As Double ' безразмерное затрубное давление
Dim PscD As Double ' безразмерное давление при стардартных условиях
Dim void As Double
void = 1
' некоторые вызовы оставлены пустыми
Call var_calc_above_pump(void, void, d_cas_mm, dtub_mm, Pcas_atmg, pb_atma, void, void, bo_m3m3, gamma_oil, 0, _
     Qgmes, Tav, Zav, _
    void, PfD, vsgb, PscD, void, void, void, void, L0)
Ld_above_pump = (h_pump_m - h_dyn_m) / L0
'Вычисляем давление на приеме насоса
PinD = Pd_Ld2(Ld_above_pump, PfD, vsgb, bo_m3m3, PscD, tr_HydCor, QgMeasured)
' вычисляем размерное значение давления на приеме насоса
Pin_Qgmes_atma = PinD * pb_atma
End Function
' вычисление значения давления  по уровню
Private Function Pfd_Ld(PinD As Double, _
                       Lind As Double, _
                       vsgb_0 As Double, _
                       bo_m3m3 As Double, _
                       PscD As Double, _
                       Optional tr_HydCor As Integer = 2, _
                       Optional QgMeasured As Boolean = False, _
                       Optional solFlag As Boolean = False)
' Входные параметры
' PinD давление на приеме насоса
' LinD - длина столба над насосом
' vsgb_0 -  приведеная скорость затр. газа для всего газа, отнесенная к давлению насыщения
' bo_m3m3   - объемный коэффициент нефти
' PscD  - безразмерное давление при стандартных условиях
' tr_HydCor - корреляция для расчета 1. Хасан Кабир
'                                      2. Хасан Кабир - с учетом изменения плотности
'               по умолчанию 2
' QgMeasured  - флаг расчета по замеренному дебиту заьрубного газа
' solFlag = true  тогда функция возврящает максимальное значение уровня для давления меньшего дав. нас
' расчитываем зависимость динамического уровня от давления на приеме насоса
 Dim p1 As Double:
 Dim p2 As Double:
 Dim l As Double
 Dim p As Double
 
 p2 = 0
 p1 = PinD
 ' счетчик операций
 'Dim i As Integer
 'i = 1
 ' search sollution
 Do
  'i = i + 1
  p = (p2 + p1) / 2
  
  Select Case tr_HydCor
   Case 2, 3, 4
    l = Lgd_Pind_Ro(PinD, p, vsgb_0, bo_m3m3, PscD, tr_HydCor, QgMeasured)
  End Select
  If (Abs(l - Lind) < 0.0001) Or Abs(p1 - p2) < 0.0000001 Then Exit Do ' определиться с точностью !!!
  If l < Lind Then p1 = p Else p2 = p      ' можно в итоге применить и линейную интерполяцию !!!
 Loop
 
 Pfd_Ld = p
 
 If Abs(p1 - p2) < 0.0000001 Then
     Pfd_Ld = 0
 End If
End Function
' вычисление забойного давления по динамическому уровню
Private Function Pd_Ld2(LD As Double, _
                       PfD As Double, _
                       vsgb_0 As Double, _
                       bo_m3m3 As Double, _
                       PscD As Double, _
                       Optional tr_HydCor As Integer = 2, _
                       Optional QgMeasured As Boolean = False, _
                       Optional solFlag As Boolean = False)
                       
' Входные параметры
' LD длина столба жидкости над насосом
' PfD - безразмерное давление на границе газ/жидкость - затрубное давление
' vsgb_0 -  приведеная скорость затр. газа для всего газа, отнесенная к давлению насыщения
' bo_m3m3   - объемный коэффициент нефти
' PscD  - безразмерное давление при стандартных условиях
' tr_HydCor - корреляция для расчета 1. Хасан Кабир
'                                      2. Хасан Кабир - с учетом изменения плотности
'               по умолчанию 2
' QgMeasured  - флаг расчета по замеренному дебиту заьрубного газа
' solFlag = true  тогда функция возврящает максимальное значение уровня для давления меньшего дав. нас
Const length = 20
Dim LD_i As Double
Dim i As Integer
Dim LD_ar(length) As Double
Dim PinD_ar(length) As Double
Dim Found As Boolean
Dim MaxVal As Double
MaxVal = 0
' расчитываем зависимость динамического уровня от давления на приеме насоса
For i = 0 To length - 1
 PinD_ar(i) = PfD + i / (length - 1) * (1 - PfD)
 ' интервал изменений от затрубного до единицы
 Select Case tr_HydCor
   Case 2, 3, 4
    LD_ar(i) = Lgd_Pind_Ro(PinD_ar(i), PfD, vsgb_0, bo_m3m3, PscD, tr_HydCor, QgMeasured)
 End Select
 
 If solFlag Then
 'ищем максимальное значение уровня до давления насыщения
   If MaxVal < LD_ar(i) Then
    MaxVal = LD_ar(i)
   End If
 End If
Next i
' расчет зависимости закончен
 If solFlag Then
  Pd_Ld2 = MaxVal
  Exit Function
 End If
 
 
Found = False
' запускаем поиск решения
If (LD >= LD_ar(length - 1)) Then
' значит решение лежит на ветви выше давления насыщения
' обеспечивает выбор максимального давления при неоднозначности
Select Case tr_HydCor
   Case 1
      Pd_Ld2 = LD + PfD
  Case 2, 3, 4
 ' запишем выражение для давления с поправкой на изменение плотности
      Pd_Ld2 = 1 + LD / bo_m3m3 - (1 - PscD) / (bo_m3m3 - 1) * _
                 Log((bo_m3m3 - PscD - PfD * (bo_m3m3 - 1)) / (1 - PscD))
 End Select
 Exit Function
End If
For i = 0 To length - 1
  If (LD >= LD_ar(i)) And (LD < LD_ar(i + 1)) Then
    Pd_Ld2 = (LD - LD_ar(i)) / (LD_ar(i + 1) - LD_ar(i)) * (PinD_ar(i + 1) - PinD_ar(i)) + PinD_ar(i)
    Found = True
    ' значение найдено - выходим из функции
    Exit Function
  End If
Next i
If Not Found Then
Select Case tr_HydCor
  Case 1
      Pd_Ld2 = LD + PfD
  Case 2, 3, 4
 ' запишем выражение для давления с поправкой на изменение плотности
      Pd_Ld2 = 1 + LD / bo_m3m3 - (1 - PscD) / (bo_m3m3 - 1) * _
                 Log((bo_m3m3 - PscD - PfD * (bo_m3m3 - 1)) / (1 - PscD))
 End Select
End If
End Function
' вычисление длины столба жидкости от забоя до насоса по забойному давлению и давлению на приеме насоса
' Входные данные
' p_wfD  безразмерное значение забойного давления (к давлению насыщения)
' PinD   безразмерная высота подвеса насоса от забоя
' vsgw   приведеная скорость газа
Private Function Lwd_p_wfd_ro(p_wfD As Double, PinD As Double, vsgw As Double, _
                            vsl As Double, bo_m3m3 As Double, PscD As Double, _
                            fw_perc As Double, gamma_gas As Double, Optional tr_HydCor As Integer = 2)
 ' переменные для корреляции Хасана Кабира со сглаживанием
 Dim C0_bl As Double, vd_bl As Double, v0_bl As Double, vgD_bl As Double
 Dim C0_sl As Double, vd_sl As Double, v0_sl As Double, vgD_sl As Double
 Dim C0_tr As Double, vd_tr As Double, v0_tr As Double, vgD_tr As Double
 ' массив для вывода результатов расчетов
 ' 7 количество сохраняемых результатов
 Dim resarray(1 To 8) As Double
 '   1 - значение уровня
 '   2 - значение количество режимов
 '   3 - присутсвие  режима 1 (пузырькового)
 '   4 - присутсвие режима 2 (переходного)
 '   5 - присутсвие режима 3 (снарядного)
 '   6 - присутвие режима 4 (эмульсионного churn)
 '   7 - давление перехода к slug режиму
 '   8 - давление перехода к churn режиму
 Dim fg_tr As Double
 Dim fg_tr1 As Double
 Dim fg_tr2 As Double
 
 ' проверка если задан нулевой дебит нефти
 If vsgw = 0 Then   ' одна вода - нет газа
    resarray(1) = (p_wfD - PinD) / (1 / bo_m3m3 * (1 - fw_perc) + 1 / gamma_gas * fw_perc)
    Lwd_p_wfd_ro = resarray(1)
    Exit Function
End If
 fg_tr = 0.25
 fg_tr1 = fg_tr * 0.8
 fg_tr2 = fg_tr * 1.2
 
 'Значение для пузырькового режима
 C0_bl = 1.2
 vd_bl = 0.2
 v0_bl = 0.001   ' начало пузырькового режима нас не интересует
 vgD_bl = vsgw / (vd_bl + C0_bl * vsl)
 
 'Для снарядного режима
 C0_sl = 1.2
 vd_sl = 0.44
 v0_sl = fg_tr2 * (C0_sl * vsl + vd_sl) / (1 - C0_sl * fg_tr2)
 vgD_sl = vsgw / (vd_sl + C0_sl * vsl)
 ' значения для переходного режима сглаживания
 ' скорость начала переходного режима
 v0_tr = fg_tr1 * (C0_bl * vsl + vd_bl) / (1 - C0_bl * fg_tr1)
 C0_tr = (C0_bl * (v0_sl - v0_tr) + (vd_sl - vd_bl)) / (v0_sl - v0_tr)
 vd_tr = ((vd_bl * v0_sl - vd_sl * v0_tr) - (vd_sl - vd_bl) * vsl) / (v0_sl - v0_tr)
 vgD_tr = vsgw / (vd_tr + C0_tr * vsl)
  
 ' безразмерное давление перехода к снарядному режиму
 Dim PslD As Double
 ' безразмерное давление перехода к снарядному режиму
 Dim PtrD As Double
 ' вычисляем давления перехода к различным режимам - учитывая газ
 PslD = vsgw / (v0_sl + vsgw)
 PtrD = vsgw / (v0_tr + vsgw)
 ' сохраняем давление начала переходного режима в трубе
 resarray(7) = PslD
 resarray(8) = PtrD
 If PslD > PtrD Then
  ' неправильные параметры корреляции
  Lwd_p_wfd_ro = -1
  Exit Function
 End If
 ' массивы с параметрами режимов и интервалами давлений
 Const NumRegimes = 3
 Dim Arr_C0(1 To NumRegimes) As Double
 Dim Arr_vgD(1 To NumRegimes) As Double
 Dim Arr_PD(1 To NumRegimes + 1) As Double
 
 Arr_C0(1) = C0_sl:     Arr_vgD(1) = vgD_sl
 Arr_C0(2) = C0_tr:     Arr_vgD(2) = vgD_tr
 Arr_C0(3) = C0_bl:     Arr_vgD(3) = vgD_bl
 
 
 Arr_PD(1) = 0:         Arr_PD(2) = PslD:       Arr_PD(3) = PtrD:       Arr_PD(4) = 1
 ' временная переменная
Dim lgD As Double, p1 As Double, p2 As Double
lgD = 0
resarray(2) = 0  ' количество режимов
 
 ' вычисляем высоту столба по присутствию режимов
 
Dim i As Integer
For i = 1 To NumRegimes
   p1 = MaxReal(PinD, Arr_PD(i))
   p2 = MinReal(p_wfD, Arr_PD(i + 1))
   If (p1 < p2) Then
    lgD = lgD + Log_Ro_P_calc_down(Arr_vgD(i), Arr_C0(i), bo_m3m3, p2, p1, PscD, fw_perc, gamma_gas)
    resarray(2) = resarray(2) + 1       ' количество режимов
    resarray(2 + i) = 1                 ' в элемент соответствующий данному режиму запишем флаг-признак его присутствия
   End If
Next i
 
If p_wfD <= 1 Then
 ' Забойное далвление которое мы смотрим меньше давления насыщения
  resarray(1) = lgD
 Else
 ' Забойное давление больше давления насыщения
  If PinD < 1 Then
   resarray(1) = lgD + (p_wfD - 1) / (1 / bo_m3m3 * (1 - fw_perc) + 1 / gamma_gas * fw_perc)
  Else
   resarray(1) = (p_wfD - PinD) / (1 / bo_m3m3 * (1 - fw_perc) + 1 / gamma_gas * fw_perc)
  End If
 
 End If
 Lwd_p_wfd_ro = resarray(1)
End Function
'***************************************************************************
'***************************************************************************
'   для измененной плотности
'
'***************************************************************************
'***************************************************************************
Private Function Lgd_Pind_Ro(PinD As Double, PfD As Double, vsgb_0 _
    As Double, bo_m3m3 As Double, PscD As Double, Optional tr_HydCor As Integer = 2, _
    Optional QgMeasured As Boolean = False, Optional type_ As Integer = 1)
    
' Если давление на приеме насоса больше давления насыщения газ в затруб не поступает
If PinD >= 1 Then
 If (PfD < 1) And (bo_m3m3 > 1) Then
     Lgd_Pind_Ro = (bo_m3m3 * (PinD - 1) + bo_m3m3 * (1 - PscD) / (bo_m3m3 - 1) * _
                Log((bo_m3m3 - PscD - PfD * (bo_m3m3 - 1)) / (1 - PscD)))
 Else
     Lgd_Pind_Ro = bo_m3m3 * (PinD - PfD)
 End If
Exit Function
End If
 ' переменные для корреляции Хасана Кабира со сглаживанием
 Dim C0_bl As Double, vd_bl As Double, v0_bl As Double, vgD_bl As Double
 Dim C0_sl As Double, vd_sl As Double, v0_sl As Double, vgD_sl As Double
 Dim C0_tr As Double, vd_tr As Double, v0_tr As Double, vgD_tr As Double
 ' массив для вывода результатов расчетов
 ' 7 количество сохраняемых результатов
 Dim resarray(1 To 8) As Double
 '   1 - значение уровня
 '   2 - значение количество режимов
 '   3 - присутсвие  режима 1 (пузырькового)
 '   4 - присутсвие режима 2 (переходного)
 '   5 - присутсвие режима 3 (снарядного)
 '   6 - присутвие режима 4 (эмульсионного churn)
 '   7 - давление перехода к slug режиму
 '   8 - давление перехода к churn режиму
 Dim PslD As Double
     ' безразмерное давление перехода к снарядному режиму
 Dim PtrD As Double
    ' безразмерное давление перехода к снарядному режиму
 Dim Arr_C0(1 To 5) As Double
 Dim Arr_vgD(1 To 5) As Double
 Dim Arr_PD(1 To 5 + 1) As Double
 
 Dim NumRegimes As Double
 
 Dim CO_kas_kab As Double
 If tr_HydCor = 4 Then
  CO_kas_kab = 2
 Else
  CO_kas_kab = 1.2
 End If
Select Case tr_HydCor
 Case 2, 4 '*******************************************************************************
    'Значение для пузырькового режима
    C0_bl = CO_kas_kab
    vd_bl = 0.2
    v0_bl = 0.001   ' начало пузырьковоо режима нас не интересует
    vgD_bl = vsgb_0 / vd_bl
    If Not QgMeasured Then
        vgD_bl = vgD_bl * (1 - PinD)
    End If
 
    'Для снарядного режима
    C0_sl = CO_kas_kab
    vd_sl = 0.44
    v0_sl = 0.188
    vgD_sl = vsgb_0 / vd_sl
    If Not QgMeasured Then
        vgD_sl = vgD_sl * (1 - PinD)
    End If
    
    ' значения для переходного режима сглаживания
    ' скорость начала переходного режима
    v0_tr = 0.057
    C0_tr = C0_bl + (vd_sl - vd_bl) / (v0_sl - v0_tr)
    vd_tr = (vd_bl * v0_sl - vd_sl * v0_tr) / (v0_sl - v0_tr)
    vgD_tr = vsgb_0 / vd_tr
    If Not QgMeasured Then
        vgD_tr = vgD_tr * (1 - PinD)
    End If
     ' выичсляем давления перехода к различным режимам - учитывая газ попадающий в затруб
    PslD = vsgb_0 / v0_sl
    PtrD = vsgb_0 / v0_tr
    If Not QgMeasured Then
        PslD = PslD * (1 - PinD)
        PtrD = PtrD * (1 - PinD)
    End If
    ' сохраняем давление начала переходного режима в трубе
    resarray(7) = PslD
    resarray(8) = PtrD
    If PslD > PtrD Then
    ' неправильные параметры корреляции
        Lgd_Pind_Ro = -1
        Exit Function
    End If
    ' массивы с параметрами режимов и интервалами давлений
    NumRegimes = 3
    
 
    Arr_C0(1) = C0_sl:     Arr_vgD(1) = vgD_sl
    Arr_C0(2) = C0_tr:     Arr_vgD(2) = vgD_tr
    Arr_C0(3) = C0_bl:     Arr_vgD(3) = vgD_bl
 
    Arr_PD(1) = 0:  Arr_PD(2) = PslD:  Arr_PD(3) = PtrD:  Arr_PD(4) = 100000
Case 3   '*******************************************************************************
    C0_bl = 1.8
    vd_bl = 0.28
    v0_bl = 0.001   ' начало пузырьковоо режима нас не интересует
    vgD_bl = vsgb_0 / vd_bl
    If Not QgMeasured Then
        vgD_bl = vgD_bl * (1 - PinD)
    End If
 
    'Для снарядного режима
    C0_sl = 1.06
    vd_sl = 0.58
    v0_sl = 0.4
    vgD_sl = vsgb_0 / vd_sl
    If Not QgMeasured Then
        vgD_sl = vgD_sl * (1 - PinD)
    End If
     ' выичсляем давления перехода к различным режимам - учитывая газ попадающий в затруб
    
    PslD = vsgb_0 / v0_sl
    If Not QgMeasured Then
        PslD = PslD * (1 - PinD)
    End If
    ' сохраняем давление начала переходного режима в трубе
    resarray(7) = PslD
    ' массивы с параметрами режимов и интервалами давлений
    NumRegimes = 2
     
    Arr_C0(1) = C0_sl:     Arr_vgD(1) = vgD_sl
    Arr_C0(2) = C0_bl:     Arr_vgD(2) = vgD_bl
    
 
    Arr_PD(1) = 0:  Arr_PD(2) = PslD: Arr_PD(3) = 100000
    
End Select  '*******************************************************************************
' временная переменная
Dim lgD As Double, p1 As Double, p2 As Double
lgD = 0
resarray(2) = 0  ' количество режимов
 
 ' вычисляем высоту столба по присутствию режимов
 Dim i As Integer
 For i = 1 To NumRegimes
   p1 = MaxReal(PfD, Arr_PD(i))
   p2 = MinReal(PinD, Arr_PD(i + 1))
   If (p1 < p2) Then
    lgD = lgD + Log_Ro_P_calc(Arr_vgD(i), Arr_C0(i), bo_m3m3, p1, p2, PscD)
    resarray(2) = resarray(2) + 1       ' количество режимов
    resarray(2 + i) = 1                 ' в элемент соответствующий данному режиму запишем флаг-признак его присутствия
   End If
 Next i
 
 resarray(1) = lgD
 Lgd_Pind_Ro = resarray(type_)
End Function
'**************************************************************************************
'Расчет решений для одного режима течения газа
'
'**************************************************************************************
Private Function Log_Ro_P_calc(vgD As Double, C0 As Double, bo_m3m3 As Double, P1D As Double, P2D As Double, _
                               PscD As Double) As Double
Dim a As Double, B As Double, c As Double, d As Double, e As Double, f As Double
a = bo_m3m3 - PscD
B = (1 - bo_m3m3)
c = (C0 - 1) * vgD
d = 1
e = C0 * vgD
f = 1
Dim res As Double
If bo_m3m3 > 1 Then
    res = (-Log(a + B * P2D) * f * a * d + Log(a + B * P2D) * e * B * d - _
        Log(c + d * P2D) * e * B * d + Log(c + d * P2D) * c * f * B + _
        Log(a + B * P1D) * f * a * d - Log(a + B * P1D) * e * B * d + _
        Log(c + d * P1D) * e * B * d - Log(c + d * P1D) * c * f * B) _
        / (-d * a + B * c) / B / d
    Log_Ro_P_calc = res * bo_m3m3 * (1 - PscD)
Else
    res = ((P2D - P1D) * f * d + Log((c + d * P2D) / (c + d * P1D)) _
              * (e * d - c * f)) / d / d
    Log_Ro_P_calc = res
End If
End Function
Private Function Log_Ro_P_calc_down(vgD As Double, C0 As Double, bo_m3m3 As Double, P1D As Double, P2D As Double, _
                               PscD As Double, fw_perc As Double, gamma_gas As Double) As Double
Dim a As Double, B As Double, c As Double, d As Double, e As Double, f As Double
a = (bo_m3m3 - 1) * (1 - fw_perc) + (1 - PscD) * (1 - fw_perc + bo_m3m3 / gamma_gas * fw_perc)
B = (1 - bo_m3m3) * (1 - fw_perc)
c = (C0 - 1) * vgD
d = 1 - c
e = C0 * vgD
f = 1 - e
Dim res As Double
If bo_m3m3 > 1 Then
    res = (-Log(a + B * P2D) * f * a * d + Log(a + B * P2D) * e * B * d - _
        Log(c + d * P2D) * e * B * d + Log(c + d * P2D) * c * f * B + _
        Log(a + B * P1D) * f * a * d - Log(a + B * P1D) * e * B * d + _
        Log(c + d * P1D) * e * B * d - Log(c + d * P1D) * c * f * B) _
        / (-d * a + B * c) / B / d
    Log_Ro_P_calc_down = -res * bo_m3m3 * (1 - PscD)
Else
''  If bo_m3m3 > 1 Then
  
    res = ((P2D - P1D) * f * d + Log((c + d * P2D) / (c + d * P1D)) _
              * (e * d - c * f)) / d / d
    Log_Ro_P_calc_down = -res * ((1 - fw_perc) + 1 / gamma_gas * fw_perc)
End If
End Function
' расчет выше насоса
Private Function Log_calc(vgD As Double, C0 As Double, P1D As Double, P2D As Double)
   Log_calc = vgD * Log(((C0 - 1) * vgD + P1D) / ((C0 - 1) * vgD + P2D))
End Function
' расчет ниже насоса
Private Function Log_calc_down(vgD As Double, C0 As Double, bo_m3m3_mult As Double, P1D As Double, _
                                P2D As Double, fw_perc As Double, gamma_gas As Double)
 Dim c0vgd As Double
 c0vgd = (C0 - 1) * vgD
 Log_calc_down = bo_m3m3_mult / (1 - c0vgd) * ((1 - C0 * vgD) * (P1D - P2D) + _
          vgD / (1 - c0vgd) * Log((c0vgd + P1D * (1 - c0vgd)) / (c0vgd + P2D * (1 - c0vgd))))
End Function
'=======================================================================================
'Unifloc 7.51  2025.03                                  khabibullinra@gmail.com
'Petroleum engineering calculations modules (macroses)
'2000 - 2025
'
'=======================================================================================
' функции для расчета параметров технологического режима добывающих скважин
' унаследованные функции из тех режима для обеспечения совместимости и совместных расчетов
' названия изменены (префикс) для обеспечения совместимости надстройки со старыми файлами
'==========================================================
'======================== mdlSkinCalc =====================
'==========================================================
Public Function old_getJd(hp, k, spgrpr, por, KF, Re, Optional Mp = 5) As Double
    Const mD = 9.869233E-16
    Dim Rw As Double, hf As Double, M As Double
    Dim rp, vf, VR, Nprop
    Dim Jdopt, Cfdopt, Ixopt
    
    por = por / 100
    KF = KF * mD * 1000
    k = k * mD
    Rw = 0.1
    hf = hp * 1.5
    M = Mp * hp * 1000 / 2
    
    Call DLrp1(hp, hf, rp)
    
    vf = rp * M / ((1 - por) * (1000 * spgrpr))
    VR = hp * Re ^ 2 * const_Pi
    Nprop = (4 * vf * KF) / (k * VR)
    
    Call FracOpt(Nprop, Jdopt, Cfdopt, Ixopt)
    old_getJd = Jdopt
End Function
Public Function old_getS(Jdopt, Re) As Double
    Const Rw = 0.1
    Dim SF
    SF = 1 / Jdopt - Log(Re / Rw) + 3 / 4
    old_getS = SF
End Function
Private Sub DLrp1(hp, hf, rp)
    If hp <= hf Then
        rp = hp / hf
    Else
        rp = 1
    End If
End Sub
'***********************************************************
'*                                Jd                       *
'***********************************************************
Private Function Jd(Nprop As Double, Cfd As Double) As Double
Select Case Nprop
  Case Is <= 0.1
    Jd = JD1(Nprop, Cfd)
  Case Is <= 1#
    Jd = JD2(Nprop, Cfd)
  Case Is <= 10#
    Jd = Jd3(Nprop, Cfd)
  Case Else
    Jd = Jd4(Nprop, Cfd)
End Select
End Function
Private Sub FracPI(Npropin, Cfdin, Ixin, Jdout)
'Calculate the variable that is missing from the other two
Dim Nprop As Double, Cfd As Double, IX As Double
If (Npropin * Cfdin * Ixin <> 0) Then End
If Npropin = 0 Then
 Cfd = Cfdin
 IX = Ixin
 Nprop = Cfd * IX ^ 2
End If
If Cfdin = 0 Then
 Nprop = Npropin
 IX = Ixin
 Cfd = Nprop / IX ^ 2
End If
If IX = 0 Then
 Nprop = Npropin
 Cfd = Cfdin
 IX = Sqr(Nprop / Cfd)
End If
 Jdout = Jd(Nprop, Cfd)
End Sub
Private Sub FracOpt(Npropin, Jdoptout, Cfdoptout, Ixoptout)
Dim Nprop As Double, Jdopt As Double, Cfdopt As Double, Ixopt As Double
Dim xl As Double, xu As Double, R As Double
Dim X1 As Double, X2 As Double, f1 As Double, f2 As Double, d As Double
Nprop = Npropin
'Golden Section
 xu = Nprop / 0.00000001
 xl = Nprop
 R = (Sqr(5) - 1) / 2
 'finding the optimum
 d = R * (xu - xl)
 X1 = xl + d
 X2 = xu - d
 f1 = Jd(Nprop, X1)
 f2 = Jd(Nprop, X2)
 Do
    d = R * d
    If f1 > f2 Then
            xl = X2
            X2 = X1
            f2 = f1
            X1 = xl + d
            f1 = Jd(Nprop, X1)
    Else
            xu = X1
            X1 = X2
            f1 = f2
            X2 = xu - d
            f2 = Jd(Nprop, X2)
    End If
    If Abs(xu - xl) < 0.00001 Then Exit Do
 Loop
 Cfdopt = (xl + xu) / 2
 Ixopt = Sqr(Nprop / Cfdopt)
 Jdopt = Jd(Nprop, Cfdopt)
'
 Cfdoptout = Cfdopt
 Ixoptout = Ixopt
 Jdoptout = Jdopt
End Sub
'***********************************************************
'*                    Jd for Nprop < 0.1                      *
'***********************************************************
Private Function JD1(Nprop As Double, Cfd As Double) As Double
 JD1 = 1 / (-0.629 + 0.5 * Log(Cfd / Nprop) + fCL(Cfd))
End Function
'***********************************************************
'*             Jd for Nprop between 0.1 and 1              *
'***********************************************************
Private Function JD2(Nprop As Double, Cfd As Double) As Double
Dim IX As Double, delta1 As Double
 IX = Sqr(Nprop / Cfd)
 delta1 = Jd_Ix1(Nprop) - JD1(Nprop, Nprop)
 JD2 = JD1(Nprop, Cfd) + delta1 * G1(IX)
End Function
'***********************************************************
'*             Jd for Nprop between 1 and 10               *
'***********************************************************
Private Function Jd3(Nprop As Double, Cfd As Double) As Double
Dim IX As Double, Delta2 As Double
 IX = Sqr(Nprop / Cfd)
 Delta2 = Jd_Ix1(Nprop) - JD2(1#, Nprop)
 Jd3 = JD2(1, Cfd) + Delta2 * g10(IX)
End Function
'***********************************************************
'*             Jd for Nprop above 10                       *
'***********************************************************
Private Function Jd4(Nprop As Double, Cfd As Double) As Double
Dim IX As Double, Delta3 As Double, Cfd10 As Double
 IX = Sqr(Nprop / Cfd)
 Cfd10 = 10 / IX ^ 2
 Delta3 = Jd_Ix1(Nprop) - Jd_Ix1(10#)
 Jd4 = Jd3(10#, Cfd10) + Delta3 * hinf(IX)
End Function
'***********************************************************
'*               Cinco-Ley's Function fCL(CfD)               *
'***********************************************************
Private Function fCL(Cfd As Double) As Double  'Cinco-Ley Function
Dim num As Double, DENOM As Double
 num = 1.65 - 0.328 * Log(Cfd) + 0.116 * (Log(Cfd)) ^ 2
 DENOM = 1 + 0.18 * Log(Cfd) + 0.064 * (Log(Cfd)) ^ 2 + 0.005 * (Log(Cfd)) ^ 3
 fCL = num / DENOM
End Function
'***********************************************************
'*               Jd calculated at Ix = 1                   *
'***********************************************************
Private Function Jd_Ix1(Nprop As Double) As Double
 If (Nprop < 241) Then
  Jd_Ix1 = 1.13576 - 0.0529836 * Log(Nprop) - 0.912619 * (Atn(0.37403 - 0.494469 * Log(Nprop)))
 Else
  Jd_Ix1 = 1.909859
  End If
End Function
'***********************************************************
'*                        g1 function                      *
'***********************************************************
Private Function G1(IX As Double) As Double
 G1 = 3.357 * IX ^ 5 - 10.686 * IX ^ 4 + 10.041 * IX ^ 3 - 2.1452 * IX ^ 2 + 0.449 * IX - 0.01452
End Function
'***********************************************************
'*                        g10 function                     *
'***********************************************************
Private Function g10(IX As Double) As Double
 g10 = 2.5016 * IX ^ 5 - 7.8231 * IX ^ 4 + 6.7988 * IX ^ 3 - 1.7905 * IX ^ 2 + 1.272 * IX + 0.0346 + 1.44845779338554E-03
End Function
'***********************************************************
'*                      hinf function                      *
'***********************************************************
Private Function hinf(IX As Double) As Double
 hinf = IX ^ 2
End Function
'==========================================================

