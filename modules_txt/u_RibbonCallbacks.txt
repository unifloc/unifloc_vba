'=======================================================================================
'Unifloc 7.50 year 2024                                  khabibullinra@gmail.com
'Petroleum engineering calculations modules (macroses)
'2000 - 2023
'
'=======================================================================================
' Functions for the Excel ribbon buttons
Option Base 0
Option Explicit
' цвета для выделения ячеек при вставке сниппетов
Const clrGrayText = 14474460   ' серые ячейки - описания переменных
Const clrUserInput = vbYellow  ' желтые - ячейки для ввода данных пользователем
Const clrCalculated = 16448160 ' синеватые - ячейки для вывода результатов расчета
Const clrIntermediateCalc = 10549980 ' зеленоватые - ячейки для вывода промежуточных результатов расчета
' глобальная переменная - флаг необходимости вывода запроса о замещении ячеек
Public promt As Boolean
Public comment As Boolean
Public Function CheckBox_comment_Pressed(control As IRibbonControl, ByRef pressed)
    pressed = comment
End Function
Public Sub CheckBox_comment_OnAction(ByRef control As IRibbonControl, _
                                     ByRef pressed As Boolean)
    comment = pressed
End Sub
Public Function CheckBox_Pressed(control As IRibbonControl, ByRef pressed)
    pressed = promt
End Function
Public Sub CheckBox_OnAction(ByRef control As IRibbonControl, _
                             ByRef pressed As Boolean)
    promt = pressed
End Sub
Sub btn_ribbon_json_encode(control As IRibbonControl)
    Call UserForm_encode_json.Show(False)
End Sub
Sub btn_ribbon_json_decode(control As IRibbonControl)
    Call UserForm_decode_json.Show(False)
End Sub
Sub btn_ribbon_version(control As IRibbonControl)
    Call InfoForm.Show
End Sub
Sub btn_ribbon_links(control As IRibbonControl)
    Dim num As Integer
    
    add_log_msg "Сработала функция onAction элемента " + control.ID
    num = correct_links
    add_log_msg "Выполнено замен " & CStr(num)
End Sub
Sub btn_ribbon_pvt(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 8, 0 To 1)
    If promt_to_write(10, 2, "encode PVT") Then
       arr(0, 0) = "gamma_gas":    arr(0, 1) = 0.6
       arr(1, 0) = "gamma_oil":    arr(1, 1) = 0.86
       arr(2, 0) = "gamma_wat":    arr(2, 1) = 1.1
       arr(3, 0) = "rsb_m3m3":     arr(3, 1) = 120
       arr(4, 0) = "pb_atma":      arr(4, 1) = 130
       arr(5, 0) = "t_res_C":      arr(5, 1) = 80
       arr(6, 0) = "bob_m3m3":     arr(6, 1) = 1.2
       arr(7, 0) = "muob_cP":      arr(7, 1) = 0.6
       arr(8, 0) = "pvt_corr_set": arr(8, 1) = 0
       
       With ActiveCell
            .range("A1:B9") = arr
            .range("A1:A10").Interior.Color = clrGrayText
            .range("B1:B10").Interior.Color = clrUserInput
            .range("A10").FormulaR1C1 = "PVT"
            .range("B10").FormulaR1C1 = "=encode_PVT(R[-9]C,R[-8]C,R[-7]C,R[-6]C,R[-5]C,R[-4]C,R[-3]C,R[-2]C,R[-1]C)"
            .range("B10").name = get_name("PVT_json")
            .range("B10").Interior.Color = clrCalculated
            
            If comment Then
                 .range("B1").AddComment ("Удельная плотность газа по воздуху")
                 .range("B2").AddComment ("Удельная плотность нефти по воде")
                 .range("B3").AddComment ("Удельная плотность воды (по воде)")
                 .range("B4").AddComment ("Газосодержание при давлении насыщения, м3/м3")
                 .range("B5").AddComment ("Давление насыщения при заданной температуре, атма")
                 .range("B6").AddComment ("Температура пласта, при которой определено давление насыщения, С")
                 .range("B7").AddComment ("Объемный коэффициент нефти при давлении насыщения и пластовой температуре, м3/м3")
                 .range("B8").AddComment ("Вязкость нефти при давлении насыщения и пластовой температуре, сП")
                 .range("B9").AddComment ("Набор PVT корреляций. 0 - на основе корреляции Стендинга для газосодержания, 1 - на основе корреляции Веларда Маккейна для газосодержания")
            End If
            
            .range("B10").Select
       End With
    End If
End Sub
Sub btn_ribbon_feed(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 3, 0 To 1)
    Dim s As String
    
    arr(0, 0) = "q_liq_sm3day":      arr(0, 1) = 30
    arr(1, 0) = "fw_perc":           arr(1, 1) = 10
    arr(2, 0) = "rp_m3m3":           arr(2, 1) = 120
    arr(3, 0) = "q_gas_free_sm3day": arr(3, 1) = 0
      
    s = ActiveCell.Formula
    If Len(s) > 12 And Mid(s, 1, 12) = "=encode_PVT(" Then
        ActiveCell.offset(1, -1).range("A1").Select
        If promt_to_write(5, 2, "encode feed") Then
            ActiveCell.range("A1:B4") = arr
            If comment Then
                With ActiveCell
                    .range("B1").AddComment ("Дебит жидкости в стандартных условиях")
                    .range("B2").AddComment ("Обводненность, %")
                    .range("B3").AddComment ("Газовый фактор, м3/м3")
                    .range("B4").AddComment ("Дебит свободного газа в потоке ст.м3/сут. Свободный газ в потоке дополняет газ выделившийся из нефти.")
                End With
            End If
            ActiveCell.range("A1:B5").Interior.Color = clrUserInput
            ActiveCell.range("A1:A5").Interior.Color = clrGrayText
            ActiveCell.range("A5").Select
            ActiveCell.FormulaR1C1 = "feed"
            ActiveCell.range("B1").Select
            ActiveCell.FormulaR1C1 = "=encode_feed(R[-4]C,R[-3]C,R[-2]C,R[-1]C,R[-5]C)"
        Else
            Exit Sub
        End If
    Else
        If promt_to_write(6, 2, "encode feed") Then
            ActiveCell.range("A1:B4") = arr
            If comment Then
                With ActiveCell
                    .range("B1").AddComment ("Дебит жидкости в стандартных условиях")
                    .range("B2").AddComment ("Обводненность, %")
                    .range("B3").AddComment ("Газовый фактор, м3/м3")
                    .range("B4").AddComment ("Дебит свободного газа в потоке ст.м3/сут. Свободный газ в потоке дополняет газ выделившийся из нефти.")
                End With
            End If
            ActiveCell.range("A1:B6").Interior.Color = clrUserInput
            ActiveCell.range("A1:A6").Interior.Color = clrGrayText
            ActiveCell.range("A5").Select
            ActiveCell.FormulaR1C1 = "fluid"
            ActiveCell.range("B1").FormulaR1C1 = "=encode_pvt()"
            ActiveCell.range("B1").Interior.Color = clrIntermediateCalc
            ActiveCell.range("A2").Select
            ActiveCell.FormulaR1C1 = "feed"
            ActiveCell.range("B1").Select
            ActiveCell.FormulaR1C1 = "=encode_feed(R[-5]C,R[-4]C,R[-3]C,R[-2]C,R[-1]C)"
        Else
            Exit Sub
        End If
    End If
    ActiveCell.name = get_name("feed_json")
    ActiveCell.Interior.Color = clrCalculated
End Sub
Sub btn_ribbon_choke(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 4, 0 To 1)
    
    If Not promt_to_write(5, 2, "encode choke") Then Exit Sub
    arr(0, 0) = "d_choke_mm": arr(0, 1) = 10
    arr(1, 0) = "d_pipe_mm":  arr(1, 1) = 70
    arr(2, 0) = "calibr":     arr(2, 1) = 1
    arr(3, 0) = "CDischarge": arr(3, 1) = 0.82
    arr(4, 0) = "choke json": arr(4, 1) = "=encode_choke(R[-4]C, R[-3]C, R[-2]C, R[-1]C)"
    
    
    ActiveCell.range("A1:B5") = arr
    If comment Then
        With ActiveCell
            .range("B1").AddComment ("Диаметр штуцера, мм")
            .range("B2").AddComment ("Диаметр трубы, где установлен штуцер, мм")
            .range("B3").AddComment ("Калибровочный коэффициент для штуцера, множитель на скорость флюида через штуцер.")
            .range("B4").AddComment ("Настроечный коэффициент штуцера, множитель на скорость флюида через штуцер. Задается по данным экспериментов.")
        End With
    End If
    ActiveCell.range("B5").name = get_name("choke_json")
    ActiveCell.range("A1:A5").Interior.Color = clrGrayText
    ActiveCell.range("B1:B4").Interior.Color = clrUserInput
    ActiveCell.range("B5").Interior.Color = clrCalculated
    ActiveCell.range("B5").Select
End Sub
Sub btn_ribbon_choke_p(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 11, 0 To 1)
    
    If Not promt_to_write(13, 12, "calc MF_choke_p_atma") Then Exit Sub
    
    arr(0, 0) = "choke_json":         arr(0, 1) = "=encode_choke()"
    arr(1, 0) = "feed_json":          arr(1, 1) = "=encode_feed()"
    arr(2, 0) = "p_calc_from_atma":   arr(2, 1) = 10
    arr(3, 0) = "t_choke_C":          arr(3, 1) = 30
    arr(4, 0) = "calc_along_flow":    arr(4, 1) = 0
    arr(5, 0) = "show_array":         arr(5, 1) = 1
    arr(6, 0) = "param":              arr(6, 1) = "=encode_json(R[-1]C[-1]:R[-1]C)"
    arr(7, 0) = "q_liq_sm3day":       arr(7, 1) = ""
    arr(8, 0) = "fw_perc":            arr(8, 1) = ""
    arr(9, 0) = "rp_m3m3":            arr(9, 1) = ""
    arr(10, 0) = "q_gas_free_sm3day": arr(10, 1) = ""
    arr(11, 0) = "result":            arr(11, 1) = "=MF_choke_p_atma(R[-11]C,R[-10]C,R[-9]C,R[-8]C,R[-7]C,R[-5]C,R[-4]C,R[-3]C,R[-2]C,R[-1]C)"
    
    ActiveCell.range("A1:B12") = arr
    If comment Then
        With ActiveCell
            .range("B1").AddComment ("json с параметрами штуцера. используйте encode_choke() для генерации")
            .range("B2").AddComment ("json с параметрами потока. используйте encode_feed() для генерации")
            .range("B3").AddComment ("Давление для расчета перепада давления в штуцере, атма")
            .range("B4").AddComment ("Температура потока в штуцера, С")
            .range("B5").AddComment ("Флаг направления расчета. 0 - расчет против потока, 1 - расчет по потоку.")
            .range("B6").AddComment ("Флаг отображения результатов. 0 - результат число, 1 - расширенный вывод результатов в виде массива")
            .range("B7").AddComment ("json с параметрами расчета")
            .range("B8").AddComment ("Дебит жидкости ст.м3/сут. Переопределяет данные заданные в feed_json")
            .range("B9").AddComment ("Обводненность, %. Переопределяет данные заданные в feed_json")
            .range("B10").AddComment ("Газовый фактор, м3/м3. Переопределяет данные заданные в feed_json")
            .range("B11").AddComment ("Дебит свободного газа ст.м3/сут. Переопределяет данные заданные в feed_json")
        End With
    End If
    ActiveCell.range("A1:A12").Interior.Color = clrGrayText
    ActiveCell.range("B1:B2").Interior.Color = clrIntermediateCalc
    ActiveCell.range("B12:L13").Interior.Color = clrCalculated
    ActiveCell.range("B3:B11").Interior.Color = clrUserInput
    ActiveCell.range("B7").Interior.Color = clrIntermediateCalc
    ActiveCell.range("B12:L13").Select
    Selection.FormulaArray = "=MF_choke_p_atma(R[-11]C,R[-10]C,R[-9]C,R[-8]C,R[-7]C,R[-5]C,R[-4]C,R[-3]C,R[-2]C,R[-1]C)"
    ActiveCell.range("A1").Select
    ActiveCell.name = get_name("choke_p")
End Sub
Sub btn_ribbon_choke_qliq(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 11, 0 To 1)
    
    If Not promt_to_write(13, 12, "calc MF_choke_q_sm3day") Then Exit Sub
    arr(0, 0) = "choke_json":           arr(0, 1) = "=encode_choke()"
    arr(1, 0) = "feed_json":            arr(1, 1) = "=encode_feed()"
    arr(2, 0) = "p_in_atma":            arr(2, 1) = 12
    arr(3, 0) = "p_out_atma":           arr(3, 1) = 10
    arr(4, 0) = "t_choke_C":            arr(4, 1) = 30
    arr(5, 0) = "show_array":           arr(5, 1) = 1
    arr(6, 0) = "param":                arr(6, 1) = "=encode_json(R[-1]C[-1]:R[-1]C)"
    arr(7, 0) = "q_liq_sm3day":         arr(7, 1) = ""
    arr(8, 0) = "fw_perc":              arr(8, 1) = ""
    arr(9, 0) = "rp_m3m3":              arr(9, 1) = ""
    arr(10, 0) = "q_gas_free_sm3day":   arr(10, 1) = ""
    arr(11, 0) = "result":              arr(11, 1) = ""
    
    ActiveCell.range("A1:B12") = arr
    If comment Then
        With ActiveCell
            .range("B1").AddComment ("json с параметрами штуцера. используйте encode_choke() для генерации")
            .range("B2").AddComment ("json с параметрами потока. используйте encode_feed() для генерации")
            .range("B3").AddComment ("Давление на входе в штуцер, атма")
            .range("B4").AddComment ("Давление на выходе из штуцера, атма")
            .range("B5").AddComment ("Температура потока в штуцера, С")
            .range("B6").AddComment ("Флаг отображения результатов. 0 - результат число, 1 - расширенный вывод результатов в виде массива")
            .range("B7").AddComment ("json с параметрами расчета")
            .range("B8").AddComment ("Дебит жидкости ст.м3/сут. Переопределяет данные заданные в feed_json")
            .range("B9").AddComment ("Обводненность, %. Переопределяет данные заданные в feed_json")
            .range("B10").AddComment ("Газовый фактор, м3/м3. Переопределяет данные заданные в feed_json")
            .range("B11").AddComment ("Дебит свободного газа ст.м3/сут. Переопределяет данные заданные в feed_json")
        End With
    End If
    ActiveCell.range("A1:A12").Interior.Color = clrGrayText
    ActiveCell.range("B1:B2").Interior.Color = clrIntermediateCalc
    ActiveCell.range("B12:L13").Interior.Color = clrCalculated
    ActiveCell.range("B3:B11").Interior.Color = clrUserInput
    ActiveCell.range("B7").Interior.Color = clrIntermediateCalc
    ActiveCell.range("B12:L13").Select
    Selection.FormulaArray = "=MF_choke_q_sm3day(R[-11]C,R[-10]C,R[-9]C,R[-8]C,R[-7]C,R[-5]C,R[-4]C,R[-3]C,R[-2]C,R[-1]C)"
    ActiveCell.range("A1").Select
    ActiveCell.name = get_name("choke_q")
End Sub
Sub btn_ribbon_choke_plot(control As IRibbonControl)
On Error Resume Next
    Dim top_rng As range
    Dim arr(0 To 11, 0 To 1)
    Dim diag
    
    Set diag = ActiveSheet.Shapes.AddChart2(240, xlXYScatterSmooth)
    
    If Not promt_to_write(33, 5, "calc MF_choke_q_sm3day") Then Exit Sub
    arr(0, 0) = "choke_json":           arr(0, 1) = "=encode_choke()"
    arr(1, 0) = "feed_json":            arr(1, 1) = "=encode_feed()"
    arr(2, 0) = "p_atma":               arr(2, 1) = 25
    arr(3, 0) = "t_choke_C":            arr(3, 1) = 30
    arr(4, 0) = "q_min":                arr(4, 1) = 1
    arr(5, 0) = "q_max":                arr(5, 1) = "=round(MF_choke_q_sm3day(R[-5]C,R[-4]C,R[-3]C,1,R[-2]C)-0.01,3)"
    arr(6, 0) = "q_list":               arr(6, 1) = "=list_concatenate(encode_linspace(R[-2]C,R[-1]C,20), R[-1]C+0.02, R[-1]C*1.1)"
    arr(7, 0) = "p_down_list":          arr(7, 1) = "=MF_choke_p_atma(R[-7]C,R[-6]C,R[-5]C,R[-4]C,0,,R[-1]C)"
    arr(8, 0) = "p_up_list":            arr(8, 1) = "=MF_choke_p_atma(R[-8]C,R[-7]C,R[-6]C,R[-5]C,1,,R[-2]C)"
    arr(9, 0) = "q_values":             arr(9, 1) = ""
    
    Set top_rng = ActiveCell
    ActiveCell.range("A1:B10") = arr
    If comment Then
        With ActiveCell
            .range("B1").AddComment ("json с параметрами штуцера. используйте encode_choke() для генерации")
            .range("B2").AddComment ("json с параметрами потока. используйте encode_feed() для генерации")
            .range("B3").AddComment ("Давление на входе/выходе в/из штуцер, атма")
            .range("B4").AddComment ("Температура потока в штуцера, С")
            .range("B5").AddComment ("Дебит минимальный для построения графиков")
            .range("B6").AddComment ("Дебит максимальный для построения графиков")
            .range("B7").AddComment ("Список значений дебита для построения графиков")
        End With
    End If
    ActiveCell.range("A1:A10").Interior.Color = clrGrayText
    ActiveCell.range("B1:B2").Interior.Color = clrIntermediateCalc
    ActiveCell.range("B3:B5").Interior.Color = clrUserInput
    ActiveCell.range("B6:B9").Interior.Color = clrCalculated
    ActiveCell.range("A10:E33").Interior.Color = clrGrayText
    
    top_rng.range("A11:A33").FormulaArray = "=decode_json(R[-4]C[1])"
    
    top_rng.range("B10:C33").FormulaArray = "=decode_json_crv(R[-2]C)"
    top_rng.range("D10:E33").FormulaArray = "=decode_json_crv(R[-1]C[-2])"
    
    With diag.Chart
         Application.CutCopyMode = False
         .ChartType = xlXYScatterLines
        With .SeriesCollection.NewSeries
            .name = "pressure down"
            .XValues = top_rng.range("A11:A33")
            .Values = top_rng.range("D11:D33")
        End With
        With .SeriesCollection.NewSeries
            .name = "pressure up"
            .XValues = top_rng.range("A11:A33")
            .Values = top_rng.range("B11:B33")
        End With
        '.SetSourceData source:=range(ActiveCell.range("A2:B21").Address)
        .SetElement (msoElementLegendBottom)
        .HasTitle = True
        .ChartTitle.Text = "Choke curves"
        .Axes(xlValue).MinimumScale = 0
        .Axes(xlValue, xlPrimary).HasTitle = True
        .Axes(xlValue, xlPrimary).AxisTitle.Text = "P, atma"
        .Axes(xlCategory, xlPrimary).HasTitle = True
        .Axes(xlCategory, xlPrimary).AxisTitle.Text = "Qliq, sm3/day"
        .Parent.top = ActiveCell.Cells(1, 5).top
        .Parent.Left = ActiveCell.Cells(1, 5).Left
        .Parent.Height = ActiveCell.Cells(1, 5).range("I1:P15").Height
        .Parent.WIDTH = ActiveCell.Cells(1, 5).range("I1:P33").WIDTH
    End With
End Sub
Sub btn_ribbon_choke_calibr(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 12, 0 To 1)
    
    If Not promt_to_write(19, 5, "calc MF_choke_q_sm3day") Then Exit Sub
    arr(0, 0) = "choke_json":           arr(0, 1) = "=encode_choke()"
    arr(1, 0) = "feed_json":            arr(1, 1) = "=encode_feed()"
    arr(2, 0) = "calibr_type":          arr(2, 1) = 1
    arr(3, 0) = "p_in_atma":            arr(3, 1) = 12
    arr(4, 0) = "p_out_atma":           arr(4, 1) = 10
    arr(5, 0) = "t_choke_C":            arr(5, 1) = 30
    arr(6, 0) = "show_array":           arr(6, 1) = 1
    arr(7, 0) = "param":                arr(7, 1) = "=encode_json(R[-1]C[-1]:R[-1]C)"
    arr(8, 0) = "q_liq_sm3day":         arr(8, 1) = ""
    arr(9, 0) = "fw_perc":              arr(9, 1) = ""
    arr(10, 0) = "rp_m3m3":             arr(10, 1) = ""
    arr(11, 0) = "q_gas_free_sm3day":   arr(11, 1) = ""
    arr(12, 0) = "result":              arr(12, 1) = ""
    
    ActiveCell.range("A1:B13") = arr
    If comment Then
        With ActiveCell
            .range("B1").AddComment ("json с параметрами штуцера. используйте encode_choke() для генерации")
            .range("B2").AddComment ("json с параметрами потока. используйте encode_feed() для генерации")
            .range("B3").AddComment ("Флаг - тип калибровки штуцера. 0 - calibr, 1 - диаметра штуцера, 2 - газовый фактор, 3 - обводненность, 4 - дебит жидкости, 5 - дебита свободного газа")
            .range("B15").AddComment ("результат - значение подстроечного параметра")
        End With
    End If
    ActiveCell.range("A1:A13").Interior.Color = clrGrayText
    ActiveCell.range("B1:B2").Interior.Color = clrIntermediateCalc
    ActiveCell.range("B13:E14").Interior.Color = clrCalculated
    ActiveCell.range("B3:B12").Interior.Color = clrUserInput
    ActiveCell.range("B8").Interior.Color = clrIntermediateCalc
    ActiveCell.range("B13:E14").Select
    Selection.FormulaArray = "=MF_choke_calibr(R[-12]C,R[-11]C,R[-10]C,R[-9]C,R[-8]C,R[-7]C,R[-5]C,R[-4]C,R[-3]C,R[-2]C,R[-1]C)"
    ActiveCell.range("A1").Select
    ActiveCell.name = get_name("choke_calibr")
    ActiveCell.offset(2, -1).range("A1:B5").Select
    Selection.FormulaArray = "=decode_json(R[-2]C[1])"
    ActiveCell.range("B1").Interior.Color = clrCalculated
    ActiveCell.range("B1").Select
End Sub
Sub btn_ribbon_ipr(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 5, 0 To 1)
    
    If Not promt_to_write(6, 2, "encode IPR") Then Exit Sub
    arr(0, 0) = "p_res_atma":           arr(0, 1) = 250
    arr(1, 0) = "q_liq_test_sm3day":    arr(1, 1) = 30
    arr(2, 0) = "p_wf_test_atma":       arr(2, 1) = 75
    arr(3, 0) = "feed json":            arr(3, 1) = "=encode_feed()"
    arr(4, 0) = "PI":                   arr(4, 1) = "=IPR_pi_sm3dayatm(R[1]C, R[-3]C, R[-2]C)"
    arr(5, 0) = "IPR":                  arr(5, 1) = "=encode_ipr(R[-5]C, R[-4]C, R[-3]C,,R[-2]C)"
    
    ActiveCell.range("A1:B6") = arr
    ActiveCell.range("B5").name = get_name("prod_index")
    ActiveCell.range("B6").name = get_name("IPR_json")
    ActiveCell.range("A1:B6").Interior.Color = clrGrayText
    ActiveCell.range("B1:B3").Interior.Color = clrUserInput
    
    ActiveCell.range("B4").Interior.Color = clrIntermediateCalc
    ActiveCell.range("B5").Interior.Color = clrIntermediateCalc
    ActiveCell.range("B6").Interior.Color = clrCalculated
    
    If comment Then
        ActiveCell.range("B1").AddComment ("Пластовое давление, атм" & _
                                           " ")
        ActiveCell.range("B2").AddComment ("Тестовый дебит жидкости на поверхности, ст.м3/сут " & _
                                           " ")
        ActiveCell.range("B3").AddComment ("Тестовое забойное давление, атм. " & _
                                           "Должно быть меньше чем пластовое. " & _
                                           " ")
        ActiveCell.range("B4").AddComment ("json с параметрами флюида и потока. " & _
                                           "Из параметров потока берется давление насыщения и температура пласта")
        ActiveCell.range("B5").AddComment ("Коэффициент продуктивности.  " & _
                                           "Рассчитывается из тестовых дебита и давления." & _
                                           " ")
        ActiveCell.range("B6").AddComment ("json с параметрами индикаторной кривой. " & _
                                           "необходим для расчетов индикаторной кривой. " & _
                                           " ")
    End If
    ActiveCell.range("B6").Select
End Sub
Sub btn_ribbon_ipr_chart(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 0, 0 To 1)
    Dim s As String
    Dim adress As String
    Dim diag
    
    If Not promt_to_write(23, 4, "encode feed_mod_separate_gas") Then Exit Sub
    s = ActiveCell.Formula
    adress = ActiveCell.Cells(1, 2).Address
    
    If Not (Len(s) > 12 And Mid(s, 1, 12) = "=encode_ipr(") Then
        ActiveCell.Cells(1, 1).Formula = "ipr json"
        ActiveCell.Cells(1, 1).Interior.Color = clrGrayText
        ActiveCell.Cells(1, 2).Formula = "=encode_ipr()"
        ActiveCell.Cells(1, 2).Interior.Color = clrIntermediateCalc
    Else
        adress = ActiveCell.Address
        ActiveCell.offset(0, -1).range("A1").Select
    End If
    ActiveCell.offset(1, 0).range("A1").Select
    ActiveCell.range("A1").Interior.Color = clrGrayText
    ActiveCell.range("B1").Interior.Color = clrIntermediateCalc
    arr(0, 0) = "ipr_curve":                arr(0, 1) = "=IPR_crv(" & adress & ")"
    ActiveCell.range("A1:B1") = arr
    ActiveCell.range("A2:B22").Clear
    ActiveCell.range("A2:B22").Select
    ActiveCell.range("A1:B21").Interior.Color = clrGrayText
    Selection.FormulaArray = "=decode_json_crv(decode_json(" & range(adress).Cells(2, 1).Address & ",,""pcrv"",1))"
    Set diag = ActiveSheet.Shapes.AddChart2(240, xlXYScatterSmooth)
    With diag.Chart
        .SetSourceData source:=range(ActiveCell.range("A2:B21").Address)
        .HasTitle = True
        .ChartTitle.Text = "IPR"
        .Axes(xlValue, xlPrimary).HasTitle = True
        .Axes(xlValue, xlPrimary).AxisTitle.Text = "Pwf, atma"
        .Axes(xlCategory, xlPrimary).HasTitle = True
        .Axes(xlCategory, xlPrimary).AxisTitle.Text = "Qliq, sm3/day"
        .Parent.top = ActiveCell.Cells(1, 5).top
        .Parent.Left = ActiveCell.Cells(1, 5).Left
        .Parent.Height = ActiveCell.Cells(1, 5).range("I1:P15").Height
        .Parent.WIDTH = ActiveCell.Cells(1, 5).range("I1:P33").WIDTH
    End With
    ActiveCell.range("C1:D21").Clear
    ActiveCell.range("C1:D21").Select
    ActiveCell.range("A1:B21").Interior.Color = vbYellow
    ActiveCell.range("A1:B21").Interior.Color = clrGrayText
    Selection.FormulaArray = "=decode_json_crv(decode_json(" & range(adress).Cells(2, 1).Address & ",,""tcrv"",1))" ' decode_json_crv(" & range(adress).Cells(2, 1).Address & ")"
    Set diag = ActiveSheet.Shapes.AddChart2(240, xlXYScatterSmooth)
    With diag.Chart
        .SetSourceData source:=range(ActiveCell.range("A2:B21").Address)
        .HasTitle = True
        .ChartTitle.Text = "IPR"
        .Axes(xlValue, xlPrimary).HasTitle = True
        .Axes(xlValue, xlPrimary).AxisTitle.Text = "t fluid, C"
        .Axes(xlCategory, xlPrimary).HasTitle = True
        .Axes(xlCategory, xlPrimary).AxisTitle.Text = "Qliq, sm3/day"
        .Parent.top = ActiveCell.Cells(1, 5).top
        .Parent.Left = ActiveCell.Cells(1, 11).Left
        .Parent.Height = ActiveCell.Cells(1, 5).range("I1:P15").Height
        .Parent.WIDTH = ActiveCell.Cells(1, 5).range("I1:P33").WIDTH
        .Refresh
    End With
    range(adress).Select
    ChangeCharts
End Sub
Sub btn_ribbon_constr(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 5, 0 To 3)
    
    If Not promt_to_write(7, 4, "encode trajectory") Then Exit Sub
    
    arr(0, 0) = "trajectory"
    arr(1, 0) = "hmes, m":      arr(1, 1) = "hvert, m"
    arr(2, 0) = 0:              arr(2, 1) = 0
    arr(3, 0) = 1000:           arr(3, 1) = 1000
    arr(4, 0) = 2000:           arr(4, 1) = 1900
    arr(5, 0) = 2500:           arr(5, 1) = 2300
    arr(0, 2) = "diameter"
    arr(1, 2) = "hmes, m":      arr(1, 3) = "diam, mm"
    arr(2, 2) = 0:              arr(2, 3) = 62
    arr(3, 2) = 500:            arr(3, 3) = 72
    arr(4, 2) = 2100:           arr(4, 3) = 125
    
    ActiveCell.range("A2:D7") = arr
    If comment Then
        With ActiveCell
            .range("A2").AddComment ("Траектория/инклинометрия. Зависимость вертикльной глубины от измеренной длины.")
            .range("C2").AddComment ("Диаметры трубы в зависимости от измеренной длины. На указанной длине диаметр меняется скачком.")
        End With
    End If
    ActiveCell.range("A1:D3").Interior.Color = clrGrayText
    ActiveCell.range("A4:D7").Interior.Color = clrUserInput
    ActiveCell.range("B1:D1").Interior.Color = clrCalculated
    ActiveCell.range("C4:D7").Interior.Color = RGB(230, 250, 100)
    ActiveCell = "construction"
    ActiveCell.range("B1").FormulaR1C1 = "=encode_pipe_construction(R[3]C[-1]:R[6]C,R[3]C[1]:R[6]C[2])"
    ActiveCell.range("B1").name = get_name("pipe_construction")
    ActiveCell.range("B1").Select
End Sub
Sub btn_ribbon_calc_pipe(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 17, 0 To 1)
    
    If Not promt_to_write(33, 8, "encode trajectory") Then Exit Sub
    
    arr(0, 0) = "p_atma":              arr(0, 1) = 25
    arr(1, 0) = "t_C":                 arr(1, 1) = 30
    arr(2, 0) = "pipe_object":         arr(2, 1) = "=encode_pipe()"
    arr(3, 0) = "feed":                arr(3, 1) = "=encode_feed()"
    arr(4, 0) = "calc_along_coord":    arr(4, 1) = 1
    arr(5, 0) = "param":               arr(5, 1) = "{""show_array"":1}"
    arr(6, 0) = "q_liq_sm3day":        arr(6, 1) = ""
    arr(7, 0) = "fw_perc":             arr(7, 1) = ""
    arr(8, 0) = "rp_m3m3":             arr(8, 1) = ""
    arr(9, 0) = "q_gas_free_sm3day":   arr(9, 1) = ""
    
    ActiveCell.range("A1:B10") = arr
    If comment Then
        With ActiveCell
            .range("B1").AddComment ("Давление на конце трубы, атма")
            .range("B2").AddComment ("Температура флюида на конце трубы, где задано давление. Учитывается только для температурной модели 2")
            .range("B3").AddComment ("json с параметрами трубы. Используйте encode_pipe() для генерации")
            .range("B4").AddComment ("json с параметрами потока флюидов. Используйте encode_feed() для генерации")
            .range("B5").AddComment ("Флаг для задания направления расчета относительно координат. 0 - расчет против координаты, 1 - расчет по координате.")
            .range("B6").AddComment ("json с параметрами расчета")
            .range("B7").AddComment ("Дебит жидкости ст.м3/сут. Переопределяет данные заданные в feed_json")
            .range("B8").AddComment ("Обводненность, %. Переопределяет данные заданные в feed_json")
            .range("B9").AddComment ("Газовый фактор, м3/м3. Переопределяет данные заданные в feed_json")
            .range("B10").AddComment ("Дебит свободного газа ст.м3/сут. Переопределяет данные заданные в feed_json")
        End With
    End If
    ActiveCell.range("B1:B10").Interior.Color = clrUserInput
    ActiveCell.range("A1:A10").Interior.Color = clrGrayText
    ActiveCell.range("B3:B4").Interior.Color = clrIntermediateCalc
    ActiveCell.range("A11:H33").Select
    Selection.FormulaArray = "=MF_pipe_p_atma(R[-10]C[1], R[-9]C[1], R[-8]C[1], R[-7]C[1], R[-6]C[1], R[-5]C[1], R[-4]C[1], R[-3]C[1], R[-2]C[1], R[-1]C[1])"
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = RGB(225, 200, 150)
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    Selection.NumberFormat = "0"
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    ActiveCell.Select
    Dim Chart1 As Chart
    Dim diag
    Set diag = ActiveSheet.Shapes.AddChart2(240, xlXYScatterSmooth)
    Set Chart1 = diag.Chart
    With Chart1
        .ChartArea.ClearContents
        .ChartType = xlXYScatterLines
        .SeriesCollection.NewSeries
        'Change to what your series should be called
        .SeriesCollection(1).name = "=""Pressure"""
        .SeriesCollection(1).XValues = ActiveCell.range("C4:C23")
        .SeriesCollection(1).Values = ActiveCell.range("A4:A23")
        .Axes(xlValue).ReversePlotOrder = True
        .Parent.top = ActiveCell.Cells(1, 9).top
        .Parent.Left = ActiveCell.Cells(1, 9).Left
        .Parent.Height = ActiveCell.Cells(1, 9).range("L1:P23").Height
        .Parent.WIDTH = ActiveCell.Cells(1, 9).range("L1:P23").WIDTH
        .Axes(xlValue, xlPrimary).HasTitle = True
        .Axes(xlValue, xlPrimary).AxisTitle.Text = "Hmes, m"
        .Axes(xlCategory, xlPrimary).HasTitle = True
        .Axes(xlCategory, xlPrimary).AxisTitle.Text = "P, atma"
    End With
    
    Set diag = ActiveSheet.Shapes.AddChart2(240, xlXYScatterSmooth)
    Set Chart1 = diag.Chart
    With Chart1
        .ChartArea.ClearContents
        .ChartType = xlXYScatterLines
        .ChartTitle.Text = "Temperature"
        .SeriesCollection.NewSeries
        .SeriesCollection(1).name = "=""Temperature"""
        .SeriesCollection(1).XValues = ActiveCell.range("D4:D23")
        .SeriesCollection(1).Values = ActiveCell.range("B4:B23")
        .SeriesCollection.NewSeries
        .SeriesCollection(2).name = "=""Ambient Temperature"""
        .SeriesCollection(2).XValues = ActiveCell.range("E4:E23")
        .SeriesCollection(2).Values = ActiveCell.range("B4:B23")
        .Axes(xlValue).ReversePlotOrder = True
        .Parent.top = ActiveCell.Cells(1, 9).top
        .Parent.Left = ActiveCell.Cells(1, 14).Left
        .Parent.Height = ActiveCell.Cells(1, 9).range("L1:P23").Height
        .Parent.WIDTH = ActiveCell.Cells(1, 9).range("L1:P23").WIDTH
        .Axes(xlValue, xlPrimary).HasTitle = True
        .Axes(xlValue, xlPrimary).AxisTitle.Text = "Hvert, m"
        .Axes(xlCategory, xlPrimary).HasTitle = True
        .Axes(xlCategory, xlPrimary).AxisTitle.Text = "T, C"
    End With
End Sub
Sub btn_ribbon_tmodel(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 5, 0 To 1)
    
    If Not promt_to_write(7, 2, "encode trajectory") Then Exit Sub
    
    arr(0, 0) = "ambient temperature"
    arr(1, 0) = "hvert, m":     arr(1, 1) = "t amb, C"
    arr(2, 0) = 0:              arr(2, 1) = 10
    arr(3, 0) = 1000:           arr(3, 1) = 35
    arr(4, 0) = 2000:           arr(4, 1) = 80
    arr(5, 0) = 2500:           arr(5, 1) = 90
    
    ActiveCell.range("A2:B7") = arr
    ActiveCell.range("A1:B3").Interior.Color = clrGrayText
    ActiveCell.range("A4:B7").Interior.Color = clrUserInput
    ActiveCell.range("B1").Interior.Color = clrCalculated
    ActiveCell = "t model"
    ActiveCell.range("B1").FormulaR1C1 = "=encode_t_model(1,R[3]C[-1]:R[6]C)"
    
    If comment Then
        With ActiveCell
            .range("B1").AddComment ("json с закодированными параметрами температурной модели." & _
                                     "Измените номер модели в функции encode_t_model() для смены модели: " & _
                                     "0 - температура линейно меняется по длине, 1 - температура флюида равна температуре среды," & _
                                     "2 - температура рассчитывается с учетом эмиссии тепла в окружающую среду")
            .range("B2").AddComment ("Задание массива зависимости температуры окружающей среды от вертикальной глубины (геотермы)")
            .range("A3").AddComment ("Таблица значений вертикальной глубины")
            .range("B3").AddComment ("Таблица значение температуры на соответствующих глубинах")
        End With
    End If
    
    ActiveCell.range("B1").name = get_name("t_model")
    ActiveCell.range("B1").Select
End Sub
Sub btn_ribbon_esp_pump(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 17, 0 To 1)
    
    If Not promt_to_write(14, 2, "encode trajectory") Then Exit Sub
    
    arr(0, 0) = "ESP_q_nom":                arr(0, 1) = 80
    arr(1, 0) = "ESP_head_nom":             arr(1, 1) = 1500
    arr(2, 0) = "freq_nom":                 arr(2, 1) = 50
    arr(3, 0) = "ESP_ID":                   arr(3, 1) = "=ESP_id_by_rate(R[-3]C, R[-1]C)"
    arr(4, 0) = "num_stages":               arr(4, 1) = "=ESP_calc_stages_num(R[-1]C,R[-3]C,R[-2]C,R[-4]C)"
    arr(5, 0) = "calibr_head":              arr(5, 1) = 1
    arr(6, 0) = "calibr_rate":              arr(6, 1) = 1
    arr(7, 0) = "calibr_power":             arr(7, 1) = 1
    arr(8, 0) = "gas_correct_model":        arr(8, 1) = 1
    arr(9, 0) = "gas_correct_stage_by_stage": arr(9, 1) = 0
    arr(10, 0) = "dnum_stages_integrate":   arr(10, 1) = 1
    arr(11, 0) = "encode_esp_pump":         arr(11, 1) = "=encode_ESP_pump(, , R[-9]C, R[-8]C , R[-7]C , R[-6]C, R[-5]C, R[-4]C, R[-3]C, R[-2]C, R[-1]C)"
    ActiveCell.range("A1:B12") = arr
    ActiveCell.range("B1:B12").Interior.Color = clrUserInput
    ActiveCell.range("A1:A12").Interior.Color = clrGrayText
    ActiveCell.range("B12").Interior.Color = clrCalculated
    ActiveCell.range("B12").name = get_name("esp_json")
    ActiveCell.range("B4:B5").Interior.Color = clrIntermediateCalc
    
    If comment Then
        ActiveCell.range("B1").AddComment ("Номинальная подача ЭЦН, для которой задается номинальный напор." & _
                                           "Нужна для определения ID насоса. Если ID задать непосредственно, " & _
                                           "то можно не указывать")
        ActiveCell.range("B2").AddComment ("Номинальный напор ЭЦН. " & _
                                           "Нужен для определения количества ступеней насоса. " & _
                                           "Если кол-во ступеней задать явно, то можно не указывать")
        ActiveCell.range("B3").AddComment ("Номинальная частота питающего тока. Обычно 50 Гц. " & _
                                           "Для зарубежных ЭЦН может быть 60 Гц. " & _
                                           "Для ПЭД с двумя парами полюсов может быть 100 Гц. ")
        ActiveCell.range("B4").AddComment ("ID (номер) насоса в базе данных. Вычисляется по номинальной подаче. " & _
                                           "Может быть задан явно, тогда номинальная подача игнорируется. " & _
                                           "ID и номинальная частота определяют модель насоса. ")
        ActiveCell.range("B5").AddComment ("Количество ступеней ЭЦН. Вычисляется по номинальному напору. " & _
                                           "Может быть задано явно, тогда номинальный напор игнорируется. " & _
                                           " ")
        ActiveCell.range("B6").AddComment ("Калибровочный множитель на напор ступени. " & _
                                           " " & _
                                           " ")
        ActiveCell.range("B7").AddComment ("Калибровочный множитель на подачу ступени. " & _
                                           " " & _
                                           " ")
        ActiveCell.range("B8").AddComment ("Калибровочный множитель на мощностную характеристику ступени. " & _
                                           " " & _
                                           " ")
        ActiveCell.range("B9").AddComment ("Модель корректировки РНХ из за влияния газа. 0 - нет корректировки. " & _
                                           "1 - стандратный ЭЦН с пределом по газу 25%. 2 - ЭЦН с газостабилизирующими модулями с пределом по газу 50% " & _
                                           "4 - ЭЦН с осевым модулем с пределом по газу 75%, 5 - ЭЦН с пределом 25% на основе стендовых испытаний Горидько К.А. ")
        ActiveCell.range("B10").AddComment ("Экспериментальная опция. Определяет будет ли корректировка по газу применяться " & _
                                            "ко всем ступеням ЭЦН одинаково (0), или к каждой ступени индивидуально (1). " & _
                                            " ")
        ActiveCell.range("B11").AddComment ("Шаг интегрирования перепада давления в ЭЦН. 1 значит интегрирование по отдельным ступеням " & _
                                            "Целое число более 1 определяет шаг интегрирования. 10 - расчет пакетами по 10 ступеней. " & _
                                            "Большой шаг ускоряет расчет, но вносит численную ошибку интегрирования ")
        ActiveCell.range("B12").AddComment ("закодированные в json параметры ЭЦН. Могут быть заданы " & _
                                            "с использованием ID насоса и количества ступеней или " & _
                                            "на основе номинальной подачи и номинального напора")
    End If
End Sub
Sub btn_ribbon_esp_nom_plot(control As IRibbonControl)
'Sub btn_ribbon_esp_power()
On Error Resume Next
    Dim arr(0 To 5, 0 To 3)
    Dim i As Integer
    Dim top_rng As range
    
    If Not promt_to_write(5, 2, "esp power") Then Exit Sub
    
    arr(0, 0) = "esp_json":             arr(0, 1) = "=encode_ESP_pump()"
    arr(1, 0) = "freq_Hz":              arr(1, 1) = 50
    arr(2, 0) = "mu_cSt":               arr(2, 1) = 1
    arr(3, 0) = "qmax":                 arr(3, 1) = "=ESP_rate_max_sm3day(R[-3]C, R[-2]C, R[-1]C)"
    arr(4, 0) = "qlist":                arr(4, 1) = "=encode_linspace(1, R[-1]C*1.2, 20)"
    
    arr(5, 0) = "q":  arr(5, 1) = "head":   arr(5, 2) = "power":  arr(5, 3) = "eff":
    
    Dim diag, diag1
    Set diag = ActiveSheet.Shapes.AddChart2(240, xlXYScatterSmooth)
    Set diag1 = ActiveSheet.Shapes.AddChart2(240, xlXYScatterSmooth)
    
    ActiveCell.range("A1:D6") = arr
    
    Set top_rng = ActiveCell
    
    Dim s1 As String, s2 As String, s3 As String
    s1 = top_rng.range("B1").Address
    s2 = top_rng.range("B2").Address
    s3 = top_rng.range("B3").Address
    Dim si As String
    top_rng.range("A7:A27").FormulaArray = "=decode_json(R[-2]C[1])"
    For i = 1 To 21
        si = top_rng.Cells(6 + i, 1).Address
        top_rng.range("B7:D27").Cells(i, 1) = "=ESP_head_m(" & si & "," & s1 & "," & s2 & "," & s3 & ")"
        top_rng.range("B7:D27").Cells(i, 2) = "=ESP_power_W(" & si & "," & s1 & "," & s2 & "," & s3 & ")"
        top_rng.range("B7:D27").Cells(i, 3) = "=ESP_eff_fr(" & si & "," & s1 & "," & s2 & "," & s3 & ")"
    Next i
    
    
    With diag.Chart
         Application.CutCopyMode = False
         .ChartType = xlXYScatterLines
        With .SeriesCollection.NewSeries
            .name = "head"
            .XValues = top_rng.range("A7:A27")
            .Values = top_rng.range("B7:B27")
        End With
        With .SeriesCollection.NewSeries
            .name = "power"
            .XValues = top_rng.range("A7:A27")
            .Values = top_rng.range("C7:C27")
            .AxisGroup = 2
        End With
       
        '.SetSourceData source:=range(ActiveCell.range("A2:B21").Address)
        .SetElement (msoElementLegendBottom)
        .HasTitle = True
        .ChartTitle.Text = "ESP curves"
        .Axes(xlValue, xlPrimary).HasTitle = True
        .Axes(xlValue, xlPrimary).AxisTitle.Text = "Head, m"
        .Axes(xlValue, xlSecondary).HasTitle = True
        .Axes(xlValue, xlSecondary).AxisTitle.Text = "Power, W"
        .Axes(xlCategory, xlPrimary).HasTitle = True
        .Axes(xlCategory, xlPrimary).AxisTitle.Text = "Qliq, sm3/day"
        .Parent.top = ActiveCell.Cells(1, 5).top
        .Parent.Left = ActiveCell.Cells(1, 5).Left
        .Parent.Height = ActiveCell.Cells(1, 5).range("I1:P25").Height
        .Parent.WIDTH = ActiveCell.Cells(1, 5).range("I1:P33").WIDTH
    End With
    With diag1.Chart
         Application.CutCopyMode = False
         .ChartType = xlXYScatterLines
        With .SeriesCollection.NewSeries
            .name = "head"
            .XValues = top_rng.range("A7:A27")
            .Values = top_rng.range("B7:B27")
        End With
        With .SeriesCollection.NewSeries
            .name = "efficiency"
            .XValues = top_rng.range("A7:A27")
            .Values = top_rng.range("D7:D27")
            .AxisGroup = 2
        End With
       
        '.SetSourceData source:=range(ActiveCell.range("A2:B21").Address)
        .SetElement (msoElementLegendBottom)
        .HasTitle = True
        .ChartTitle.Text = "ESP curves"
        .Axes(xlValue, xlPrimary).HasTitle = True
        .Axes(xlValue, xlPrimary).AxisTitle.Text = "Head, m"
        .Axes(xlValue, xlSecondary).HasTitle = True
        .Axes(xlValue, xlSecondary).AxisTitle.Text = "Efficiency, W"
        .Axes(xlCategory, xlPrimary).HasTitle = True
        .Axes(xlCategory, xlPrimary).AxisTitle.Text = "Qliq, sm3/day"
        .Parent.top = ActiveCell.Cells(1, 5).top
        .Parent.Left = ActiveCell.Cells(1, 5).range("I1:O33").Left
        .Parent.Height = ActiveCell.Cells(1, 5).range("I1:P25").Height
        .Parent.WIDTH = ActiveCell.Cells(1, 5).range("I1:P33").WIDTH
    End With
End Sub
Sub btn_ribbon_esp_head(control As IRibbonControl)
'Sub btn_ribbon_esp_head()
On Error Resume Next
    Dim arr(0 To 4, 0 To 1)
    
    If Not promt_to_write(5, 2, "esp head") Then Exit Sub
    
    arr(0, 0) = "qliq_m3day":           arr(0, 1) = 30
    arr(1, 0) = "esp_json":             arr(1, 1) = "=encode_ESP_pump()"
    arr(2, 0) = "freq_Hz":              arr(2, 1) = 50
    arr(3, 0) = "mu_cSt":               arr(3, 1) = 1
    arr(4, 0) = "esp nom head":        arr(4, 1) = "=ESP_head_m(R[-4]C, R[-3]C, R[-2]C, R[-1]C)"
    ActiveCell.range("A1:B5") = arr
    ActiveCell.range("B1:B5").Interior.Color = clrUserInput
    ActiveCell.range("A1:A5").Interior.Color = clrGrayText
    ActiveCell.range("B5").Interior.Color = clrCalculated
    ActiveCell.range("B2").Interior.Color = clrIntermediateCalc
End Sub
Sub btn_ribbon_esp_power(control As IRibbonControl)
'Sub btn_ribbon_esp_power()
On Error Resume Next
    Dim arr(0 To 4, 0 To 1)
    
    If Not promt_to_write(5, 2, "esp power") Then Exit Sub
    
    arr(0, 0) = "qliq_m3day":           arr(0, 1) = 30
    arr(1, 0) = "esp_json":             arr(1, 1) = "=encode_ESP_pump()"
    arr(2, 0) = "freq_Hz":              arr(2, 1) = 50
    arr(3, 0) = "mu_cSt":               arr(3, 1) = 1
    arr(4, 0) = "esp nom power":        arr(4, 1) = "=ESP_power_W(R[-4]C, R[-3]C, R[-2]C, R[-1]C)"
    ActiveCell.range("A1:B5") = arr
    ActiveCell.range("B1:B5").Interior.Color = clrUserInput
    ActiveCell.range("A1:A5").Interior.Color = clrGrayText
    ActiveCell.range("B5").Interior.Color = clrCalculated
    ActiveCell.range("B2").Interior.Color = clrIntermediateCalc
End Sub
Sub btn_ribbon_esp_eff(control As IRibbonControl)
'Sub btn_ribbon_esp_eff()
On Error Resume Next
    Dim arr(0 To 4, 0 To 1)
    
    If Not promt_to_write(5, 2, "esp efficiency") Then Exit Sub
    
    arr(0, 0) = "qliq_m3day":           arr(0, 1) = 30
    arr(1, 0) = "esp_json":             arr(1, 1) = "=encode_ESP_pump()"
    arr(2, 0) = "freq_Hz":              arr(2, 1) = 50
    arr(3, 0) = "mu_cSt":               arr(3, 1) = 1
    arr(4, 0) = "esp nom eff":        arr(4, 1) = "=ESP_eff_fr(R[-4]C, R[-3]C, R[-2]C, R[-1]C)"
    ActiveCell.range("A1:B5") = arr
    ActiveCell.range("B1:B5").Interior.Color = clrUserInput
    ActiveCell.range("A1:A5").Interior.Color = clrGrayText
    ActiveCell.range("B5").Interior.Color = clrCalculated
    ActiveCell.range("B2").Interior.Color = clrIntermediateCalc
End Sub
Sub btn_ribbon_esp_pump_calc(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 12, 0 To 1)
    
    If Not promt_to_write(36, 8, "encode trajectory") Then Exit Sub
   
    arr(0, 0) = "p_atma":             arr(0, 1) = 100
    arr(1, 0) = "t_intake_C":         arr(1, 1) = 30
    arr(2, 0) = "t_dis_C":            arr(2, 1) = -1
    arr(3, 0) = "feed":               arr(3, 1) = "=encode_feed()"
    arr(4, 0) = "json_ESP_pump":      arr(4, 1) = "=encode_ESP_pump()"
    arr(5, 0) = "freq_Hz":            arr(5, 1) = 50
    arr(6, 0) = "calc_along_flow":    arr(6, 1) = 1
    arr(7, 0) = "param":              arr(7, 1) = "{""show_array"":1}"
    arr(8, 0) = "h_mes_top":          arr(8, 1) = 1000
    arr(9, 0) = "q_liq_sm3day":       arr(9, 1) = ""
    arr(10, 0) = "fw_perc":           arr(10, 1) = ""
    arr(11, 0) = "rp_m3m3":           arr(11, 1) = ""
    arr(12, 0) = "q_gas_free_sm3day": arr(12, 1) = ""
    
    ActiveCell.range("A1:B13") = arr
    ActiveCell.range("A1:A13").Interior.Color = clrGrayText
    ActiveCell.range("B1:B13").Interior.Color = clrUserInput
    ActiveCell.range("B4:B5").Interior.Color = clrIntermediateCalc
    ActiveCell.range("A14:H36").Select
    Selection.FormulaArray = "=ESP_p_atma(R[-13]C[1], R[-12]C[1], R[-11]C[1], R[-10]C[1], R[-9]C[1],  R[-8]C[1], R[-7]C[1], R[-6]C[1], R[-5]C[1], R[-4]C[1], R[-3]C[1], R[-2]C[1], R[-1]C[1])"
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .Color = RGB(225, 200, 150)
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    Selection.NumberFormat = "0"
    With Selection
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlBottom
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    ActiveCell.Select
    Dim Chart1 As Chart
    Dim diag
    Set diag = ActiveSheet.Shapes.AddChart2(240, xlXYScatterSmooth)
    Set Chart1 = diag.Chart
    With Chart1
        .ChartArea.ClearContents
        .ChartType = xlXYScatterLines
        .SeriesCollection.NewSeries
        'Change to what your series should be called
        .SeriesCollection(1).name = "=""Pressure"""
        .SeriesCollection(1).XValues = ActiveCell.range("C4:C23")
        .SeriesCollection(1).Values = ActiveCell.range("A4:A23")
        .Axes(xlValue).ReversePlotOrder = True
        .Parent.top = ActiveCell.Cells(1, 9).top
        .Parent.Left = ActiveCell.Cells(1, 9).Left
        .Parent.Height = ActiveCell.Cells(1, 9).range("L1:P23").Height
        .Parent.WIDTH = ActiveCell.Cells(1, 9).range("L1:P23").WIDTH
        .Axes(xlValue, xlPrimary).HasTitle = True
        .Axes(xlValue, xlPrimary).AxisTitle.Text = "stage number"
        .Axes(xlCategory, xlPrimary).HasTitle = True
        .Axes(xlCategory, xlPrimary).AxisTitle.Text = "P, atma"
    End With
End Sub
Sub btn_ribbon_esp_system_calc(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 17, 0 To 1)
    If Not promt_to_write(18, 2, "encode esp system") Then Exit Sub
    arr(0, 0) = "p_calc_atma":          arr(0, 1) = 100
    arr(1, 0) = "U_surf_high_lin_V":    arr(1, 1) = 1000
    arr(2, 0) = "f_surf_Hz":            arr(2, 1) = 50
    arr(3, 0) = "power_fact_kW":        arr(3, 1) = 35
    arr(4, 0) = "t_intake_C":           arr(4, 1) = 50
    arr(5, 0) = "t_dis_C":              arr(5, 1) = 50
    arr(6, 0) = "feed":                 arr(6, 1) = "=encode_feed()"
    arr(7, 0) = "pump_json":            arr(7, 1) = "=encode_ESP_pump()"
    arr(8, 0) = "motor_json":           arr(8, 1) = "=encode_ESP_motor()"
    arr(9, 0) = "cable_json":           arr(9, 1) = "=encode_ESP_cable()"
    arr(10, 0) = "gassep_json":         arr(10, 1) = "=encode_ESP_separation()"
    arr(11, 0) = "calc_along_flow":     arr(11, 1) = 1
    arr(12, 0) = "param":               arr(12, 1) = ""
    arr(13, 0) = "q_liq_sm3day":        arr(13, 1) = ""
    arr(14, 0) = "fw_perc":             arr(14, 1) = ""
    arr(15, 0) = "rp_m3m3":             arr(15, 1) = ""
    arr(16, 0) = "q_gas_free_sm3day":   arr(16, 1) = ""
    arr(17, 0) = "esp_system":          arr(17, 1) = "=ESP_system_calc(R[-17]C,R[-16]C,R[-15]C,R[-14]C,R[-13]C,R[-12]C,R[-11]C,R[-10]C,R[-9]C,R[-8]C,R[-7]C,R[-6]C,R[-5]C,R[-4]C,R[-3]C,R[-2]C,R[-1]C)"
    ActiveCell.range("A1:B18") = arr
    ActiveCell.range("A1:A18").Interior.Color = clrGrayText
    ActiveCell.range("B1:B6").Interior.Color = clrUserInput
    ActiveCell.range("B7:B11").Interior.Color = clrIntermediateCalc
    ActiveCell.range("B12:B17").Interior.Color = clrUserInput
    ActiveCell.range("B18").Interior.Color = clrCalculated
End Sub
Sub btn_json_linspace(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 3, 0 To 1)
    
    If Not promt_to_write(4, 2, "encode linspace") Then Exit Sub
    
    arr(0, 0) = "val_from":     arr(0, 1) = 1
    arr(1, 0) = "val_to":       arr(1, 1) = 250
    arr(2, 0) = "num":          arr(2, 1) = 25
    arr(3, 0) = "linspace":     arr(3, 1) = "=encode_linspace(R[-3]C,R[-2]C,R[-1]C)"
    
    ActiveCell.range("A1:B4") = arr
    ActiveCell.range("A1:A4").Interior.Color = clrGrayText
    ActiveCell.range("B4").Interior.Color = clrCalculated
    ActiveCell.range("B1:B3").Interior.Color = clrUserInput
    ActiveCell.range("B4").Select
    ActiveCell.name = get_name("linspace")
End Sub
Sub btn_json_logspace(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 3, 0 To 1)
    
    If Not promt_to_write(4, 2, "encode logspace") Then Exit Sub
    
    arr(0, 0) = "val_from":     arr(0, 1) = 1
    arr(1, 0) = "val_to":       arr(1, 1) = 250
    arr(2, 0) = "num":          arr(2, 1) = 25
    arr(3, 0) = "logspace":     arr(3, 1) = "=encode_logspace(R[-3]C,R[-2]C,R[-1]C)"
    
    ActiveCell.range("A1:B4") = arr
    ActiveCell.range("A1:A4").Interior.Color = clrGrayText
    ActiveCell.range("B4").Interior.Color = clrCalculated
    ActiveCell.range("B1:B3").Interior.Color = clrUserInput
    ActiveCell.range("B4").Select
    ActiveCell.name = get_name("logspace")
End Sub
Sub btn_json_arange(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 3, 0 To 1)
    
    If Not promt_to_write(4, 2, "encode arange") Then Exit Sub
    
    arr(0, 0) = "val_from":     arr(0, 1) = 1
    arr(1, 0) = "val_to":       arr(1, 1) = 250
    arr(2, 0) = "num":          arr(2, 1) = 10
    arr(3, 0) = "arange":       arr(3, 1) = "=encode_arange(R[-3]C,R[-2]C,R[-1]C)"
    
    ActiveCell.range("A1:B4") = arr
    ActiveCell.range("A1:A4").Interior.Color = clrGrayText
    ActiveCell.range("B4").Interior.Color = clrCalculated
    ActiveCell.range("B1:B3").Interior.Color = clrUserInput
    ActiveCell.range("B4").Select
    ActiveCell.name = get_name("arange")
End Sub
Sub btn_PVT_rs_m3m3(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 3, 0 To 1)
    
    If Not promt_to_write(4, 2, "encode rs") Then Exit Sub
    
    arr(0, 0) = "P, atma":      arr(0, 1) = 80
    arr(1, 0) = "T, C":         arr(1, 1) = 80
    arr(2, 0) = "pvt json":     arr(2, 1) = "=encode_PVT()"
    arr(3, 0) = "rs m3m3":      arr(3, 1) = "=PVT_rs_m3m3(R[-3]C,R[-2]C,R[-1]C)"
    
    ActiveCell.range("A1:B4") = arr
    ActiveCell.range("A1:A4").Interior.Color = clrGrayText
    ActiveCell.range("B3").Interior.Color = clrIntermediateCalc
    ActiveCell.range("B4").Interior.Color = clrCalculated
    ActiveCell.range("B1:B2").Interior.Color = clrUserInput
    
    If comment Then
        ActiveCell.range("B1").AddComment ("Давление, атм")
        ActiveCell.range("B2").AddComment ("Температура, С")
        ActiveCell.range("B3").AddComment ("json строка с параметрами флюида. " & _
                                           "Установите ссылку на ячейку с параметрами флюида")
        ActiveCell.range("B4").AddComment ("Расчетная величина газосодержания в нефти " & _
                                           "при заданных термобарических условиях, м3/м3")
    End If
    
    ActiveCell.range("B4").Select
    ActiveCell.name = get_name("rs_m3m3")
End Sub
Sub btn_PVT_muo_cP(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 3, 0 To 1)
    
    If Not promt_to_write(4, 2, "encode muo") Then Exit Sub
    
    arr(0, 0) = "P, atma":      arr(0, 1) = 80
    arr(1, 0) = "T, C":         arr(1, 1) = 80
    arr(2, 0) = "pvt json":     arr(2, 1) = "=encode_PVT()"
    arr(3, 0) = "mu oil cP":    arr(3, 1) = "=PVT_mu_oil_cP(R[-3]C,R[-2]C,R[-1]C)"
    
    ActiveCell.range("A1:B4") = arr
    ActiveCell.range("A1:A4").Interior.Color = clrGrayText
    ActiveCell.range("B3").Interior.Color = clrIntermediateCalc
    ActiveCell.range("B4").Interior.Color = clrCalculated
    ActiveCell.range("B1:B2").Interior.Color = clrUserInput
    If comment Then
        ActiveCell.range("B1").AddComment ("Давление, атм")
        ActiveCell.range("B2").AddComment ("Температура, С")
        ActiveCell.range("B3").AddComment ("json строка с параметрами флюида. " & _
                                           "Установите ссылку на ячейку с параметрами флюида")
        ActiveCell.range("B4").AddComment ("Расчетная величина вязкости нефти " & _
                                           "при заданных термобарических условиях, сП")
    End If
    ActiveCell.range("B4").Select
    ActiveCell.name = get_name("muo_cP")
End Sub
Sub btn_PVT_bo_m3m3(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 3, 0 To 1)
    
    If Not promt_to_write(4, 2, "encode bo") Then Exit Sub
    
    arr(0, 0) = "P, atma":      arr(0, 1) = 80
    arr(1, 0) = "T, C":         arr(1, 1) = 80
    arr(2, 0) = "pvt json":     arr(2, 1) = "=encode_PVT()"
    arr(3, 0) = "bo m3m3":      arr(3, 1) = "=PVT_bo_m3m3(R[-3]C,R[-2]C,R[-1]C)"
    
    ActiveCell.range("A1:B4") = arr
    ActiveCell.range("A1:A4").Interior.Color = clrGrayText
    ActiveCell.range("B3").Interior.Color = clrIntermediateCalc
    ActiveCell.range("B4").Interior.Color = clrCalculated
    ActiveCell.range("B1:B2").Interior.Color = clrUserInput
    If comment Then
        ActiveCell.range("B1").AddComment ("Давление, атм")
        ActiveCell.range("B2").AddComment ("Температура, С")
        ActiveCell.range("B3").AddComment ("json строка с параметрами флюида. " & _
                                           "Установите ссылку на ячейку с параметрами флюида")
        ActiveCell.range("B4").AddComment ("Расчетная величина объемного коэффициента нефти " & _
                                           "при заданных термобарических условиях, м3/м3")
    End If
    ActiveCell.range("B4").Select
    ActiveCell.name = get_name("bo_m3m3")
End Sub
Sub btn_feed_gas_fraction_d(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 4, 0 To 1)
    
    If Not promt_to_write(5, 2, "encode gas_fraction") Then Exit Sub
    
    arr(0, 0) = "P, atma":      arr(0, 1) = 10
    arr(1, 0) = "T, C":         arr(1, 1) = 80
    arr(2, 0) = "feed json":    arr(2, 1) = "=encode_feed()"
    arr(3, 0) = "k sep":        arr(3, 1) = 0
    arr(4, 0) = "gas fraction": arr(4, 1) = "=feed_gas_fraction_d(R[-4]C,R[-3]C,R[-2]C,R[-1]C)"
    
    ActiveCell.range("A1:B5") = arr
    ActiveCell.range("A1:A5").Interior.Color = clrGrayText
    ActiveCell.range("B5").Interior.Color = clrCalculated
    ActiveCell.range("B1:B4").Interior.Color = clrUserInput
    ActiveCell.range("B3").Interior.Color = clrIntermediateCalc
    If comment Then
        ActiveCell.range("B1").AddComment ("Давление, атм")
        ActiveCell.range("B2").AddComment ("Температура, С")
        ActiveCell.range("B3").AddComment ("json строка с параметрами флюида. " & _
                                           "Установите ссылку на ячейку с параметрами флюида")
        ActiveCell.range("B4").AddComment ("Коэффициент сепарации газа, д.е.")
        ActiveCell.range("B5").AddComment ("Расчетная величина расходной доли газа в потоке " & _
                                           "при заданных условиях, д.е.")
    End If
    ActiveCell.range("B5").Select
    ActiveCell.name = get_name("gas_fraction")
End Sub
Sub btn_feed_qmix(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 3, 0 To 1)
    
    If Not promt_to_write(4, 2, "encode gas_fraction") Then Exit Sub
    
    arr(0, 0) = "P, atma":          arr(0, 1) = 10
    arr(1, 0) = "T, C":             arr(1, 1) = 80
    arr(2, 0) = "feed json":        arr(2, 1) = "=encode_feed()"
    arr(3, 0) = "q_mix_rc_m3day":   arr(3, 1) = "=feed_q_mix_rc_m3day(R[-3]C,R[-2]C,R[-1]C)"
    
    ActiveCell.range("A1:B4") = arr
    ActiveCell.range("A1:A4").Interior.Color = clrGrayText
    ActiveCell.range("B4").Interior.Color = clrCalculated
    ActiveCell.range("B1:B3").Interior.Color = clrUserInput
    ActiveCell.range("B3").Interior.Color = clrIntermediateCalc
    If comment Then
        ActiveCell.range("B1").AddComment ("Давление, атм")
        ActiveCell.range("B2").AddComment ("Температура, С")
        ActiveCell.range("B3").AddComment ("json строка с параметрами флюида. " & _
                                           "Установите ссылку на ячейку с параметрами флюида")
        ActiveCell.range("B4").AddComment ("Расчетная величина расхода газожидкостной смеси (ГЖС) " & _
                                           "при заданных термобарических условиях, м3/сут")
    End If
    ActiveCell.range("B4").Select
    ActiveCell.name = get_name("qmix")
End Sub
Sub btn_feed_separation(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 5, 0 To 1)
    
    If Not promt_to_write(6, 2, "encode feed_mod_separate_gas") Then Exit Sub
    
    arr(0, 0) = "k_sep":        arr(0, 1) = 0.2
    arr(1, 0) = "p_atma":       arr(1, 1) = 40
    arr(2, 0) = "t_C":          arr(2, 1) = 20
    arr(3, 0) = "feed":         arr(3, 1) = "=encode_feed()"
    arr(4, 0) = "sol_factor":   arr(4, 1) = 1
    arr(5, 0) = "new feed":     arr(5, 1) = "=feed_mod_separate_gas(R[-5]C,R[-4]C,R[-3]C,R[-2]C,R[-1]C)"
    
    ActiveCell.range("A1:B6") = arr
    ActiveCell.range("A1:A6").Interior.Color = clrGrayText
    ActiveCell.range("B6").Interior.Color = clrCalculated
    ActiveCell.range("B1:B5").Interior.Color = clrUserInput
    ActiveCell.range("B4").Interior.Color = clrIntermediateCalc
    If comment Then
        ActiveCell.range("B1").AddComment ("Коэффициент сепарации газа, д.е.")
        ActiveCell.range("B2").AddComment ("Давление сепарации, атм")
        ActiveCell.range("B3").AddComment ("Температура сепарации, С")
        ActiveCell.range("B4").AddComment ("json строка с параметрами потока флюидов. " & _
                                           "Установите ссылку на ячейку с параметрами флюида")
        ActiveCell.range("B5").AddComment ("Коэффициент фазной неравновесности:" & _
                                           "1 - соответвует полному растворению газа в нефти при повышении давления;" & _
                                           "0 - при повышении давления газ только сжимается, но не растворяется в нефти." & _
                                           "Может принимать промежуточные значения.")
        ActiveCell.range("B6").AddComment ("Расчетная json строка с параметрами потока флюидов (feed) после сепарации газа")
    End If
    ActiveCell.range("B6").Select
    ActiveCell.name = get_name("feed_sep_gas")
End Sub
Sub btn_ribbon_ipr_pi(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 3, 0 To 1)
    
    If Not promt_to_write(4, 2, "calc IPR_pi_sm3dayatm") Then Exit Sub
    
    arr(0, 0) = "Qtest_sm3day":     arr(0, 1) = 30
    arr(1, 0) = "pwf_test_atma":    arr(1, 1) = 40
    arr(2, 0) = "ipr json":         arr(2, 1) = "=encode_ipr()"
    arr(3, 0) = "pi_sm3dayatm":     arr(3, 1) = "=IPR_pi_sm3dayatm(R[-1]C,R[-3]C,R[-2]C)"
    
    ActiveCell.range("A1:B4") = arr
    ActiveCell.range("A1:A4").Interior.Color = clrGrayText
    ActiveCell.range("B3").Interior.Color = clrIntermediateCalc
    ActiveCell.range("B4").Interior.Color = clrCalculated
    ActiveCell.range("B1:B2").Interior.Color = clrUserInput
    
    If comment Then
        ActiveCell.range("B1").AddComment ("Тестовый дебит жидкости на поверхности, ст.м3/сут " & _
                                           " ")
        ActiveCell.range("B2").AddComment ("Тестовое забойное давление, атм. " & _
                                           "Должно быть меньше чем пластовое. " & _
                                           " ")
        ActiveCell.range("B3").AddComment ("json с параметрами флюида и потока. " & _
                                           "Из параметров потока берется пластовое давление, давление насыщения и температура пласта")
        ActiveCell.range("B4").AddComment ("Коэффициент продуктивности.  " & _
                                           "Рассчитывается из тестовых дебита и давления." & _
                                           " ")
    End If
    
    ActiveCell.range("B4").Select
    ActiveCell.name = get_name("pi_sm3dayatm")
End Sub
Sub btn_ribbon_ipr__qliq(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 2, 0 To 1)
    
    If Not promt_to_write(3, 2, "calc IPR_q_liq_sm3day") Then Exit Sub
    
    arr(0, 0) = "pwf_test_atma":    arr(0, 1) = 40
    arr(1, 0) = "ipr json":         arr(1, 1) = "=encode_ipr()"
    arr(2, 0) = "q_liq_sm3day":     arr(2, 1) = "=IPR_q_liq_sm3day(R[-1]C,R[-2]C)"
    
    ActiveCell.range("A1:B3") = arr
    ActiveCell.range("A1:A3").Interior.Color = clrGrayText
    ActiveCell.range("B2").Interior.Color = clrIntermediateCalc
    ActiveCell.range("B3").Interior.Color = clrCalculated
    ActiveCell.range("B1").Interior.Color = clrUserInput
    If comment Then
        ActiveCell.range("B1").AddComment ("Забойное давление, атм. " & _
                                           " ")
        ActiveCell.range("B2").AddComment ("json с параметрами индикаторной кривой. " & _
                                           "Установите ссылку на результаты вызова encode_ipr()")
        ActiveCell.range("B3").AddComment ("Расчитанное значение дебита жидкости  " & _
                                           "с учетом характеристики пласта (IPR)." & _
                                           " ")
    End If
    ActiveCell.range("B3").Select
    ActiveCell.name = get_name("q_liq_sm3day")
End Sub
Sub btn_ribbon_ipr_pwf(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 2, 0 To 1)
    
    If Not promt_to_write(3, 2, "calc IPR_p_wf_atma") Then Exit Sub
    
    arr(0, 0) = "q_liq_sm3day": arr(0, 1) = 40
    arr(1, 0) = "ipr json":     arr(1, 1) = "=encode_ipr()"
    arr(2, 0) = "pwf_atma":     arr(2, 1) = "=IPR_pwf_atma(R[-1]C,R[-2]C)"
    
    ActiveCell.range("A1:B3") = arr
    ActiveCell.range("A1:A3").Interior.Color = clrGrayText
    ActiveCell.range("B2").Interior.Color = clrIntermediateCalc
    ActiveCell.range("B3").Interior.Color = clrCalculated
    ActiveCell.range("B1").Interior.Color = clrUserInput
    If comment Then
        ActiveCell.range("B1").AddComment ("Дебит жидкости на поверхности, ст.м3/сут " & _
                                           " ")
        ActiveCell.range("B2").AddComment ("json с параметрами индикаторной кривой. " & _
                                           "Установите ссылку на результаты вызова encode_ipr()")
        ActiveCell.range("B3").AddComment ("Расчитанное значение забойного давления  " & _
                                           "с учетом характеристики пласта (IPR)." & _
                                           " ")
    End If
    ActiveCell.range("B3").Select
    ActiveCell.name = get_name("p_wf_atma")
End Sub
Sub btn_feed_split(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 6, 0 To 1)
    
    If Not promt_to_write(7, 2, "encode feed_mod_split") Then Exit Sub
    
    arr(0, 0) = "k_sep_gas":    arr(0, 1) = 0.2
    arr(1, 0) = "k_sep_oil":    arr(1, 1) = 0.2
    arr(2, 0) = "k_sep_wat":    arr(2, 1) = 0.2
    arr(3, 0) = "p_atma":       arr(3, 1) = 40
    arr(4, 0) = "t_C":          arr(4, 1) = 20
    arr(5, 0) = "feed":         arr(5, 1) = "=encode_feed()"
    arr(6, 0) = "new feeds":    arr(6, 1) = "=feed_mod_split(R[-6]C,R[-5]C,R[-4]C,R[-3]C,R[-2]C,R[-1]C)"
    
    ActiveCell.range("A1:B7") = arr
    ActiveCell.range("A1:A7").Interior.Color = clrGrayText
    ActiveCell.range("B7").Interior.Color = clrCalculated
    ActiveCell.range("B1:B6").Interior.Color = clrUserInput
    ActiveCell.range("B6").Interior.Color = clrIntermediateCalc
    If comment Then
        ActiveCell.range("B1").AddComment ("Коэффициент сепарации по газу, д.е. " & _
                                           " ")
        ActiveCell.range("B2").AddComment ("Коэффициент сепарации по нефти, д.е. " & _
                                           " ")
        ActiveCell.range("B3").AddComment ("Коэффициент сепарации по воде, д.е. " & _
                                           " ")
        ActiveCell.range("B4").AddComment ("Давление сепарации, атм")
        ActiveCell.range("B5").AddComment ("Температура сепарации, С")
        
        ActiveCell.range("B6").AddComment ("json строка с параметрами потока флюидов. " & _
                                           "Установите ссылку на ячейку с параметрами флюида")
        ActiveCell.range("B7").AddComment ("Расчетная json строка с параметрами потока флюидов (feed) после сепарации фаз")
    End If
    ActiveCell.range("B7").Select
    ActiveCell.name = get_name("feeds_split")
End Sub
Sub btn_json_combine(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 2, 0 To 1)
    
    If Not promt_to_write(3, 2, "encode list_concatenate") Then Exit Sub
    
    arr(0, 0) = "list 1":    arr(0, 1) = 1
    arr(1, 0) = "list 2":    arr(1, 1) = 2
    arr(2, 0) = "new feeds":    arr(2, 1) = "=list_concatenate(R[-2]C,R[-1]C)"
    
    ActiveCell.range("A1:B3") = arr
    ActiveCell.range("A1:A3").Interior.Color = clrGrayText
    ActiveCell.range("B3").Interior.Color = clrCalculated
    ActiveCell.range("B1:B2").Interior.Color = clrUserInput
    ActiveCell.range("B3").Select
    ActiveCell.name = get_name("combine")
End Sub
Sub btn_feed_mix(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 2, 0 To 1)
    
    If Not promt_to_write(3, 2, "encode feed_mod_mix") Then Exit Sub
    
    arr(0, 0) = "feed 1":       arr(0, 1) = "=encode_feed()"
    arr(1, 0) = "feed 2":       arr(1, 1) = "=encode_feed()"
    arr(2, 0) = "new feeds":    arr(2, 1) = "=feed_mod_mix(R[-2]C,R[-1]C)"
    
    ActiveCell.range("A1:B3") = arr
    ActiveCell.range("A1:A3").Interior.Color = clrGrayText
    ActiveCell.range("B1:B3").Interior.Color = clrUserInput
    ActiveCell.range("B3").Interior.Color = clrCalculated
    If comment Then
        
        ActiveCell.range("B1").AddComment ("json строка с параметрами первого потока флюидов. " & _
                                           "Установите ссылку на ячейку с параметрами флюида")
        ActiveCell.range("B2").AddComment ("json строка с параметрами второго потока флюидов. " & _
                                           "Установите ссылку на ячейку с параметрами флюида")
        ActiveCell.range("B3").AddComment ("Расчетная json строка с параметрами потока флюидов (feed) после слияния")
    End If
    ActiveCell.range("B3").Select
    ActiveCell.name = get_name("feed_mix")
End Sub
' A solution to fix the problem with add-on paths
' https://www.planetaexcel.ru/forum/index.php?PAGE_NAME=message&FID=8&TID=10450&TITLE_SEO=10450&MID=91949#message91949
' Called by pressing a button on the ribbon
Function correct_links()
     Dim wb As Workbook
     Dim MyAddIn, Lnk, sh
     Dim MyAddInNameFull
     Dim aLinks
     Dim wname As String
     Dim i As Integer
     
     i = 0
     wname = "unknown"
     
On Error GoTo exit_
     
      ' Define the name of the add-in
    MyAddIn = UCase(ThisWorkbook.name)
    MyAddInNameFull = ThisWorkbook.Path & "\" & ThisWorkbook.name
    Set wb = ActiveWorkbook ' work with the active workbook
    If Not wb Is Nothing Then
       With wb
          wname = wb.name
          aLinks = wb.LinkSources()
          If Not IsEmpty(aLinks) Then
                For Each Lnk In .LinkSources(Type:=xlExcelLinks)
                    Debug.Print Lnk
                     Debug.Print UCase(Lnk), "*" & MyAddIn
                  If UCase(Lnk) Like "*" & MyAddIn Then
                    add_log_msg "an add-in reference " & wb.name & " was found in the book " & Lnk
                    If UCase(Lnk) <> UCase(MyAddInNameFull) Then
                        add_log_msg "in the book " & wb.name & " trying to correct the link " & Lnk & " to the correct " & MyAddInNameFull
                        .ChangeLink name:=Lnk, NewName:=MyAddIn
                        i = i + 1
                        For Each sh In .Worksheets
                          sh.Calculate
                        Next
                    Else
                        add_log_msg "in book " & wb.name & " reference " & Lnk & " correct, no correction needed"
                    End If
                  End If
                Next
            End If
       End With
       correct_links = i
    Else
       GoTo exit_
    End If
    Exit Function
     
exit_:
        MsgBox "Error. Something went wrong when fixing the add-in links."
        add_log_msg "Error. In the book " & wname & " something went wrong when fixing the add-in links."
End Function
Sub btn_ribbon_pipe_object(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 9, 0 To 3)
    
    If Not promt_to_write(10, 2, "pipe object") Then Exit Sub
    
    arr(0, 0) = "construction":     arr(0, 1) = "=encode_pipe_construction()"
    arr(1, 0) = "t_model":          arr(1, 1) = "=encode_t_model()"
    arr(2, 0) = "flow_correlation": arr(2, 1) = 0
    arr(3, 0) = "flow_along_coord": arr(3, 1) = 0
    arr(4, 0) = "calibr_grav":      arr(4, 1) = 1
    arr(5, 0) = "calibr_fric":      arr(5, 1) = 1
    arr(6, 0) = "h_start_m":        arr(6, 1) = ""
    arr(7, 0) = "h_end_m":          arr(7, 1) = ""
    arr(8, 0) = "znlf":             arr(8, 1) = ""
    arr(9, 0) = "pipe":             arr(9, 1) = "=encode_pipe()"
       
    ActiveCell.range("A1:B10") = arr
    ActiveCell.range("B1:B10").Interior.Color = clrUserInput
    ActiveCell.range("A1:A10").Interior.Color = clrGrayText
    ActiveCell.range("B1").Interior.Color = clrIntermediateCalc
    ActiveCell.range("B2").Interior.Color = clrIntermediateCalc
    ActiveCell.range("B10").Interior.Color = clrCalculated
    ActiveCell.range("B10").FormulaR1C1 = "=encode_pipe(R[-9]C,R[-8]C,R[-7]C,R[-6]C,R[-5]C,R[-4]C,R[-3]C,R[-2]C,R[-1]C)"
    ActiveCell.range("B10").name = get_name("pipe_object")
    If comment Then
        ActiveCell.range("B1").AddComment ("json строка с параметрами потока трубы. " & _
                                           "установите ссылку на результат вызова функции encode_pipe_construction()")
        ActiveCell.range("B2").AddComment ("json строка с параметрами температурной модели." & _
                                           "установите ссылку на результат вызова функции encode_t_model() ")
        ActiveCell.range("B3").AddComment ("Номер гидравлической корреляции для многофазного потока:" & _
                                           "0 - Беггса Брилла (любые углы наклона); 1 - Ансари (вертикальный восходящий поток) " & _
                                           "2 - Унифицированная TUFFP (любые углы наклона); 3 - Грея (вертикальный восходящий), 4 - Хайгедорна Брауна (вертикальный восходящий поток) " & _
                                           "10 - поток газа; ")
        ActiveCell.range("B4").AddComment ("флаг направления расчета относительно координат:" & _
                                           "0 - расчет против координаты; 1 - расчет по координате. ")
        ActiveCell.range("B5").AddComment ("калибровочный коэффициент на гравитацию, множитель для слагаемого в уравнении Дарси Вейсбаха")
        
        ActiveCell.range("B6").AddComment ("калибровочный коэффициент на трение, множитель для слагаемого в уравнении Дарси Вейсбаха " & _
                                           " ")
        ActiveCell.range("B7").AddComment ("начальная координата для расчета участка трубы." & _
                                           "если не задана, расчет ведется для всей длины указанной в траектории")
        ActiveCell.range("B8").AddComment ("конечная координата для расчета участка трубы" & _
                                           "если не задана, расчет ведется для всей длины указанной в траектории")
        ActiveCell.range("B9").AddComment ("флаг расчета барботажа - движения газа через неподвижный столб воды")
        
        ActiveCell.range("B10").AddComment ("результирующий json с параметрами трубы необходимыми для расчета")
    End If
    ActiveCell.range("B10").Select
End Sub
Function get_name(base_name As String) As String
    Dim nms
    Dim name_done As Boolean
    Dim i As Integer
    Dim iname As Integer
    Dim isafe As Integer
    Dim set_name As String
    
    set_name = base_name
    name_done = False
    iname = 1
    isafe = 1
    Set nms = ActiveWorkbook.Names
    If nms.Count > 0 Then
        Do
            For i = 1 To nms.Count
                If nms(i).name = set_name Then
                    set_name = base_name & "_" & CStr(iname)
                    iname = iname + 1
                    Exit For
                End If
                If i = nms.Count Then name_done = True
            Next i
            isafe = isafe + 1
            If isafe = 10000 Then
                set_name = base_name & "_error_" & CStr(iname)
                Exit Do
            End If
        Loop Until name_done
    End If
    get_name = set_name
End Function
Sub ChangeCharts()
    Application.ScreenUpdating = False 'This line disable the on screen update for better performance, the blink you see, you could delete both lanes but it will run slower
    Dim myChart As ChartObject
    For Each myChart In ActiveSheet.ChartObjects
        myChart.Chart.Refresh
    Next myChart
    Application.ScreenUpdating = True 'This line reenable the on screen update for better performance, the blink you see, you could delete both lanes but it will run slower
End Sub
Private Sub MakeParameter( _
        Dst As range, _
        ParameterName, _
        Dimensions() As Variant, _
        DefaultValue)
        
' Cоздает поле ввода параметра с возможностью выбора единиц измерения и пересчетом в другие единицы измерения
' Dst - ячейка, куда будет помещен вывод, займет 6 ячеек вправо
' ParameterName - название параметра, например "Проницаемость"
' Dimensions() - динамический массив строк с разделителем вертикальной чертой, например "мД|x*1.02e-15|x/1.02e-15|L"
'   массив должен начинаться с нулевого элемента (option base 0), х - латинская буква для формулы перевода
'   размерность | формула для перевода в СИ | формула для перевода из СИ | L или R
'   если в конце указана буква L - это размерность по умолчанию слева, R - справа
'   если две буквы LR - размерности слева и справа по умолчанию будут одинаковые
'   если хотите что-то сломать, задав другой формат, то будьте уверены - сломаете! удачи!
' DefaultValue - значение параметра по умолчанию
    
    Dst.Value = ParameterName
    Dim s() As String ' Для подстрок
    Dim sOutD As String, sOutL As String, sBrackets As String
    Dim M, DefaultDimensionL, DefaultDimensionR
    Dim sOutR As String
        
    sOutD = "" ' Строка размерностей
    sOutL = "" ' Строка формулы перевода
    sBrackets = ""
    For Each M In Dimensions
        s = Split(M, "|") ' Будут созданы строки s(0) s(1) s(2) и возможно s(3)
        s(1) = Replace(s(1), "x", "RC[-2]") ' Букву х нужно заменить на относительную ссылку
        sOutL = sOutL & "IF(" & "RC[-1]=""" & s(0) & """," & s(1) & "," ' Формулы пересчета для внесения в формулу IFS
        sBrackets = sBrackets & ")" ' Запоминаем одну закрывающую скобку
    Next
    sOutL = sOutL & sBrackets ' Закрываем все скобки
    sOutR = "="
    sBrackets = ""
    For Each M In Dimensions
        s = Split(M, "|") ' Будут созданы строки s(0) s(1) s(2) и возможно s(3)
        s(2) = Replace(s(2), "x", sOutL)
        sOutD = sOutD & "," & s(0) ' Названия размерностей
        sOutR = sOutR & "IF(" & "RC[+1]=""" & s(0) & """," & s(2) & "," ' Формулы пересчета для внесения в формулу IFS
        sBrackets = sBrackets & ")" ' Запоминаем одну закрывающую скобку
        If UBound(s) > 2 Then
            If s(3) = "L" Then DefaultDimensionL = s(0) ' Размерность по умолчанию слева
            If s(3) = "R" Then DefaultDimensionR = s(0) ' Размерность по умолчанию справа
            If s(3) = "LR" Then
                DefaultDimensionL = s(0) ' Размерность по умолчанию и там и там
                DefaultDimensionR = s(0)
            End If
        End If
    Next
    sOutR = sOutR & sBrackets ' Закрываем все скобки
    Dst.Cells(1, 3).Value = DefaultValue ' Значение по умолчанию
    Dst.Cells(1, 4).Validation.Delete ' Выпадающий список размерностей
    Dst.Cells(1, 4).Validation.Add Type:=xlValidateList, Formula1:=sOutD
    Dst.Cells(1, 4).Value = DefaultDimensionL ' Размерность по умолчанию
    Dst.Cells(1, 5).Formula = sOutR ' Формула для пересчета в СИ
    Dst.Cells(1, 5).Font.ThemeColor = xlThemeColorDark1
    Dst.Cells(1, 5).Font.TintAndShade = -0.5
    Dst.Cells(1, 6).Validation.Delete ' Выпадающий список размерностей
    Dst.Cells(1, 6).Validation.Add Type:=xlValidateList, Formula1:=sOutD
    Dst.Cells(1, 6).Value = DefaultDimensionR ' Размерность по умолчанию
End Sub
Public Function promt_to_write(nrows As Integer, ncols As Integer, ttl As String) As Boolean
    Dim Place
    
    If Not promt Then
        promt_to_write = True
        Exit Function
    End If
    Set Place = ActiveCell
    Place.Resize(nrows, ncols).Select
    If MsgBox("Выделенная область будет изменена." & vbNewLine & "Продолжить?", vbYesNo + vbQuestion, ttl) = vbNo Then
        promt_to_write = False
    Else
        promt_to_write = True
    End If
    ActiveCell.Select
End Function
' Units converter from Leonid Igrevsky
Sub btn_units_converter(control As IRibbonControl)
On Error Resume Next
' Действие описано в функции MakeParameter
    
    Dim d() As Variant
    Dim Place
    
    Set Place = ActiveCell
    
    
    Place.Resize(8, 6).Select
    If promt Then
        If MsgBox("Выделенная область будет изменена." & vbNewLine & "Продолжить?", vbYesNo + vbQuestion, "Units Converter") = vbNo Then
            Place.Select
            Exit Sub
        End If
    End If
    Selection.Clear
    
    d = Array( _
        "Па" & ChrW(183) & "с" & "|x|x", _
        "мПа" & ChrW(183) & "с" & "|x/1000|x*1000|R", _
        "сП|x/1000|x*1000|L")
    MakeParameter Place.offset(0, 0), "Вязкость нефти", d, 5
    
    d = Array( _
        "Па|x|x", _
        "МПа|x*1000000|x/1000000", _
        "ат|x*98066.5|x/98066.5", _
        "кгс/см" & ChrW(178) & "|x*98066.5|x/98066.5", _
        "атм|x*101325|x/101325", _
        "psi|x*6894.76|x/6894.76|R", _
        "бар|x*100000|x/100000|L")
    MakeParameter Place.offset(1, 0), "Пластовое давление", d, 200
    d = Array( _
        "м" & ChrW(178) & "|x|x", _
        "Д|x*1.02e-12|x/1.02e-12", _
        "мД|x*1.02e-15|x/1.02e-15|LR")
    MakeParameter Place.offset(2, 0), "Проницаемость", d, 100
    d = Array( _
        ChrW(176) & "К|x|x", _
        ChrW(176) & "С|x+273.15|x-273.15|L", _
        ChrW(176) & "F|(x-32)*5/9+273.15|(x-273.15)*9/5+32|R")
    MakeParameter Place.offset(3, 0), "Температура", d, 100
    d = Array( _
        "м" & ChrW(179) & "/м" & ChrW(179) & "|x|x|L", _
        "scft/bbl|x*0.02832/0.158987|x/0.02832*0.158987", _
        "ft" & ChrW(179) & "/bbl|x*0.02832/0.158987|x/0.02832*0.158987|R")
    MakeParameter Place.offset(4, 0), "Газосодержание", d, 50
    d = Array( _
        "м|x|x", _
        "мм|x/1000|x*1000|L", _
        "см|x/100|x*100", _
        "in|x*0.0254|x/0.0254|R", _
        "ft|x*0.3048|x/0.3048")
    MakeParameter Place.offset(5, 0), "Радиус скважины", d, 73
    d = Array( _
        "м" & ChrW(179) & "/с|x|x", _
        "м" & ChrW(179) & "/сут|x/86400|x*86400|L", _
        "л/мин|x/60000|x*60000", _
        "л/сек|x/1000|x*1000", _
        "bpd|x*0.158987/86400|x/0.158987*86400|R", _
        "ft" & ChrW(179) & "/сут|x*0.02832/86400|x/0.02832*86400")
    MakeParameter Place.offset(6, 0), "Дебит скважины", d, 100
    d = Array( _
        "кг/м" & ChrW(179) & "|x|x|L", _
        "г/cм" & ChrW(179) & "|x*1000|x/1000", _
        "lb/gal|x*119.8|x/119.8", _
        "lb/in" & ChrW(179) & "|x*27679.9|x/27679.9", _
        "lb/ft" & ChrW(179) & "|x*16.01846|x/16.01846", _
        ChrW(176) & "API|141.5*1000/(131.5+x)|141.5*1000/x-131.5|R")
    MakeParameter Place.offset(7, 0), "Плотность нефти", d, 850
End Sub
Sub btn_ribbon_motor_slip(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 6, 0 To 1)
    
    If Not promt_to_write(7, 2, "esp motor slip") Then Exit Sub
    
    arr(0, 0) = "s":             arr(0, 1) = 0.05
    arr(1, 0) = "f_Hz":          arr(1, 1) = 50
    arr(2, 0) = "U_lin_V":       arr(2, 1) = 1000
    arr(3, 0) = "motor_json":    arr(3, 1) = "=encode_ESP_motor(2)"
    arr(4, 0) = "cable_json":    arr(4, 1) = "=encode_ESP_cable()"
    arr(5, 0) = "param":         arr(5, 1) = ""
    arr(6, 0) = "motor mom":     arr(6, 1) = "=ESP_motor_calc_slip(R[-6]C,R[-5]C,R[-4]C,R[-3]C,R[-2]C,R[-1]C)"
    
    ActiveCell.range("A1:B7") = arr
    ActiveCell.range("B1:B3").Interior.Color = clrUserInput
    ActiveCell.range("B4:B5").Interior.Color = clrIntermediateCalc
    ActiveCell.range("B6:B6").Interior.Color = clrUserInput
    ActiveCell.range("A1:A7").Interior.Color = clrGrayText
    ActiveCell.range("B7").Interior.Color = clrCalculated
    ActiveCell.range("B7").name = get_name("motor_slip")
    
End Sub
Sub btn_ribbon_motor_mom(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 6, 0 To 1)
    
    If Not promt_to_write(7, 2, "esp motor mom") Then Exit Sub
    
    arr(0, 0) = "M_Nm":          arr(0, 1) = 30
    arr(1, 0) = "f_Hz":          arr(1, 1) = 50
    arr(2, 0) = "U_lin_V":       arr(2, 1) = 1000
    arr(3, 0) = "motor_json":    arr(3, 1) = "=encode_ESP_motor()"
    arr(4, 0) = "cable_json":    arr(4, 1) = "=encode_ESP_cable()"
    arr(5, 0) = "param":         arr(5, 1) = ""
    arr(6, 0) = "motor mom":     arr(6, 1) = "=ESP_motor_calc_mom(R[-6]C,R[-5]C,R[-4]C,R[-3]C,R[-2]C,R[-1]C)"
    
    ActiveCell.range("A1:B7") = arr
    ActiveCell.range("B1:B3").Interior.Color = clrUserInput
    ActiveCell.range("B4:B5").Interior.Color = clrIntermediateCalc
    ActiveCell.range("B6:B6").Interior.Color = clrUserInput
    ActiveCell.range("A1:A7").Interior.Color = clrGrayText
    ActiveCell.range("B7").Interior.Color = clrCalculated
    ActiveCell.range("B7").name = get_name("motor_mom")
    
End Sub
Sub btn_ribbon_motor_json(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 15, 0 To 1)
    
    If Not promt_to_write(15, 2, "esp cable json") Then Exit Sub
    
    arr(0, 0) = "motor_ID":          arr(0, 1) = 0
    arr(1, 0) = "power_nom_kW":      arr(1, 1) = 30
    arr(2, 0) = "U_nom_lin_V":       arr(2, 1) = 1000
    arr(3, 0) = "f_nom_Hz":          arr(3, 1) = 50
    arr(4, 0) = "eff_nom_fr":        arr(4, 1) = 0.82
    arr(5, 0) = "cosphi_nom_fr":     arr(5, 1) = 0.88
    arr(6, 0) = "slip_nom_fr":       arr(6, 1) = 0.053
    arr(7, 0) = "f_surf_Hz":         arr(7, 1) = 50
    arr(8, 0) = "power_fact_kW":     arr(8, 1) = 40
    arr(9, 0) = "d_od_mm":           arr(9, 1) = 117
    arr(10, 0) = "lambda_":          arr(10, 1) = 2.8
    arr(11, 0) = "alpha0":           arr(11, 1) = 0.5
    arr(12, 0) = "xi0":              arr(12, 1) = 1.05
    arr(13, 0) = "Ixcf":             arr(13, 1) = 0.4
    arr(14, 0) = "motor_json":       arr(14, 1) = "=encode_ESP_motor(R[-14]C, R[-13]C, R[-12]C, R[-11]C , R[-10]C , R[-9]C, R[-8]C, R[-7]C, R[-6]C, R[-5]C, R[-4]C, R[-3]C, R[-2]C, R[-1]C)"
    ActiveCell.range("A1:B15") = arr
    ActiveCell.range("B1:B14").Interior.Color = clrUserInput
    ActiveCell.range("A1:A15").Interior.Color = clrGrayText
    ActiveCell.range("B15").Interior.Color = clrCalculated
    ActiveCell.range("B15").name = get_name("motor_json")
    
    If comment Then
        ActiveCell.range("B1").AddComment ("Тип погружного электрического двигателя УЭЦН (ПЭД):" & _
                                           "0 - постоянные значения параметров для разных мощностей," & _
                                           "1 - параметры задаются по каталожным кривым, ассинхронный, " & _
                                           "2 - параметры задаются по схеме замещения, ассинхронный")
        ActiveCell.range("B2").AddComment ("номинальная мощность двигателя кВт " & _
                                           " " & _
                                           " ")
        ActiveCell.range("B3").AddComment ("номинальное напряжение двигателя, линейное, В" & _
                                           " " & _
                                           " ")
        ActiveCell.range("B4").AddComment ("номинальная частота тока, Гц" & _
                                           " " & _
                                           " ")
        ActiveCell.range("B5").AddComment ("КПД при номинальном режиме работы. " & _
                                           " " & _
                                           " ")
        ActiveCell.range("B6").AddComment ("коэффициент мощности при номинальной мощности " & _
                                           " " & _
                                           " ")
        ActiveCell.range("B7").AddComment ("скольжение при номинальном режиме работы " & _
                                           " " & _
                                           " ")
        ActiveCell.range("B8").AddComment ("частота тока на поверхности, фактическая" & _
                                           " " & _
                                           " ")
        ActiveCell.range("B9").AddComment ("фактическая потребляемая мощность" & _
                                           " " & _
                                           " ")
        ActiveCell.range("B10").AddComment ("внешний диаметр - габарит ПЭД" & _
                                            " " & _
                                            " ")
        ActiveCell.range("B11").AddComment ("перегрузочный коэффициент отношение макс момента к номинальному для motor_ID = 2 ")
        ActiveCell.range("B12").AddComment ("параметр. влияет на положение макс КПД.для motor_ID = 2")
        ActiveCell.range("B13").AddComment ("параметр. определяет потери момента при холостом ходе. для motor_ID = 2")
        ActiveCell.range("B14").AddComment ("поправка на поправку тока холостого хода при изменении напряжения и частоты от минимальной. для motor_ID = 2")
    End If
End Sub
Sub btn_ribbon_cable_json(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 7, 0 To 1)
    
    If Not promt_to_write(8, 2, "esp motor json") Then Exit Sub
    
    arr(0, 0) = "length_m":          arr(0, 1) = 1000
    arr(1, 0) = "cable_R_Omkm":      arr(1, 1) = 1.18
    arr(2, 0) = "cable_X_Omkm":      arr(2, 1) = 0.01
    arr(3, 0) = "cable_t_max_C":     arr(3, 1) = 120
    arr(4, 0) = "manufacturer":      arr(4, 1) = "default"
    arr(5, 0) = "name":              arr(5, 1) = "default"
    arr(6, 0) = "d_mm":              arr(6, 1) = 16
    arr(7, 0) = "motor_json":        arr(7, 1) = "=encode_ESP_cable( R[-7]C, R[-6]C, R[-5]C, R[-4]C, R[-3]C, R[-2]C, R[-1]C)"
    ActiveCell.range("A1:B8") = arr
    ActiveCell.range("B1:B7").Interior.Color = clrUserInput
    ActiveCell.range("A1:A8").Interior.Color = clrGrayText
    ActiveCell.range("B8").Interior.Color = clrCalculated
    ActiveCell.range("B8").name = get_name("cable_json")
    
    If comment Then
        ActiveCell.range("B1").AddComment ("длина кабельной линии, м")
        ActiveCell.range("B2").AddComment ("удельное активное сопротивление")
        ActiveCell.range("B3").AddComment ("удельное реактивное сопротивление")
        ActiveCell.range("B4").AddComment ("максимально допустимая температура")
        ActiveCell.range("B5").AddComment ("производитель, для справки")
        ActiveCell.range("B6").AddComment ("название кабеля, для справки")
        ActiveCell.range("B7").AddComment ("диаметр жилы")
    End If
End Sub
Sub btn_ribbon_gassep_json(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 12, 0 To 1)
    
    If Not promt_to_write(13, 2, "esp motor json") Then Exit Sub
    
    arr(0, 0) = "separation_mode":   arr(0, 1) = 0
    arr(1, 0) = "gassep_type":       arr(1, 1) = 0
    arr(2, 0) = "natsep_type":       arr(2, 1) = 0
    arr(3, 0) = "psep_man_atma":     arr(3, 1) = 50
    arr(4, 0) = "tsep_man_C":        arr(4, 1) = 30
    arr(5, 0) = "ksep_gassep_man_d": arr(5, 1) = 0.5
    arr(6, 0) = "ksep_nat_man_d":    arr(6, 1) = 0.5
    arr(7, 0) = "ksep_liquid_man_d": arr(7, 1) = 0.5
    arr(8, 0) = "M_Nm":              arr(9, 1) = 0
    arr(9, 0) = "manufacturer":      arr(9, 1) = ""
    arr(10, 0) = "name":             arr(10, 1) = ""
    arr(11, 0) = "length_m":         arr(11, 1) = 1
    arr(12, 0) = "ESP_separation":   arr(12, 1) = "=encode_ESP_separation(R[-12]C, R[-11]C, R[-10]C, R[-9]C, R[-8]C,  R[-7]C, R[-6]C, R[-5]C, R[-4]C, R[-3]C, R[-2]C, R[-1]C)"
    ActiveCell.range("A1:B13") = arr
    ActiveCell.range("B1:B12").Interior.Color = clrUserInput
    ActiveCell.range("A1:A13").Interior.Color = clrGrayText
    ActiveCell.range("B13").Interior.Color = clrCalculated
    ActiveCell.range("B13").name = get_name("separation_json")
    
    If comment Then
        Call ActiveCell.range("B1").AddComment("режим расчета сепарации:" & _
                                               "0 - расчет по корреляции;" & _
                                               "1 - давление сепарации задается явно, величины рассчитываются по корреляции;" & _
                                               "2 - давление и величина задается явно;" & _
                                               "3 - давление и величина задается полностью явно;" & _
                                               " ")
        ActiveCell.range("B2").AddComment ("тип газосепаратора - номер из базы")
        ActiveCell.range("B3").AddComment ("модель расчета естественной сепарации")
        ActiveCell.range("B4").AddComment ("давление для расчета коэффициента сепарации заданного вручную")
        ActiveCell.range("B5").AddComment ("температура для расчета коэффициента сепарации заданного вручную")
        ActiveCell.range("B6").AddComment ("коэффициент сепарации ГС заданный вручную")
        ActiveCell.range("B7").AddComment ("коэффициент сепарации натуральной заданный вручную")
        ActiveCell.range("B8").AddComment ("коэффициент сепарации жидкости для режима потока через затруб")
        ActiveCell.range("B9").AddComment ("момент на валу")
        ActiveCell.range("B10").AddComment ("---")
        ActiveCell.range("B11").AddComment ("---")
    End If
End Sub
Sub btn_ribbon_gassep_calc(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 5, 0 To 1)
    
    If Not promt_to_write(6, 2, "esp gassep calc") Then Exit Sub
    
    arr(0, 0) = "gassep_type":       arr(0, 1) = 1
    arr(1, 0) = "gas_fraction":      arr(1, 1) = 0.4
    arr(2, 0) = "q_liq_sm3day":      arr(2, 1) = 50
    arr(3, 0) = "freq_Hz":           arr(3, 1) = 50
    arr(4, 0) = "gassep_name":       arr(4, 1) = "=ESP_gassep_name(R[-4]C)"
    arr(5, 0) = "ksep_gassep_d":     arr(5, 1) = "=ESP_gassep_ksep_d(R[-5]C,R[-4]C,R[-3]C,R[-2]C)"
    ActiveCell.range("A1:B6") = arr
    ActiveCell.range("B1:B6").Interior.Color = clrUserInput
    ActiveCell.range("A1:A6").Interior.Color = clrGrayText
    ActiveCell.range("B5").Interior.Color = clrIntermediateCalc
    ActiveCell.range("B6").Interior.Color = clrCalculated
    ActiveCell.range("B6").name = get_name("ksep_gassep")
    If comment Then
        Call ActiveCell.range("B1").AddComment("Тип газосепаратора:" & _
                                               "Целое число от 1 до 29." & _
                                               "Параметры на основе стендовых испытаний в РГУ нефти и газа имени И.М.Губкина" & _
                                               " ")
        ActiveCell.range("B2").AddComment ("Доля газа в потоке на входе в газосепаратор. Расходная, объемная.")
        ActiveCell.range("B3").AddComment ("Дебит жидкости на входе в газосепаратор")
        ActiveCell.range("B4").AddComment ("Частота вращения газосепаратора от 40 до 60 Гц")
        ActiveCell.range("B5").AddComment ("Название газосепаратора из базы результатов")
        ActiveCell.range("B6").AddComment ("коэффициент сепарации ГС расчетный")
    End If
End Sub
Sub btn_ribbon_natsep_calc(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 10, 0 To 1)
    
    If Not promt_to_write(11, 2, "esp gassep calc") Then Exit Sub
    
    arr(0, 0) = "feed":                  arr(0, 1) = "=encode_feed()"
    arr(1, 0) = "p_intake_atma":         arr(1, 1) = 50
    arr(2, 0) = "t_intake_C":            arr(2, 1) = 50
    arr(3, 0) = "d_intake_mm":           arr(3, 1) = 92
    arr(4, 0) = "d_casing_mm":           arr(4, 1) = 125
    arr(5, 0) = "model":                 arr(5, 1) = 0
    arr(6, 0) = "pkv_prod_period_ratio": arr(6, 1) = 0.5
    arr(7, 0) = "h_intake_m":            arr(7, 1) = 0.1
    arr(8, 0) = "h_perf_m":              arr(8, 1) = 1
    arr(9, 0) = "param":                 arr(9, 1) = "{""show_array"":1,""gas_goes_into_solution"":1,""calibr_li"":2}"
    arr(10, 0) = "ksep_nat":
    ActiveCell.range("A1:B11") = arr
    ActiveCell.range("B1:B11").Interior.Color = clrUserInput
    ActiveCell.range("A1:A11").Interior.Color = clrGrayText
    ActiveCell.range("B1").Interior.Color = clrIntermediateCalc
    ActiveCell.range("B11").Interior.Color = clrCalculated
    ActiveCell.range("B11:E12").FormulaArray = "=well_ksep_natural_d(R[-10]C,R[-9]C,R[-8]C,R[-7]C,R[-6]C,R[-5]C,R[-4]C,R[-3]C,R[-2]C,R[-1]C)"
    
    ActiveCell.range("B11").name = get_name("ksep_natsep")
    If comment Then
        Call ActiveCell.range("B1").AddComment("Параметры потока перед приемом насоса")
        ActiveCell.range("B2").AddComment ("Давление на приеме ЭЦН.")
        ActiveCell.range("B3").AddComment ("Температура на приеме ЭЦН")
        ActiveCell.range("B4").AddComment ("Диаметр приемной сетки насоса")
        ActiveCell.range("B5").AddComment ("Диаметр эксплуатационной колонны в зоне приема ЭЦН")
        ActiveCell.range("B6").AddComment ("тип модели: 0 - упрощенная Маркеса для ЭЦН, 1 - механистическая Маркеса для ЭЦН," & _
                                            "2  - механистическая с ЭЦН ниже перфорации," & _
                                            "3  - механистическая для скважин ПКВ.")
        ActiveCell.range("B6").AddComment ("Для модели ПКВ отношение времени работы ЭЦН к периоду")
        ActiveCell.range("B7").AddComment ("Для механистической модели - высота приемной сетки ЭЦН")
        ActiveCell.range("B8").AddComment ("Для модели ниже перфорации - длина перфорации")
    End If
End Sub
Sub btn_ribbon_gassep_plot(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 11, 0 To 3)
    Dim top_rng As range
    Dim i As Integer
    
    Set top_rng = ActiveCell
    
    If Not promt_to_write(12, 4, "esp gassep calc") Then Exit Sub
    
    arr(0, 0) = "gassep_type":       arr(0, 1) = 1
    arr(1, 0) = "gas_fraction":      arr(1, 1) = 0.4
    arr(2, 0) = "q_liq_sm3day":      arr(2, 1) = 50
    arr(3, 0) = "freq_Hz":           arr(3, 1) = 50
    arr(4, 0) = "gassep_name":       arr(4, 1) = "=ESP_gassep_name(R[-4]C)"
    arr(5, 0) = "q_liq_min":         arr(5, 1) = 1
    arr(6, 0) = "q_liq_max":         arr(6, 1) = 500
    arr(7, 0) = "gas_fraction_min":  arr(7, 1) = 0
    arr(8, 0) = "gas_fraction_max":  arr(8, 1) = 1
    arr(9, 0) = "q_liq_list":        arr(9, 1) = "=encode_linspace(R[-4]C,R[-3]C,20)"
    arr(10, 0) = "gas_frac_list":    arr(10, 1) = "=encode_linspace(R[-3]C,R[-2]C,20)"
    arr(11, 0) = "qliq":     arr(11, 1) = "ksep gassep":       arr(11, 2) = "gas frac": arr(11, 3) = "ksep gassep":
    
    
    ActiveCell.range("A1:D12") = arr
    ActiveCell.range("B1:B12").Interior.Color = clrUserInput
    ActiveCell.range("A1:A12").Interior.Color = clrGrayText
'    ActiveCell.range("B5").Interior.Color = clrIntermediateCalc
'    ActiveCell.range("B6").Interior.Color = clrCalculated
'    ActiveCell.range("B6").name = get_name("ksep_gassep")
    top_rng.range("A13:A33").FormulaArray = "=decode_json(R[-3]C[1])"
    top_rng.range("C13:C33").FormulaArray = "=decode_json(R[-2]C[-1])"
    
    Dim s(1 To 4) As String
    Dim si As String, sii As String
    s(1) = top_rng.range("B1").Address
    s(2) = top_rng.range("B2").Address
    s(3) = top_rng.range("B3").Address
    s(4) = top_rng.range("B4").Address
    For i = 1 To 21
        si = top_rng.Cells(12 + i, 1).Address
        sii = top_rng.Cells(12 + i, 3).Address
        top_rng.range("B13:B33").Cells(i, 1) = "=ESP_gassep_ksep_d(" & s(1) & "," & s(2) & "," & si & "," & s(4) & ")"
        top_rng.range("B13:B33").Cells(i, 3) = "=ESP_gassep_ksep_d(" & s(1) & "," & sii & "," & s(3) & "," & s(4) & ")"
    Next i
    Dim diag
    Set diag = ActiveSheet.Shapes.AddChart2(240, xlXYScatterSmooth)
    With diag.Chart
        .SetSourceData source:=range(ActiveCell.range("A13:B33").Address)
         Application.CutCopyMode = False
        .SetElement (msoElementLegendBottom)
        .HasTitle = True
        .ChartTitle.Text = "gassep curve"
        .Axes(xlValue, xlPrimary).HasTitle = True
        .Axes(xlValue, xlPrimary).AxisTitle.Text = "Ksep"
        .Axes(xlCategory, xlPrimary).HasTitle = True
        .Axes(xlCategory, xlPrimary).AxisTitle.Text = "Qliq, sm3/day"
        .Parent.top = ActiveCell.Cells(1, 5).top
        .Parent.Left = ActiveCell.Cells(1, 5).Left
        .Parent.Height = ActiveCell.Cells(1, 5).range("I1:P25").Height
        .Parent.WIDTH = ActiveCell.Cells(1, 5).range("I1:P33").WIDTH
    End With
    
    Set diag = ActiveSheet.Shapes.AddChart2(240, xlXYScatterSmooth)
    With diag.Chart
        .SetSourceData source:=range(ActiveCell.range("C13:D33").Address)
         Application.CutCopyMode = False
        .SetElement (msoElementLegendBottom)
        .HasTitle = True
        .ChartTitle.Text = "gassep curve"
        .Axes(xlValue, xlPrimary).HasTitle = True
        .Axes(xlValue, xlPrimary).AxisTitle.Text = "Ksep"
        .Axes(xlCategory, xlPrimary).HasTitle = True
        .Axes(xlCategory, xlPrimary).AxisTitle.Text = "gas fraction"
        .Parent.top = ActiveCell.Cells(1, 5).top
        .Parent.Left = ActiveCell.Cells(1, 5).range("I1:O33").Left
        .Parent.Height = ActiveCell.Cells(1, 5).range("I1:P25").Height
        .Parent.WIDTH = ActiveCell.Cells(1, 5).range("I1:P33").WIDTH
    End With
End Sub
Sub btn_ribbon_natsep_plot(control As IRibbonControl)
On Error Resume Next
    Dim arr(0 To 14, 0 To 3)
    Dim top_rng As range
    Dim i As Integer
    
    Set top_rng = ActiveCell
    
    If Not promt_to_write(12, 4, "esp gassep calc") Then Exit Sub
    
    
    arr(0, 0) = "q_max":                 arr(0, 1) = 200
    arr(1, 0) = "q_list":                arr(1, 1) = "=encode_linspace(1,R[-1]C,20)"
    arr(2, 0) = "feed":                  arr(2, 1) = "=encode_feed_list(R[-1]C)"
    arr(3, 0) = "p_intake_atma":         arr(3, 1) = 50
    arr(4, 0) = "t_intake_C":            arr(4, 1) = 50
    arr(5, 0) = "d_intake_mm":           arr(5, 1) = 92
    arr(6, 0) = "d_casing_mm":           arr(6, 1) = 125
    arr(7, 0) = "model":                 arr(7, 1) = 0
    arr(8, 0) = "pkv_prod_period_ratio": arr(8, 1) = 0.5
    arr(9, 0) = "h_intake_m":            arr(9, 1) = 0.1
    arr(10, 0) = "h_perf_m":             arr(10, 1) = 1
    arr(11, 0) = "param":                arr(11, 1) = "{""show_array"":1,""gas_goes_into_solution"":1,""calibr_li"":2}"
    arr(12, 0) = "ksep_nat":             arr(12, 1) = "=well_ksep_natural_d(R[-10]C,R[-9]C,R[-8]C,R[-7]C,R[-6]C,R[-5]C,R[-4]C,R[-3]C,R[-2]C,R[-1]C)"
    arr(13, 0) = "qliq":     arr(13, 1) = "ksep natsep":     arr(13, 1) = "feed in pump"
    ActiveCell.range("A1:B14") = arr
    ActiveCell.range("B1:B14").Interior.Color = clrUserInput
    ActiveCell.range("A1:A14").Interior.Color = clrGrayText
    top_rng.range("A15:A35").FormulaArray = "=decode_json(R[-13]C[1])"
    top_rng.range("B15:B35").FormulaArray = "=decode_json(decode_json(R[-2]C,,""k_sep"",1))"
    top_rng.range("C15:C35").FormulaArray = "=decode_json(decode_json(R[-2]C[-1],,""feed"",1))"
    
    Dim diag
    Set diag = ActiveSheet.Shapes.AddChart2(240, xlXYScatterSmooth)
    With diag.Chart
        .SetSourceData source:=range(ActiveCell.range("A15:B35").Address)
         Application.CutCopyMode = False
        .SetElement (msoElementLegendBottom)
        .HasTitle = True
        .ChartTitle.Text = "gassep curve"
        .Axes(xlValue, xlPrimary).HasTitle = True
        .Axes(xlValue, xlPrimary).AxisTitle.Text = "Ksep"
        .Axes(xlCategory, xlPrimary).HasTitle = True
        .Axes(xlCategory, xlPrimary).AxisTitle.Text = "Qliq, sm3/day"
        .Parent.top = ActiveCell.Cells(1, 5).top
        .Parent.Left = ActiveCell.Cells(1, 5).Left
        .Parent.Height = ActiveCell.Cells(1, 5).range("I1:P25").Height
        .Parent.WIDTH = ActiveCell.Cells(1, 5).range("I1:P33").WIDTH
    End With
    
End Sub

